// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sub.proto

#include "sub.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_sub_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ServiceInfo_sub_2eproto;
namespace sub {
class ServiceInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServiceInfo> _instance;
} _ServiceInfo_default_instance_;
class Push_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Push_Request> _instance;
} _Push_Request_default_instance_;
class Push_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Push_Response> _instance;
} _Push_Response_default_instance_;
class PushDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Push> _instance;
} _Push_default_instance_;
class Add_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Add_Request> _instance;
} _Add_Request_default_instance_;
class AddDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Add> _instance;
} _Add_default_instance_;
class Del_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Del_Request> _instance;
} _Del_Request_default_instance_;
class DelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Del> _instance;
} _Del_default_instance_;
}  // namespace sub
static void InitDefaultsServiceInfo_sub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sub::_ServiceInfo_default_instance_;
    new (ptr) ::sub::ServiceInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sub::ServiceInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServiceInfo_sub_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServiceInfo_sub_2eproto}, {}};

static void InitDefaultsPush_Request_sub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sub::_Push_Request_default_instance_;
    new (ptr) ::sub::Push_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sub::Push_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Push_Request_sub_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPush_Request_sub_2eproto}, {
      &scc_info_ServiceInfo_sub_2eproto.base,}};

static void InitDefaultsPush_Response_sub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sub::_Push_Response_default_instance_;
    new (ptr) ::sub::Push_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sub::Push_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Push_Response_sub_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPush_Response_sub_2eproto}, {
      &scc_info_ServiceInfo_sub_2eproto.base,}};

static void InitDefaultsPush_sub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sub::_Push_default_instance_;
    new (ptr) ::sub::Push();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sub::Push::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Push_sub_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPush_sub_2eproto}, {}};

static void InitDefaultsAdd_Request_sub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sub::_Add_Request_default_instance_;
    new (ptr) ::sub::Add_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sub::Add_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Add_Request_sub_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAdd_Request_sub_2eproto}, {}};

static void InitDefaultsAdd_sub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sub::_Add_default_instance_;
    new (ptr) ::sub::Add();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sub::Add::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Add_sub_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAdd_sub_2eproto}, {}};

static void InitDefaultsDel_Request_sub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sub::_Del_Request_default_instance_;
    new (ptr) ::sub::Del_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sub::Del_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Del_Request_sub_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDel_Request_sub_2eproto}, {}};

static void InitDefaultsDel_sub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sub::_Del_default_instance_;
    new (ptr) ::sub::Del();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sub::Del::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Del_sub_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDel_sub_2eproto}, {}};

void InitDefaults_sub_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_ServiceInfo_sub_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Push_Request_sub_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Push_Response_sub_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Push_sub_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Add_Request_sub_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Add_sub_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Del_Request_sub_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Del_sub_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_sub_2eproto[8];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_sub_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_sub_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_sub_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sub::ServiceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sub::ServiceInfo, address_),
  PROTOBUF_FIELD_OFFSET(::sub::ServiceInfo, service_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sub::Push_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sub::Push_Request, area_id_),
  PROTOBUF_FIELD_OFFSET(::sub::Push_Request, rpc_),
  PROTOBUF_FIELD_OFFSET(::sub::Push_Request, http_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sub::Push_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sub::Push_Response, rpc_),
  PROTOBUF_FIELD_OFFSET(::sub::Push_Response, http_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sub::Push, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sub::Add_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sub::Add_Request, area_id_),
  PROTOBUF_FIELD_OFFSET(::sub::Add_Request, address_),
  PROTOBUF_FIELD_OFFSET(::sub::Add_Request, service_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sub::Add, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sub::Del_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sub::Del_Request, address_),
  PROTOBUF_FIELD_OFFSET(::sub::Del_Request, service_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sub::Del, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::sub::ServiceInfo)},
  { 7, -1, sizeof(::sub::Push_Request)},
  { 15, -1, sizeof(::sub::Push_Response)},
  { 22, -1, sizeof(::sub::Push)},
  { 27, -1, sizeof(::sub::Add_Request)},
  { 35, -1, sizeof(::sub::Add)},
  { 40, -1, sizeof(::sub::Del_Request)},
  { 47, -1, sizeof(::sub::Del)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::sub::_ServiceInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sub::_Push_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sub::_Push_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sub::_Push_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sub::_Add_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sub::_Add_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sub::_Del_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sub::_Del_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_sub_2eproto = {
  {}, AddDescriptors_sub_2eproto, "sub.proto", schemas,
  file_default_instances, TableStruct_sub_2eproto::offsets,
  file_level_metadata_sub_2eproto, 8, file_level_enum_descriptors_sub_2eproto, file_level_service_descriptors_sub_2eproto,
};

const char descriptor_table_protodef_sub_2eproto[] =
  "\n\tsub.proto\022\003sub\"/\n\013ServiceInfo\022\017\n\007addre"
  "ss\030\001 \001(\t\022\017\n\007service\030\002 \003(\t\"\254\001\n\004Push\032Y\n\007Re"
  "quest\022\017\n\007area_id\030\001 \001(\005\022\035\n\003rpc\030\002 \001(\0132\020.su"
  "b.ServiceInfo\022\036\n\004http\030\003 \001(\0132\020.sub.Servic"
  "eInfo\032I\n\010Response\022\035\n\003rpc\030\001 \001(\0132\020.sub.Ser"
  "viceInfo\022\036\n\004http\030\002 \001(\0132\020.sub.ServiceInfo"
  "\"C\n\003Add\032<\n\007Request\022\017\n\007area_id\030\001 \001(\005\022\017\n\007a"
  "ddress\030\002 \001(\t\022\017\n\007service\030\003 \001(\t\"2\n\003Del\032+\n\007"
  "Request\022\017\n\007address\030\001 \001(\t\022\017\n\007service\030\002 \001("
  "\tb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_sub_2eproto = {
  false, InitDefaults_sub_2eproto, 
  descriptor_table_protodef_sub_2eproto,
  "sub.proto", &assign_descriptors_table_sub_2eproto, 369,
};

void AddDescriptors_sub_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_sub_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_sub_2eproto = []() { AddDescriptors_sub_2eproto(); return true; }();
namespace sub {

// ===================================================================

void ServiceInfo::InitAsDefaultInstance() {
}
class ServiceInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceInfo::kAddressFieldNumber;
const int ServiceInfo::kServiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceInfo::ServiceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sub.ServiceInfo)
}
ServiceInfo::ServiceInfo(const ServiceInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      service_(from.service_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  // @@protoc_insertion_point(copy_constructor:sub.ServiceInfo)
}

void ServiceInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ServiceInfo_sub_2eproto.base);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ServiceInfo::~ServiceInfo() {
  // @@protoc_insertion_point(destructor:sub.ServiceInfo)
  SharedDtor();
}

void ServiceInfo::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServiceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServiceInfo& ServiceInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ServiceInfo_sub_2eproto.base);
  return *internal_default_instance();
}


void ServiceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:sub.ServiceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_.Clear();
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ServiceInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ServiceInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string address = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("sub.ServiceInfo.address");
        object = msg->mutable_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string service = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("sub.ServiceInfo.service");
          object = msg->add_service();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ServiceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sub.ServiceInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sub.ServiceInfo.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string service = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service(this->service_size() - 1).data(),
            static_cast<int>(this->service(this->service_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sub.ServiceInfo.service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sub.ServiceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sub.ServiceInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ServiceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sub.ServiceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sub.ServiceInfo.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // repeated string service = 2;
  for (int i = 0, n = this->service_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service(i).data(), static_cast<int>(this->service(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sub.ServiceInfo.service");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->service(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sub.ServiceInfo)
}

::google::protobuf::uint8* ServiceInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sub.ServiceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sub.ServiceInfo.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // repeated string service = 2;
  for (int i = 0, n = this->service_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service(i).data(), static_cast<int>(this->service(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sub.ServiceInfo.service");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->service(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sub.ServiceInfo)
  return target;
}

size_t ServiceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sub.ServiceInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string service = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->service_size());
  for (int i = 0, n = this->service_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->service(i));
  }

  // string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServiceInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sub.ServiceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceInfo* source =
      ::google::protobuf::DynamicCastToGenerated<ServiceInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sub.ServiceInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sub.ServiceInfo)
    MergeFrom(*source);
  }
}

void ServiceInfo::MergeFrom(const ServiceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sub.ServiceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  service_.MergeFrom(from.service_);
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void ServiceInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sub.ServiceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceInfo::CopyFrom(const ServiceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sub.ServiceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceInfo::IsInitialized() const {
  return true;
}

void ServiceInfo::Swap(ServiceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceInfo::InternalSwap(ServiceInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  service_.InternalSwap(CastToBase(&other->service_));
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ServiceInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_sub_2eproto);
  return ::file_level_metadata_sub_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Push_Request::InitAsDefaultInstance() {
  ::sub::_Push_Request_default_instance_._instance.get_mutable()->rpc_ = const_cast< ::sub::ServiceInfo*>(
      ::sub::ServiceInfo::internal_default_instance());
  ::sub::_Push_Request_default_instance_._instance.get_mutable()->http_ = const_cast< ::sub::ServiceInfo*>(
      ::sub::ServiceInfo::internal_default_instance());
}
class Push_Request::HasBitSetters {
 public:
  static const ::sub::ServiceInfo& rpc(const Push_Request* msg);
  static const ::sub::ServiceInfo& http(const Push_Request* msg);
};

const ::sub::ServiceInfo&
Push_Request::HasBitSetters::rpc(const Push_Request* msg) {
  return *msg->rpc_;
}
const ::sub::ServiceInfo&
Push_Request::HasBitSetters::http(const Push_Request* msg) {
  return *msg->http_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Push_Request::kAreaIdFieldNumber;
const int Push_Request::kRpcFieldNumber;
const int Push_Request::kHttpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Push_Request::Push_Request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sub.Push.Request)
}
Push_Request::Push_Request(const Push_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rpc()) {
    rpc_ = new ::sub::ServiceInfo(*from.rpc_);
  } else {
    rpc_ = nullptr;
  }
  if (from.has_http()) {
    http_ = new ::sub::ServiceInfo(*from.http_);
  } else {
    http_ = nullptr;
  }
  area_id_ = from.area_id_;
  // @@protoc_insertion_point(copy_constructor:sub.Push.Request)
}

void Push_Request::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Push_Request_sub_2eproto.base);
  ::memset(&rpc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&area_id_) -
      reinterpret_cast<char*>(&rpc_)) + sizeof(area_id_));
}

Push_Request::~Push_Request() {
  // @@protoc_insertion_point(destructor:sub.Push.Request)
  SharedDtor();
}

void Push_Request::SharedDtor() {
  if (this != internal_default_instance()) delete rpc_;
  if (this != internal_default_instance()) delete http_;
}

void Push_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Push_Request& Push_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Push_Request_sub_2eproto.base);
  return *internal_default_instance();
}


void Push_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:sub.Push.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && rpc_ != nullptr) {
    delete rpc_;
  }
  rpc_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && http_ != nullptr) {
    delete http_;
  }
  http_ = nullptr;
  area_id_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Push_Request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Push_Request*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 area_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_area_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .sub.ServiceInfo rpc = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::sub::ServiceInfo::_InternalParse;
        object = msg->mutable_rpc();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .sub.ServiceInfo http = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::sub::ServiceInfo::_InternalParse;
        object = msg->mutable_http();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Push_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sub.Push.Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 area_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sub.ServiceInfo rpc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rpc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sub.ServiceInfo http = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_http()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sub.Push.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sub.Push.Request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Push_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sub.Push.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 area_id = 1;
  if (this->area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->area_id(), output);
  }

  // .sub.ServiceInfo rpc = 2;
  if (this->has_rpc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::rpc(this), output);
  }

  // .sub.ServiceInfo http = 3;
  if (this->has_http()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::http(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sub.Push.Request)
}

::google::protobuf::uint8* Push_Request::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sub.Push.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 area_id = 1;
  if (this->area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->area_id(), target);
  }

  // .sub.ServiceInfo rpc = 2;
  if (this->has_rpc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::rpc(this), target);
  }

  // .sub.ServiceInfo http = 3;
  if (this->has_http()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::http(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sub.Push.Request)
  return target;
}

size_t Push_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sub.Push.Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sub.ServiceInfo rpc = 2;
  if (this->has_rpc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rpc_);
  }

  // .sub.ServiceInfo http = 3;
  if (this->has_http()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *http_);
  }

  // int32 area_id = 1;
  if (this->area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->area_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Push_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sub.Push.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Push_Request* source =
      ::google::protobuf::DynamicCastToGenerated<Push_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sub.Push.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sub.Push.Request)
    MergeFrom(*source);
  }
}

void Push_Request::MergeFrom(const Push_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sub.Push.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rpc()) {
    mutable_rpc()->::sub::ServiceInfo::MergeFrom(from.rpc());
  }
  if (from.has_http()) {
    mutable_http()->::sub::ServiceInfo::MergeFrom(from.http());
  }
  if (from.area_id() != 0) {
    set_area_id(from.area_id());
  }
}

void Push_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sub.Push.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Push_Request::CopyFrom(const Push_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sub.Push.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Push_Request::IsInitialized() const {
  return true;
}

void Push_Request::Swap(Push_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Push_Request::InternalSwap(Push_Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(rpc_, other->rpc_);
  swap(http_, other->http_);
  swap(area_id_, other->area_id_);
}

::google::protobuf::Metadata Push_Request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_sub_2eproto);
  return ::file_level_metadata_sub_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Push_Response::InitAsDefaultInstance() {
  ::sub::_Push_Response_default_instance_._instance.get_mutable()->rpc_ = const_cast< ::sub::ServiceInfo*>(
      ::sub::ServiceInfo::internal_default_instance());
  ::sub::_Push_Response_default_instance_._instance.get_mutable()->http_ = const_cast< ::sub::ServiceInfo*>(
      ::sub::ServiceInfo::internal_default_instance());
}
class Push_Response::HasBitSetters {
 public:
  static const ::sub::ServiceInfo& rpc(const Push_Response* msg);
  static const ::sub::ServiceInfo& http(const Push_Response* msg);
};

const ::sub::ServiceInfo&
Push_Response::HasBitSetters::rpc(const Push_Response* msg) {
  return *msg->rpc_;
}
const ::sub::ServiceInfo&
Push_Response::HasBitSetters::http(const Push_Response* msg) {
  return *msg->http_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Push_Response::kRpcFieldNumber;
const int Push_Response::kHttpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Push_Response::Push_Response()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sub.Push.Response)
}
Push_Response::Push_Response(const Push_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rpc()) {
    rpc_ = new ::sub::ServiceInfo(*from.rpc_);
  } else {
    rpc_ = nullptr;
  }
  if (from.has_http()) {
    http_ = new ::sub::ServiceInfo(*from.http_);
  } else {
    http_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:sub.Push.Response)
}

void Push_Response::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Push_Response_sub_2eproto.base);
  ::memset(&rpc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&http_) -
      reinterpret_cast<char*>(&rpc_)) + sizeof(http_));
}

Push_Response::~Push_Response() {
  // @@protoc_insertion_point(destructor:sub.Push.Response)
  SharedDtor();
}

void Push_Response::SharedDtor() {
  if (this != internal_default_instance()) delete rpc_;
  if (this != internal_default_instance()) delete http_;
}

void Push_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Push_Response& Push_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Push_Response_sub_2eproto.base);
  return *internal_default_instance();
}


void Push_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:sub.Push.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && rpc_ != nullptr) {
    delete rpc_;
  }
  rpc_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && http_ != nullptr) {
    delete http_;
  }
  http_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Push_Response::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Push_Response*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .sub.ServiceInfo rpc = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::sub::ServiceInfo::_InternalParse;
        object = msg->mutable_rpc();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .sub.ServiceInfo http = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::sub::ServiceInfo::_InternalParse;
        object = msg->mutable_http();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Push_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sub.Push.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sub.ServiceInfo rpc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rpc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sub.ServiceInfo http = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_http()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sub.Push.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sub.Push.Response)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Push_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sub.Push.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sub.ServiceInfo rpc = 1;
  if (this->has_rpc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::rpc(this), output);
  }

  // .sub.ServiceInfo http = 2;
  if (this->has_http()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::http(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sub.Push.Response)
}

::google::protobuf::uint8* Push_Response::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sub.Push.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sub.ServiceInfo rpc = 1;
  if (this->has_rpc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::rpc(this), target);
  }

  // .sub.ServiceInfo http = 2;
  if (this->has_http()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::http(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sub.Push.Response)
  return target;
}

size_t Push_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sub.Push.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sub.ServiceInfo rpc = 1;
  if (this->has_rpc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rpc_);
  }

  // .sub.ServiceInfo http = 2;
  if (this->has_http()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *http_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Push_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sub.Push.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Push_Response* source =
      ::google::protobuf::DynamicCastToGenerated<Push_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sub.Push.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sub.Push.Response)
    MergeFrom(*source);
  }
}

void Push_Response::MergeFrom(const Push_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sub.Push.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rpc()) {
    mutable_rpc()->::sub::ServiceInfo::MergeFrom(from.rpc());
  }
  if (from.has_http()) {
    mutable_http()->::sub::ServiceInfo::MergeFrom(from.http());
  }
}

void Push_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sub.Push.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Push_Response::CopyFrom(const Push_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sub.Push.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Push_Response::IsInitialized() const {
  return true;
}

void Push_Response::Swap(Push_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Push_Response::InternalSwap(Push_Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(rpc_, other->rpc_);
  swap(http_, other->http_);
}

::google::protobuf::Metadata Push_Response::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_sub_2eproto);
  return ::file_level_metadata_sub_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Push::InitAsDefaultInstance() {
}
class Push::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Push::Push()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sub.Push)
}
Push::Push(const Push& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sub.Push)
}

void Push::SharedCtor() {
}

Push::~Push() {
  // @@protoc_insertion_point(destructor:sub.Push)
  SharedDtor();
}

void Push::SharedDtor() {
}

void Push::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Push& Push::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Push_sub_2eproto.base);
  return *internal_default_instance();
}


void Push::Clear() {
// @@protoc_insertion_point(message_clear_start:sub.Push)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Push::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Push*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Push::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sub.Push)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:sub.Push)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sub.Push)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Push::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sub.Push)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sub.Push)
}

::google::protobuf::uint8* Push::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sub.Push)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sub.Push)
  return target;
}

size_t Push::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sub.Push)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Push::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sub.Push)
  GOOGLE_DCHECK_NE(&from, this);
  const Push* source =
      ::google::protobuf::DynamicCastToGenerated<Push>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sub.Push)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sub.Push)
    MergeFrom(*source);
  }
}

void Push::MergeFrom(const Push& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sub.Push)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Push::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sub.Push)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Push::CopyFrom(const Push& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sub.Push)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Push::IsInitialized() const {
  return true;
}

void Push::Swap(Push* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Push::InternalSwap(Push* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Push::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_sub_2eproto);
  return ::file_level_metadata_sub_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Add_Request::InitAsDefaultInstance() {
}
class Add_Request::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Add_Request::kAreaIdFieldNumber;
const int Add_Request::kAddressFieldNumber;
const int Add_Request::kServiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Add_Request::Add_Request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sub.Add.Request)
}
Add_Request::Add_Request(const Add_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service().size() > 0) {
    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  area_id_ = from.area_id_;
  // @@protoc_insertion_point(copy_constructor:sub.Add.Request)
}

void Add_Request::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Add_Request_sub_2eproto.base);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_id_ = 0;
}

Add_Request::~Add_Request() {
  // @@protoc_insertion_point(destructor:sub.Add.Request)
  SharedDtor();
}

void Add_Request::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Add_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Add_Request& Add_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Add_Request_sub_2eproto.base);
  return *internal_default_instance();
}


void Add_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:sub.Add.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_id_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Add_Request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Add_Request*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 area_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_area_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string address = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("sub.Add.Request.address");
        object = msg->mutable_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string service = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("sub.Add.Request.service");
        object = msg->mutable_service();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Add_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sub.Add.Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 area_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sub.Add.Request.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service().data(), static_cast<int>(this->service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sub.Add.Request.service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sub.Add.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sub.Add.Request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Add_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sub.Add.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 area_id = 1;
  if (this->area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->area_id(), output);
  }

  // string address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sub.Add.Request.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->address(), output);
  }

  // string service = 3;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), static_cast<int>(this->service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sub.Add.Request.service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->service(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sub.Add.Request)
}

::google::protobuf::uint8* Add_Request::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sub.Add.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 area_id = 1;
  if (this->area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->area_id(), target);
  }

  // string address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sub.Add.Request.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->address(), target);
  }

  // string service = 3;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), static_cast<int>(this->service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sub.Add.Request.service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->service(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sub.Add.Request)
  return target;
}

size_t Add_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sub.Add.Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 2;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string service = 3;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service());
  }

  // int32 area_id = 1;
  if (this->area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->area_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Add_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sub.Add.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Add_Request* source =
      ::google::protobuf::DynamicCastToGenerated<Add_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sub.Add.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sub.Add.Request)
    MergeFrom(*source);
  }
}

void Add_Request::MergeFrom(const Add_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sub.Add.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.service().size() > 0) {

    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  if (from.area_id() != 0) {
    set_area_id(from.area_id());
  }
}

void Add_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sub.Add.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Add_Request::CopyFrom(const Add_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sub.Add.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Add_Request::IsInitialized() const {
  return true;
}

void Add_Request::Swap(Add_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Add_Request::InternalSwap(Add_Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  service_.Swap(&other->service_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(area_id_, other->area_id_);
}

::google::protobuf::Metadata Add_Request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_sub_2eproto);
  return ::file_level_metadata_sub_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Add::InitAsDefaultInstance() {
}
class Add::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Add::Add()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sub.Add)
}
Add::Add(const Add& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sub.Add)
}

void Add::SharedCtor() {
}

Add::~Add() {
  // @@protoc_insertion_point(destructor:sub.Add)
  SharedDtor();
}

void Add::SharedDtor() {
}

void Add::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Add& Add::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Add_sub_2eproto.base);
  return *internal_default_instance();
}


void Add::Clear() {
// @@protoc_insertion_point(message_clear_start:sub.Add)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Add::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Add*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Add::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sub.Add)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:sub.Add)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sub.Add)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Add::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sub.Add)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sub.Add)
}

::google::protobuf::uint8* Add::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sub.Add)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sub.Add)
  return target;
}

size_t Add::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sub.Add)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Add::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sub.Add)
  GOOGLE_DCHECK_NE(&from, this);
  const Add* source =
      ::google::protobuf::DynamicCastToGenerated<Add>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sub.Add)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sub.Add)
    MergeFrom(*source);
  }
}

void Add::MergeFrom(const Add& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sub.Add)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Add::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sub.Add)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Add::CopyFrom(const Add& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sub.Add)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Add::IsInitialized() const {
  return true;
}

void Add::Swap(Add* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Add::InternalSwap(Add* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Add::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_sub_2eproto);
  return ::file_level_metadata_sub_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Del_Request::InitAsDefaultInstance() {
}
class Del_Request::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Del_Request::kAddressFieldNumber;
const int Del_Request::kServiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Del_Request::Del_Request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sub.Del.Request)
}
Del_Request::Del_Request(const Del_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service().size() > 0) {
    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  // @@protoc_insertion_point(copy_constructor:sub.Del.Request)
}

void Del_Request::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Del_Request_sub_2eproto.base);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Del_Request::~Del_Request() {
  // @@protoc_insertion_point(destructor:sub.Del.Request)
  SharedDtor();
}

void Del_Request::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Del_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Del_Request& Del_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Del_Request_sub_2eproto.base);
  return *internal_default_instance();
}


void Del_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:sub.Del.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Del_Request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Del_Request*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string address = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("sub.Del.Request.address");
        object = msg->mutable_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string service = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("sub.Del.Request.service");
        object = msg->mutable_service();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Del_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sub.Del.Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sub.Del.Request.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service().data(), static_cast<int>(this->service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sub.Del.Request.service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sub.Del.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sub.Del.Request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Del_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sub.Del.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sub.Del.Request.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // string service = 2;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), static_cast<int>(this->service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sub.Del.Request.service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->service(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sub.Del.Request)
}

::google::protobuf::uint8* Del_Request::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sub.Del.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sub.Del.Request.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // string service = 2;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), static_cast<int>(this->service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sub.Del.Request.service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->service(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sub.Del.Request)
  return target;
}

size_t Del_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sub.Del.Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string service = 2;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Del_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sub.Del.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Del_Request* source =
      ::google::protobuf::DynamicCastToGenerated<Del_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sub.Del.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sub.Del.Request)
    MergeFrom(*source);
  }
}

void Del_Request::MergeFrom(const Del_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sub.Del.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.service().size() > 0) {

    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
}

void Del_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sub.Del.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Del_Request::CopyFrom(const Del_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sub.Del.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Del_Request::IsInitialized() const {
  return true;
}

void Del_Request::Swap(Del_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Del_Request::InternalSwap(Del_Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  service_.Swap(&other->service_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Del_Request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_sub_2eproto);
  return ::file_level_metadata_sub_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Del::InitAsDefaultInstance() {
}
class Del::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Del::Del()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sub.Del)
}
Del::Del(const Del& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sub.Del)
}

void Del::SharedCtor() {
}

Del::~Del() {
  // @@protoc_insertion_point(destructor:sub.Del)
  SharedDtor();
}

void Del::SharedDtor() {
}

void Del::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Del& Del::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Del_sub_2eproto.base);
  return *internal_default_instance();
}


void Del::Clear() {
// @@protoc_insertion_point(message_clear_start:sub.Del)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Del::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Del*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Del::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sub.Del)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:sub.Del)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sub.Del)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Del::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sub.Del)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sub.Del)
}

::google::protobuf::uint8* Del::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sub.Del)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sub.Del)
  return target;
}

size_t Del::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sub.Del)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Del::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sub.Del)
  GOOGLE_DCHECK_NE(&from, this);
  const Del* source =
      ::google::protobuf::DynamicCastToGenerated<Del>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sub.Del)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sub.Del)
    MergeFrom(*source);
  }
}

void Del::MergeFrom(const Del& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sub.Del)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Del::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sub.Del)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Del::CopyFrom(const Del& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sub.Del)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Del::IsInitialized() const {
  return true;
}

void Del::Swap(Del* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Del::InternalSwap(Del* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Del::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_sub_2eproto);
  return ::file_level_metadata_sub_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sub
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::sub::ServiceInfo* Arena::CreateMaybeMessage< ::sub::ServiceInfo >(Arena* arena) {
  return Arena::CreateInternal< ::sub::ServiceInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::sub::Push_Request* Arena::CreateMaybeMessage< ::sub::Push_Request >(Arena* arena) {
  return Arena::CreateInternal< ::sub::Push_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::sub::Push_Response* Arena::CreateMaybeMessage< ::sub::Push_Response >(Arena* arena) {
  return Arena::CreateInternal< ::sub::Push_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::sub::Push* Arena::CreateMaybeMessage< ::sub::Push >(Arena* arena) {
  return Arena::CreateInternal< ::sub::Push >(arena);
}
template<> PROTOBUF_NOINLINE ::sub::Add_Request* Arena::CreateMaybeMessage< ::sub::Add_Request >(Arena* arena) {
  return Arena::CreateInternal< ::sub::Add_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::sub::Add* Arena::CreateMaybeMessage< ::sub::Add >(Arena* arena) {
  return Arena::CreateInternal< ::sub::Add >(arena);
}
template<> PROTOBUF_NOINLINE ::sub::Del_Request* Arena::CreateMaybeMessage< ::sub::Del_Request >(Arena* arena) {
  return Arena::CreateInternal< ::sub::Del_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::sub::Del* Arena::CreateMaybeMessage< ::sub::Del >(Arena* arena) {
  return Arena::CreateInternal< ::sub::Del >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
