// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: c2s.proto

#ifndef PROTOBUF_INCLUDED_c2s_2eproto
#define PROTOBUF_INCLUDED_c2s_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_c2s_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_c2s_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[11]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_c2s_2eproto();
namespace c2s {
class AccountLogin;
class AccountLoginDefaultTypeInternal;
extern AccountLoginDefaultTypeInternal _AccountLogin_default_instance_;
class AccountLogin_Request;
class AccountLogin_RequestDefaultTypeInternal;
extern AccountLogin_RequestDefaultTypeInternal _AccountLogin_Request_default_instance_;
class AccountLogin_Response;
class AccountLogin_ResponseDefaultTypeInternal;
extern AccountLogin_ResponseDefaultTypeInternal _AccountLogin_Response_default_instance_;
class AccountRegister;
class AccountRegisterDefaultTypeInternal;
extern AccountRegisterDefaultTypeInternal _AccountRegister_default_instance_;
class AccountRegister_Request;
class AccountRegister_RequestDefaultTypeInternal;
extern AccountRegister_RequestDefaultTypeInternal _AccountRegister_Request_default_instance_;
class AccountRegister_Response;
class AccountRegister_ResponseDefaultTypeInternal;
extern AccountRegister_ResponseDefaultTypeInternal _AccountRegister_Response_default_instance_;
class GateLogin;
class GateLoginDefaultTypeInternal;
extern GateLoginDefaultTypeInternal _GateLogin_default_instance_;
class GateLogin_Request;
class GateLogin_RequestDefaultTypeInternal;
extern GateLogin_RequestDefaultTypeInternal _GateLogin_Request_default_instance_;
class GateLogout;
class GateLogoutDefaultTypeInternal;
extern GateLogoutDefaultTypeInternal _GateLogout_default_instance_;
class GateLogout_Request;
class GateLogout_RequestDefaultTypeInternal;
extern GateLogout_RequestDefaultTypeInternal _GateLogout_Request_default_instance_;
class ServerInfo;
class ServerInfoDefaultTypeInternal;
extern ServerInfoDefaultTypeInternal _ServerInfo_default_instance_;
}  // namespace c2s
namespace google {
namespace protobuf {
template<> ::c2s::AccountLogin* Arena::CreateMaybeMessage<::c2s::AccountLogin>(Arena*);
template<> ::c2s::AccountLogin_Request* Arena::CreateMaybeMessage<::c2s::AccountLogin_Request>(Arena*);
template<> ::c2s::AccountLogin_Response* Arena::CreateMaybeMessage<::c2s::AccountLogin_Response>(Arena*);
template<> ::c2s::AccountRegister* Arena::CreateMaybeMessage<::c2s::AccountRegister>(Arena*);
template<> ::c2s::AccountRegister_Request* Arena::CreateMaybeMessage<::c2s::AccountRegister_Request>(Arena*);
template<> ::c2s::AccountRegister_Response* Arena::CreateMaybeMessage<::c2s::AccountRegister_Response>(Arena*);
template<> ::c2s::GateLogin* Arena::CreateMaybeMessage<::c2s::GateLogin>(Arena*);
template<> ::c2s::GateLogin_Request* Arena::CreateMaybeMessage<::c2s::GateLogin_Request>(Arena*);
template<> ::c2s::GateLogout* Arena::CreateMaybeMessage<::c2s::GateLogout>(Arena*);
template<> ::c2s::GateLogout_Request* Arena::CreateMaybeMessage<::c2s::GateLogout_Request>(Arena*);
template<> ::c2s::ServerInfo* Arena::CreateMaybeMessage<::c2s::ServerInfo>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace c2s {

// ===================================================================

class ServerInfo :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.ServerInfo) */ {
 public:
  ServerInfo();
  virtual ~ServerInfo();

  ServerInfo(const ServerInfo& from);

  inline ServerInfo& operator=(const ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerInfo(ServerInfo&& from) noexcept
    : ServerInfo() {
    *this = ::std::move(from);
  }

  inline ServerInfo& operator=(ServerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ServerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerInfo* internal_default_instance() {
    return reinterpret_cast<const ServerInfo*>(
               &_ServerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ServerInfo* other);
  friend void swap(ServerInfo& a, ServerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerInfo* New() const final {
    return CreateMaybeMessage<ServerInfo>(nullptr);
  }

  ServerInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ServerInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ServerInfo& from);
  void MergeFrom(const ServerInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ServerId = 1;
  void clear_serverid();
  static const int kServerIdFieldNumber = 1;
  const ::std::string& serverid() const;
  void set_serverid(const ::std::string& value);
  #if LANG_CXX11
  void set_serverid(::std::string&& value);
  #endif
  void set_serverid(const char* value);
  void set_serverid(const char* value, size_t size);
  ::std::string* mutable_serverid();
  ::std::string* release_serverid();
  void set_allocated_serverid(::std::string* serverid);

  // string ServerName = 2;
  void clear_servername();
  static const int kServerNameFieldNumber = 2;
  const ::std::string& servername() const;
  void set_servername(const ::std::string& value);
  #if LANG_CXX11
  void set_servername(::std::string&& value);
  #endif
  void set_servername(const char* value);
  void set_servername(const char* value, size_t size);
  ::std::string* mutable_servername();
  ::std::string* release_servername();
  void set_allocated_servername(::std::string* servername);

  // int32 ServerState = 3;
  void clear_serverstate();
  static const int kServerStateFieldNumber = 3;
  ::google::protobuf::int32 serverstate() const;
  void set_serverstate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:c2s.ServerInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr serverid_;
  ::google::protobuf::internal::ArenaStringPtr servername_;
  ::google::protobuf::int32 serverstate_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class AccountLogin_Request :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.AccountLogin.Request) */ {
 public:
  AccountLogin_Request();
  virtual ~AccountLogin_Request();

  AccountLogin_Request(const AccountLogin_Request& from);

  inline AccountLogin_Request& operator=(const AccountLogin_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountLogin_Request(AccountLogin_Request&& from) noexcept
    : AccountLogin_Request() {
    *this = ::std::move(from);
  }

  inline AccountLogin_Request& operator=(AccountLogin_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AccountLogin_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountLogin_Request* internal_default_instance() {
    return reinterpret_cast<const AccountLogin_Request*>(
               &_AccountLogin_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(AccountLogin_Request* other);
  friend void swap(AccountLogin_Request& a, AccountLogin_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountLogin_Request* New() const final {
    return CreateMaybeMessage<AccountLogin_Request>(nullptr);
  }

  AccountLogin_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AccountLogin_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AccountLogin_Request& from);
  void MergeFrom(const AccountLogin_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AccountLogin_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Account = 1;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // string Token = 2;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string Passwd = 3;
  void clear_passwd();
  static const int kPasswdFieldNumber = 3;
  const ::std::string& passwd() const;
  void set_passwd(const ::std::string& value);
  #if LANG_CXX11
  void set_passwd(::std::string&& value);
  #endif
  void set_passwd(const char* value);
  void set_passwd(const char* value, size_t size);
  ::std::string* mutable_passwd();
  ::std::string* release_passwd();
  void set_allocated_passwd(::std::string* passwd);

  // string LoginDev = 4;
  void clear_logindev();
  static const int kLoginDevFieldNumber = 4;
  const ::std::string& logindev() const;
  void set_logindev(const ::std::string& value);
  #if LANG_CXX11
  void set_logindev(::std::string&& value);
  #endif
  void set_logindev(const char* value);
  void set_logindev(const char* value, size_t size);
  ::std::string* mutable_logindev();
  ::std::string* release_logindev();
  void set_allocated_logindev(::std::string* logindev);

  // @@protoc_insertion_point(class_scope:c2s.AccountLogin.Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr passwd_;
  ::google::protobuf::internal::ArenaStringPtr logindev_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class AccountLogin_Response :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.AccountLogin.Response) */ {
 public:
  AccountLogin_Response();
  virtual ~AccountLogin_Response();

  AccountLogin_Response(const AccountLogin_Response& from);

  inline AccountLogin_Response& operator=(const AccountLogin_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountLogin_Response(AccountLogin_Response&& from) noexcept
    : AccountLogin_Response() {
    *this = ::std::move(from);
  }

  inline AccountLogin_Response& operator=(AccountLogin_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AccountLogin_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountLogin_Response* internal_default_instance() {
    return reinterpret_cast<const AccountLogin_Response*>(
               &_AccountLogin_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(AccountLogin_Response* other);
  friend void swap(AccountLogin_Response& a, AccountLogin_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountLogin_Response* New() const final {
    return CreateMaybeMessage<AccountLogin_Response>(nullptr);
  }

  AccountLogin_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AccountLogin_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AccountLogin_Response& from);
  void MergeFrom(const AccountLogin_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AccountLogin_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .c2s.ServerInfo ServerList = 5;
  int serverlist_size() const;
  void clear_serverlist();
  static const int kServerListFieldNumber = 5;
  ::c2s::ServerInfo* mutable_serverlist(int index);
  ::google::protobuf::RepeatedPtrField< ::c2s::ServerInfo >*
      mutable_serverlist();
  const ::c2s::ServerInfo& serverlist(int index) const;
  ::c2s::ServerInfo* add_serverlist();
  const ::google::protobuf::RepeatedPtrField< ::c2s::ServerInfo >&
      serverlist() const;

  // string Token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string GateToken = 2;
  void clear_gatetoken();
  static const int kGateTokenFieldNumber = 2;
  const ::std::string& gatetoken() const;
  void set_gatetoken(const ::std::string& value);
  #if LANG_CXX11
  void set_gatetoken(::std::string&& value);
  #endif
  void set_gatetoken(const char* value);
  void set_gatetoken(const char* value, size_t size);
  ::std::string* mutable_gatetoken();
  ::std::string* release_gatetoken();
  void set_allocated_gatetoken(::std::string* gatetoken);

  // int64 LastLoginTime = 4;
  void clear_lastlogintime();
  static const int kLastLoginTimeFieldNumber = 4;
  ::google::protobuf::int64 lastlogintime() const;
  void set_lastlogintime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:c2s.AccountLogin.Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::c2s::ServerInfo > serverlist_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr gatetoken_;
  ::google::protobuf::int64 lastlogintime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class AccountLogin :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.AccountLogin) */ {
 public:
  AccountLogin();
  virtual ~AccountLogin();

  AccountLogin(const AccountLogin& from);

  inline AccountLogin& operator=(const AccountLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountLogin(AccountLogin&& from) noexcept
    : AccountLogin() {
    *this = ::std::move(from);
  }

  inline AccountLogin& operator=(AccountLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AccountLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountLogin* internal_default_instance() {
    return reinterpret_cast<const AccountLogin*>(
               &_AccountLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(AccountLogin* other);
  friend void swap(AccountLogin& a, AccountLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountLogin* New() const final {
    return CreateMaybeMessage<AccountLogin>(nullptr);
  }

  AccountLogin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AccountLogin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AccountLogin& from);
  void MergeFrom(const AccountLogin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AccountLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AccountLogin_Request Request;
  typedef AccountLogin_Response Response;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:c2s.AccountLogin)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class AccountRegister_Request :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.AccountRegister.Request) */ {
 public:
  AccountRegister_Request();
  virtual ~AccountRegister_Request();

  AccountRegister_Request(const AccountRegister_Request& from);

  inline AccountRegister_Request& operator=(const AccountRegister_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountRegister_Request(AccountRegister_Request&& from) noexcept
    : AccountRegister_Request() {
    *this = ::std::move(from);
  }

  inline AccountRegister_Request& operator=(AccountRegister_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AccountRegister_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountRegister_Request* internal_default_instance() {
    return reinterpret_cast<const AccountRegister_Request*>(
               &_AccountRegister_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(AccountRegister_Request* other);
  friend void swap(AccountRegister_Request& a, AccountRegister_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountRegister_Request* New() const final {
    return CreateMaybeMessage<AccountRegister_Request>(nullptr);
  }

  AccountRegister_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AccountRegister_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AccountRegister_Request& from);
  void MergeFrom(const AccountRegister_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AccountRegister_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Account = 1;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // string Passwd = 2;
  void clear_passwd();
  static const int kPasswdFieldNumber = 2;
  const ::std::string& passwd() const;
  void set_passwd(const ::std::string& value);
  #if LANG_CXX11
  void set_passwd(::std::string&& value);
  #endif
  void set_passwd(const char* value);
  void set_passwd(const char* value, size_t size);
  ::std::string* mutable_passwd();
  ::std::string* release_passwd();
  void set_allocated_passwd(::std::string* passwd);

  // string LoginDev = 3;
  void clear_logindev();
  static const int kLoginDevFieldNumber = 3;
  const ::std::string& logindev() const;
  void set_logindev(const ::std::string& value);
  #if LANG_CXX11
  void set_logindev(::std::string&& value);
  #endif
  void set_logindev(const char* value);
  void set_logindev(const char* value, size_t size);
  ::std::string* mutable_logindev();
  ::std::string* release_logindev();
  void set_allocated_logindev(::std::string* logindev);

  // @@protoc_insertion_point(class_scope:c2s.AccountRegister.Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr passwd_;
  ::google::protobuf::internal::ArenaStringPtr logindev_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class AccountRegister_Response :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.AccountRegister.Response) */ {
 public:
  AccountRegister_Response();
  virtual ~AccountRegister_Response();

  AccountRegister_Response(const AccountRegister_Response& from);

  inline AccountRegister_Response& operator=(const AccountRegister_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountRegister_Response(AccountRegister_Response&& from) noexcept
    : AccountRegister_Response() {
    *this = ::std::move(from);
  }

  inline AccountRegister_Response& operator=(AccountRegister_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AccountRegister_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountRegister_Response* internal_default_instance() {
    return reinterpret_cast<const AccountRegister_Response*>(
               &_AccountRegister_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(AccountRegister_Response* other);
  friend void swap(AccountRegister_Response& a, AccountRegister_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountRegister_Response* New() const final {
    return CreateMaybeMessage<AccountRegister_Response>(nullptr);
  }

  AccountRegister_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AccountRegister_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AccountRegister_Response& from);
  void MergeFrom(const AccountRegister_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AccountRegister_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:c2s.AccountRegister.Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class AccountRegister :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.AccountRegister) */ {
 public:
  AccountRegister();
  virtual ~AccountRegister();

  AccountRegister(const AccountRegister& from);

  inline AccountRegister& operator=(const AccountRegister& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountRegister(AccountRegister&& from) noexcept
    : AccountRegister() {
    *this = ::std::move(from);
  }

  inline AccountRegister& operator=(AccountRegister&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AccountRegister& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountRegister* internal_default_instance() {
    return reinterpret_cast<const AccountRegister*>(
               &_AccountRegister_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(AccountRegister* other);
  friend void swap(AccountRegister& a, AccountRegister& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountRegister* New() const final {
    return CreateMaybeMessage<AccountRegister>(nullptr);
  }

  AccountRegister* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AccountRegister>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AccountRegister& from);
  void MergeFrom(const AccountRegister& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AccountRegister* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AccountRegister_Request Request;
  typedef AccountRegister_Response Response;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:c2s.AccountRegister)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class GateLogin_Request :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.GateLogin.Request) */ {
 public:
  GateLogin_Request();
  virtual ~GateLogin_Request();

  GateLogin_Request(const GateLogin_Request& from);

  inline GateLogin_Request& operator=(const GateLogin_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GateLogin_Request(GateLogin_Request&& from) noexcept
    : GateLogin_Request() {
    *this = ::std::move(from);
  }

  inline GateLogin_Request& operator=(GateLogin_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GateLogin_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GateLogin_Request* internal_default_instance() {
    return reinterpret_cast<const GateLogin_Request*>(
               &_GateLogin_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(GateLogin_Request* other);
  friend void swap(GateLogin_Request& a, GateLogin_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GateLogin_Request* New() const final {
    return CreateMaybeMessage<GateLogin_Request>(nullptr);
  }

  GateLogin_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GateLogin_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GateLogin_Request& from);
  void MergeFrom(const GateLogin_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GateLogin_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:c2s.GateLogin.Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class GateLogin :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.GateLogin) */ {
 public:
  GateLogin();
  virtual ~GateLogin();

  GateLogin(const GateLogin& from);

  inline GateLogin& operator=(const GateLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GateLogin(GateLogin&& from) noexcept
    : GateLogin() {
    *this = ::std::move(from);
  }

  inline GateLogin& operator=(GateLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GateLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GateLogin* internal_default_instance() {
    return reinterpret_cast<const GateLogin*>(
               &_GateLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(GateLogin* other);
  friend void swap(GateLogin& a, GateLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GateLogin* New() const final {
    return CreateMaybeMessage<GateLogin>(nullptr);
  }

  GateLogin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GateLogin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GateLogin& from);
  void MergeFrom(const GateLogin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GateLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GateLogin_Request Request;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:c2s.GateLogin)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class GateLogout_Request :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.GateLogout.Request) */ {
 public:
  GateLogout_Request();
  virtual ~GateLogout_Request();

  GateLogout_Request(const GateLogout_Request& from);

  inline GateLogout_Request& operator=(const GateLogout_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GateLogout_Request(GateLogout_Request&& from) noexcept
    : GateLogout_Request() {
    *this = ::std::move(from);
  }

  inline GateLogout_Request& operator=(GateLogout_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GateLogout_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GateLogout_Request* internal_default_instance() {
    return reinterpret_cast<const GateLogout_Request*>(
               &_GateLogout_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(GateLogout_Request* other);
  friend void swap(GateLogout_Request& a, GateLogout_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GateLogout_Request* New() const final {
    return CreateMaybeMessage<GateLogout_Request>(nullptr);
  }

  GateLogout_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GateLogout_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GateLogout_Request& from);
  void MergeFrom(const GateLogout_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GateLogout_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:c2s.GateLogout.Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class GateLogout :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.GateLogout) */ {
 public:
  GateLogout();
  virtual ~GateLogout();

  GateLogout(const GateLogout& from);

  inline GateLogout& operator=(const GateLogout& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GateLogout(GateLogout&& from) noexcept
    : GateLogout() {
    *this = ::std::move(from);
  }

  inline GateLogout& operator=(GateLogout&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GateLogout& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GateLogout* internal_default_instance() {
    return reinterpret_cast<const GateLogout*>(
               &_GateLogout_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(GateLogout* other);
  friend void swap(GateLogout& a, GateLogout& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GateLogout* New() const final {
    return CreateMaybeMessage<GateLogout>(nullptr);
  }

  GateLogout* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GateLogout>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GateLogout& from);
  void MergeFrom(const GateLogout& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GateLogout* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GateLogout_Request Request;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:c2s.GateLogout)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ServerInfo

// string ServerId = 1;
inline void ServerInfo::clear_serverid() {
  serverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServerInfo::serverid() const {
  // @@protoc_insertion_point(field_get:c2s.ServerInfo.ServerId)
  return serverid_.GetNoArena();
}
inline void ServerInfo::set_serverid(const ::std::string& value) {
  
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.ServerInfo.ServerId)
}
#if LANG_CXX11
inline void ServerInfo::set_serverid(::std::string&& value) {
  
  serverid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.ServerInfo.ServerId)
}
#endif
inline void ServerInfo::set_serverid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.ServerInfo.ServerId)
}
inline void ServerInfo::set_serverid(const char* value, size_t size) {
  
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.ServerInfo.ServerId)
}
inline ::std::string* ServerInfo::mutable_serverid() {
  
  // @@protoc_insertion_point(field_mutable:c2s.ServerInfo.ServerId)
  return serverid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServerInfo::release_serverid() {
  // @@protoc_insertion_point(field_release:c2s.ServerInfo.ServerId)
  
  return serverid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerInfo::set_allocated_serverid(::std::string* serverid) {
  if (serverid != nullptr) {
    
  } else {
    
  }
  serverid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serverid);
  // @@protoc_insertion_point(field_set_allocated:c2s.ServerInfo.ServerId)
}

// string ServerName = 2;
inline void ServerInfo::clear_servername() {
  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServerInfo::servername() const {
  // @@protoc_insertion_point(field_get:c2s.ServerInfo.ServerName)
  return servername_.GetNoArena();
}
inline void ServerInfo::set_servername(const ::std::string& value) {
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.ServerInfo.ServerName)
}
#if LANG_CXX11
inline void ServerInfo::set_servername(::std::string&& value) {
  
  servername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.ServerInfo.ServerName)
}
#endif
inline void ServerInfo::set_servername(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.ServerInfo.ServerName)
}
inline void ServerInfo::set_servername(const char* value, size_t size) {
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.ServerInfo.ServerName)
}
inline ::std::string* ServerInfo::mutable_servername() {
  
  // @@protoc_insertion_point(field_mutable:c2s.ServerInfo.ServerName)
  return servername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServerInfo::release_servername() {
  // @@protoc_insertion_point(field_release:c2s.ServerInfo.ServerName)
  
  return servername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerInfo::set_allocated_servername(::std::string* servername) {
  if (servername != nullptr) {
    
  } else {
    
  }
  servername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servername);
  // @@protoc_insertion_point(field_set_allocated:c2s.ServerInfo.ServerName)
}

// int32 ServerState = 3;
inline void ServerInfo::clear_serverstate() {
  serverstate_ = 0;
}
inline ::google::protobuf::int32 ServerInfo::serverstate() const {
  // @@protoc_insertion_point(field_get:c2s.ServerInfo.ServerState)
  return serverstate_;
}
inline void ServerInfo::set_serverstate(::google::protobuf::int32 value) {
  
  serverstate_ = value;
  // @@protoc_insertion_point(field_set:c2s.ServerInfo.ServerState)
}

// -------------------------------------------------------------------

// AccountLogin_Request

// string Account = 1;
inline void AccountLogin_Request::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountLogin_Request::account() const {
  // @@protoc_insertion_point(field_get:c2s.AccountLogin.Request.Account)
  return account_.GetNoArena();
}
inline void AccountLogin_Request::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.AccountLogin.Request.Account)
}
#if LANG_CXX11
inline void AccountLogin_Request::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.AccountLogin.Request.Account)
}
#endif
inline void AccountLogin_Request::set_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.AccountLogin.Request.Account)
}
inline void AccountLogin_Request::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.AccountLogin.Request.Account)
}
inline ::std::string* AccountLogin_Request::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:c2s.AccountLogin.Request.Account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountLogin_Request::release_account() {
  // @@protoc_insertion_point(field_release:c2s.AccountLogin.Request.Account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountLogin_Request::set_allocated_account(::std::string* account) {
  if (account != nullptr) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:c2s.AccountLogin.Request.Account)
}

// string Token = 2;
inline void AccountLogin_Request::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountLogin_Request::token() const {
  // @@protoc_insertion_point(field_get:c2s.AccountLogin.Request.Token)
  return token_.GetNoArena();
}
inline void AccountLogin_Request::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.AccountLogin.Request.Token)
}
#if LANG_CXX11
inline void AccountLogin_Request::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.AccountLogin.Request.Token)
}
#endif
inline void AccountLogin_Request::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.AccountLogin.Request.Token)
}
inline void AccountLogin_Request::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.AccountLogin.Request.Token)
}
inline ::std::string* AccountLogin_Request::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:c2s.AccountLogin.Request.Token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountLogin_Request::release_token() {
  // @@protoc_insertion_point(field_release:c2s.AccountLogin.Request.Token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountLogin_Request::set_allocated_token(::std::string* token) {
  if (token != nullptr) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:c2s.AccountLogin.Request.Token)
}

// string Passwd = 3;
inline void AccountLogin_Request::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountLogin_Request::passwd() const {
  // @@protoc_insertion_point(field_get:c2s.AccountLogin.Request.Passwd)
  return passwd_.GetNoArena();
}
inline void AccountLogin_Request::set_passwd(const ::std::string& value) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.AccountLogin.Request.Passwd)
}
#if LANG_CXX11
inline void AccountLogin_Request::set_passwd(::std::string&& value) {
  
  passwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.AccountLogin.Request.Passwd)
}
#endif
inline void AccountLogin_Request::set_passwd(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.AccountLogin.Request.Passwd)
}
inline void AccountLogin_Request::set_passwd(const char* value, size_t size) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.AccountLogin.Request.Passwd)
}
inline ::std::string* AccountLogin_Request::mutable_passwd() {
  
  // @@protoc_insertion_point(field_mutable:c2s.AccountLogin.Request.Passwd)
  return passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountLogin_Request::release_passwd() {
  // @@protoc_insertion_point(field_release:c2s.AccountLogin.Request.Passwd)
  
  return passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountLogin_Request::set_allocated_passwd(::std::string* passwd) {
  if (passwd != nullptr) {
    
  } else {
    
  }
  passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:c2s.AccountLogin.Request.Passwd)
}

// string LoginDev = 4;
inline void AccountLogin_Request::clear_logindev() {
  logindev_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountLogin_Request::logindev() const {
  // @@protoc_insertion_point(field_get:c2s.AccountLogin.Request.LoginDev)
  return logindev_.GetNoArena();
}
inline void AccountLogin_Request::set_logindev(const ::std::string& value) {
  
  logindev_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.AccountLogin.Request.LoginDev)
}
#if LANG_CXX11
inline void AccountLogin_Request::set_logindev(::std::string&& value) {
  
  logindev_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.AccountLogin.Request.LoginDev)
}
#endif
inline void AccountLogin_Request::set_logindev(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  logindev_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.AccountLogin.Request.LoginDev)
}
inline void AccountLogin_Request::set_logindev(const char* value, size_t size) {
  
  logindev_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.AccountLogin.Request.LoginDev)
}
inline ::std::string* AccountLogin_Request::mutable_logindev() {
  
  // @@protoc_insertion_point(field_mutable:c2s.AccountLogin.Request.LoginDev)
  return logindev_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountLogin_Request::release_logindev() {
  // @@protoc_insertion_point(field_release:c2s.AccountLogin.Request.LoginDev)
  
  return logindev_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountLogin_Request::set_allocated_logindev(::std::string* logindev) {
  if (logindev != nullptr) {
    
  } else {
    
  }
  logindev_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logindev);
  // @@protoc_insertion_point(field_set_allocated:c2s.AccountLogin.Request.LoginDev)
}

// -------------------------------------------------------------------

// AccountLogin_Response

// string Token = 1;
inline void AccountLogin_Response::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountLogin_Response::token() const {
  // @@protoc_insertion_point(field_get:c2s.AccountLogin.Response.Token)
  return token_.GetNoArena();
}
inline void AccountLogin_Response::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.AccountLogin.Response.Token)
}
#if LANG_CXX11
inline void AccountLogin_Response::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.AccountLogin.Response.Token)
}
#endif
inline void AccountLogin_Response::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.AccountLogin.Response.Token)
}
inline void AccountLogin_Response::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.AccountLogin.Response.Token)
}
inline ::std::string* AccountLogin_Response::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:c2s.AccountLogin.Response.Token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountLogin_Response::release_token() {
  // @@protoc_insertion_point(field_release:c2s.AccountLogin.Response.Token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountLogin_Response::set_allocated_token(::std::string* token) {
  if (token != nullptr) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:c2s.AccountLogin.Response.Token)
}

// string GateToken = 2;
inline void AccountLogin_Response::clear_gatetoken() {
  gatetoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountLogin_Response::gatetoken() const {
  // @@protoc_insertion_point(field_get:c2s.AccountLogin.Response.GateToken)
  return gatetoken_.GetNoArena();
}
inline void AccountLogin_Response::set_gatetoken(const ::std::string& value) {
  
  gatetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.AccountLogin.Response.GateToken)
}
#if LANG_CXX11
inline void AccountLogin_Response::set_gatetoken(::std::string&& value) {
  
  gatetoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.AccountLogin.Response.GateToken)
}
#endif
inline void AccountLogin_Response::set_gatetoken(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  gatetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.AccountLogin.Response.GateToken)
}
inline void AccountLogin_Response::set_gatetoken(const char* value, size_t size) {
  
  gatetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.AccountLogin.Response.GateToken)
}
inline ::std::string* AccountLogin_Response::mutable_gatetoken() {
  
  // @@protoc_insertion_point(field_mutable:c2s.AccountLogin.Response.GateToken)
  return gatetoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountLogin_Response::release_gatetoken() {
  // @@protoc_insertion_point(field_release:c2s.AccountLogin.Response.GateToken)
  
  return gatetoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountLogin_Response::set_allocated_gatetoken(::std::string* gatetoken) {
  if (gatetoken != nullptr) {
    
  } else {
    
  }
  gatetoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gatetoken);
  // @@protoc_insertion_point(field_set_allocated:c2s.AccountLogin.Response.GateToken)
}

// int64 LastLoginTime = 4;
inline void AccountLogin_Response::clear_lastlogintime() {
  lastlogintime_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 AccountLogin_Response::lastlogintime() const {
  // @@protoc_insertion_point(field_get:c2s.AccountLogin.Response.LastLoginTime)
  return lastlogintime_;
}
inline void AccountLogin_Response::set_lastlogintime(::google::protobuf::int64 value) {
  
  lastlogintime_ = value;
  // @@protoc_insertion_point(field_set:c2s.AccountLogin.Response.LastLoginTime)
}

// repeated .c2s.ServerInfo ServerList = 5;
inline int AccountLogin_Response::serverlist_size() const {
  return serverlist_.size();
}
inline void AccountLogin_Response::clear_serverlist() {
  serverlist_.Clear();
}
inline ::c2s::ServerInfo* AccountLogin_Response::mutable_serverlist(int index) {
  // @@protoc_insertion_point(field_mutable:c2s.AccountLogin.Response.ServerList)
  return serverlist_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::c2s::ServerInfo >*
AccountLogin_Response::mutable_serverlist() {
  // @@protoc_insertion_point(field_mutable_list:c2s.AccountLogin.Response.ServerList)
  return &serverlist_;
}
inline const ::c2s::ServerInfo& AccountLogin_Response::serverlist(int index) const {
  // @@protoc_insertion_point(field_get:c2s.AccountLogin.Response.ServerList)
  return serverlist_.Get(index);
}
inline ::c2s::ServerInfo* AccountLogin_Response::add_serverlist() {
  // @@protoc_insertion_point(field_add:c2s.AccountLogin.Response.ServerList)
  return serverlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::c2s::ServerInfo >&
AccountLogin_Response::serverlist() const {
  // @@protoc_insertion_point(field_list:c2s.AccountLogin.Response.ServerList)
  return serverlist_;
}

// -------------------------------------------------------------------

// AccountLogin

// -------------------------------------------------------------------

// AccountRegister_Request

// string Account = 1;
inline void AccountRegister_Request::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountRegister_Request::account() const {
  // @@protoc_insertion_point(field_get:c2s.AccountRegister.Request.Account)
  return account_.GetNoArena();
}
inline void AccountRegister_Request::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.AccountRegister.Request.Account)
}
#if LANG_CXX11
inline void AccountRegister_Request::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.AccountRegister.Request.Account)
}
#endif
inline void AccountRegister_Request::set_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.AccountRegister.Request.Account)
}
inline void AccountRegister_Request::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.AccountRegister.Request.Account)
}
inline ::std::string* AccountRegister_Request::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:c2s.AccountRegister.Request.Account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountRegister_Request::release_account() {
  // @@protoc_insertion_point(field_release:c2s.AccountRegister.Request.Account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountRegister_Request::set_allocated_account(::std::string* account) {
  if (account != nullptr) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:c2s.AccountRegister.Request.Account)
}

// string Passwd = 2;
inline void AccountRegister_Request::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountRegister_Request::passwd() const {
  // @@protoc_insertion_point(field_get:c2s.AccountRegister.Request.Passwd)
  return passwd_.GetNoArena();
}
inline void AccountRegister_Request::set_passwd(const ::std::string& value) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.AccountRegister.Request.Passwd)
}
#if LANG_CXX11
inline void AccountRegister_Request::set_passwd(::std::string&& value) {
  
  passwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.AccountRegister.Request.Passwd)
}
#endif
inline void AccountRegister_Request::set_passwd(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.AccountRegister.Request.Passwd)
}
inline void AccountRegister_Request::set_passwd(const char* value, size_t size) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.AccountRegister.Request.Passwd)
}
inline ::std::string* AccountRegister_Request::mutable_passwd() {
  
  // @@protoc_insertion_point(field_mutable:c2s.AccountRegister.Request.Passwd)
  return passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountRegister_Request::release_passwd() {
  // @@protoc_insertion_point(field_release:c2s.AccountRegister.Request.Passwd)
  
  return passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountRegister_Request::set_allocated_passwd(::std::string* passwd) {
  if (passwd != nullptr) {
    
  } else {
    
  }
  passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:c2s.AccountRegister.Request.Passwd)
}

// string LoginDev = 3;
inline void AccountRegister_Request::clear_logindev() {
  logindev_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountRegister_Request::logindev() const {
  // @@protoc_insertion_point(field_get:c2s.AccountRegister.Request.LoginDev)
  return logindev_.GetNoArena();
}
inline void AccountRegister_Request::set_logindev(const ::std::string& value) {
  
  logindev_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.AccountRegister.Request.LoginDev)
}
#if LANG_CXX11
inline void AccountRegister_Request::set_logindev(::std::string&& value) {
  
  logindev_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.AccountRegister.Request.LoginDev)
}
#endif
inline void AccountRegister_Request::set_logindev(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  logindev_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.AccountRegister.Request.LoginDev)
}
inline void AccountRegister_Request::set_logindev(const char* value, size_t size) {
  
  logindev_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.AccountRegister.Request.LoginDev)
}
inline ::std::string* AccountRegister_Request::mutable_logindev() {
  
  // @@protoc_insertion_point(field_mutable:c2s.AccountRegister.Request.LoginDev)
  return logindev_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountRegister_Request::release_logindev() {
  // @@protoc_insertion_point(field_release:c2s.AccountRegister.Request.LoginDev)
  
  return logindev_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountRegister_Request::set_allocated_logindev(::std::string* logindev) {
  if (logindev != nullptr) {
    
  } else {
    
  }
  logindev_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logindev);
  // @@protoc_insertion_point(field_set_allocated:c2s.AccountRegister.Request.LoginDev)
}

// -------------------------------------------------------------------

// AccountRegister_Response

// string Token = 1;
inline void AccountRegister_Response::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountRegister_Response::token() const {
  // @@protoc_insertion_point(field_get:c2s.AccountRegister.Response.Token)
  return token_.GetNoArena();
}
inline void AccountRegister_Response::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.AccountRegister.Response.Token)
}
#if LANG_CXX11
inline void AccountRegister_Response::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.AccountRegister.Response.Token)
}
#endif
inline void AccountRegister_Response::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.AccountRegister.Response.Token)
}
inline void AccountRegister_Response::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.AccountRegister.Response.Token)
}
inline ::std::string* AccountRegister_Response::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:c2s.AccountRegister.Response.Token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountRegister_Response::release_token() {
  // @@protoc_insertion_point(field_release:c2s.AccountRegister.Response.Token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountRegister_Response::set_allocated_token(::std::string* token) {
  if (token != nullptr) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:c2s.AccountRegister.Response.Token)
}

// -------------------------------------------------------------------

// AccountRegister

// -------------------------------------------------------------------

// GateLogin_Request

// string Token = 1;
inline void GateLogin_Request::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GateLogin_Request::token() const {
  // @@protoc_insertion_point(field_get:c2s.GateLogin.Request.Token)
  return token_.GetNoArena();
}
inline void GateLogin_Request::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.GateLogin.Request.Token)
}
#if LANG_CXX11
inline void GateLogin_Request::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.GateLogin.Request.Token)
}
#endif
inline void GateLogin_Request::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.GateLogin.Request.Token)
}
inline void GateLogin_Request::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.GateLogin.Request.Token)
}
inline ::std::string* GateLogin_Request::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:c2s.GateLogin.Request.Token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GateLogin_Request::release_token() {
  // @@protoc_insertion_point(field_release:c2s.GateLogin.Request.Token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GateLogin_Request::set_allocated_token(::std::string* token) {
  if (token != nullptr) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:c2s.GateLogin.Request.Token)
}

// -------------------------------------------------------------------

// GateLogin

// -------------------------------------------------------------------

// GateLogout_Request

// -------------------------------------------------------------------

// GateLogout

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace c2s

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_c2s_2eproto
