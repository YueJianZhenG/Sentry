// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: c2s.proto

#ifndef PROTOBUF_INCLUDED_c2s_2eproto
#define PROTOBUF_INCLUDED_c2s_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_c2s_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_c2s_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[19]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_c2s_2eproto();
namespace c2s {
class AccountLogin;
class AccountLoginDefaultTypeInternal;
extern AccountLoginDefaultTypeInternal _AccountLogin_default_instance_;
class AccountLogin_Request;
class AccountLogin_RequestDefaultTypeInternal;
extern AccountLogin_RequestDefaultTypeInternal _AccountLogin_Request_default_instance_;
class AccountLogin_Response;
class AccountLogin_ResponseDefaultTypeInternal;
extern AccountLogin_ResponseDefaultTypeInternal _AccountLogin_Response_default_instance_;
class AccountRegister;
class AccountRegisterDefaultTypeInternal;
extern AccountRegisterDefaultTypeInternal _AccountRegister_default_instance_;
class AccountRegister_Request;
class AccountRegister_RequestDefaultTypeInternal;
extern AccountRegister_RequestDefaultTypeInternal _AccountRegister_Request_default_instance_;
class AccountRegister_Response;
class AccountRegister_ResponseDefaultTypeInternal;
extern AccountRegister_ResponseDefaultTypeInternal _AccountRegister_Response_default_instance_;
class Chat;
class ChatDefaultTypeInternal;
extern ChatDefaultTypeInternal _Chat_default_instance_;
class Chat_Notice;
class Chat_NoticeDefaultTypeInternal;
extern Chat_NoticeDefaultTypeInternal _Chat_Notice_default_instance_;
class Chat_Request;
class Chat_RequestDefaultTypeInternal;
extern Chat_RequestDefaultTypeInternal _Chat_Request_default_instance_;
class Chat_Response;
class Chat_ResponseDefaultTypeInternal;
extern Chat_ResponseDefaultTypeInternal _Chat_Response_default_instance_;
class GateLogout;
class GateLogoutDefaultTypeInternal;
extern GateLogoutDefaultTypeInternal _GateLogout_default_instance_;
class GateLogout_Request;
class GateLogout_RequestDefaultTypeInternal;
extern GateLogout_RequestDefaultTypeInternal _GateLogout_Request_default_instance_;
class GateLogout_Response;
class GateLogout_ResponseDefaultTypeInternal;
extern GateLogout_ResponseDefaultTypeInternal _GateLogout_Response_default_instance_;
class ProxyLogin;
class ProxyLoginDefaultTypeInternal;
extern ProxyLoginDefaultTypeInternal _ProxyLogin_default_instance_;
class ProxyLogin_Request;
class ProxyLogin_RequestDefaultTypeInternal;
extern ProxyLogin_RequestDefaultTypeInternal _ProxyLogin_Request_default_instance_;
class Rpc;
class RpcDefaultTypeInternal;
extern RpcDefaultTypeInternal _Rpc_default_instance_;
class Rpc_Request;
class Rpc_RequestDefaultTypeInternal;
extern Rpc_RequestDefaultTypeInternal _Rpc_Request_default_instance_;
class Rpc_Response;
class Rpc_ResponseDefaultTypeInternal;
extern Rpc_ResponseDefaultTypeInternal _Rpc_Response_default_instance_;
class ServerInfo;
class ServerInfoDefaultTypeInternal;
extern ServerInfoDefaultTypeInternal _ServerInfo_default_instance_;
}  // namespace c2s
namespace google {
namespace protobuf {
template<> ::c2s::AccountLogin* Arena::CreateMaybeMessage<::c2s::AccountLogin>(Arena*);
template<> ::c2s::AccountLogin_Request* Arena::CreateMaybeMessage<::c2s::AccountLogin_Request>(Arena*);
template<> ::c2s::AccountLogin_Response* Arena::CreateMaybeMessage<::c2s::AccountLogin_Response>(Arena*);
template<> ::c2s::AccountRegister* Arena::CreateMaybeMessage<::c2s::AccountRegister>(Arena*);
template<> ::c2s::AccountRegister_Request* Arena::CreateMaybeMessage<::c2s::AccountRegister_Request>(Arena*);
template<> ::c2s::AccountRegister_Response* Arena::CreateMaybeMessage<::c2s::AccountRegister_Response>(Arena*);
template<> ::c2s::Chat* Arena::CreateMaybeMessage<::c2s::Chat>(Arena*);
template<> ::c2s::Chat_Notice* Arena::CreateMaybeMessage<::c2s::Chat_Notice>(Arena*);
template<> ::c2s::Chat_Request* Arena::CreateMaybeMessage<::c2s::Chat_Request>(Arena*);
template<> ::c2s::Chat_Response* Arena::CreateMaybeMessage<::c2s::Chat_Response>(Arena*);
template<> ::c2s::GateLogout* Arena::CreateMaybeMessage<::c2s::GateLogout>(Arena*);
template<> ::c2s::GateLogout_Request* Arena::CreateMaybeMessage<::c2s::GateLogout_Request>(Arena*);
template<> ::c2s::GateLogout_Response* Arena::CreateMaybeMessage<::c2s::GateLogout_Response>(Arena*);
template<> ::c2s::ProxyLogin* Arena::CreateMaybeMessage<::c2s::ProxyLogin>(Arena*);
template<> ::c2s::ProxyLogin_Request* Arena::CreateMaybeMessage<::c2s::ProxyLogin_Request>(Arena*);
template<> ::c2s::Rpc* Arena::CreateMaybeMessage<::c2s::Rpc>(Arena*);
template<> ::c2s::Rpc_Request* Arena::CreateMaybeMessage<::c2s::Rpc_Request>(Arena*);
template<> ::c2s::Rpc_Response* Arena::CreateMaybeMessage<::c2s::Rpc_Response>(Arena*);
template<> ::c2s::ServerInfo* Arena::CreateMaybeMessage<::c2s::ServerInfo>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace c2s {

// ===================================================================

class ServerInfo :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.ServerInfo) */ {
 public:
  ServerInfo();
  virtual ~ServerInfo();

  ServerInfo(const ServerInfo& from);

  inline ServerInfo& operator=(const ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerInfo(ServerInfo&& from) noexcept
    : ServerInfo() {
    *this = ::std::move(from);
  }

  inline ServerInfo& operator=(ServerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ServerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerInfo* internal_default_instance() {
    return reinterpret_cast<const ServerInfo*>(
               &_ServerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ServerInfo* other);
  friend void swap(ServerInfo& a, ServerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerInfo* New() const final {
    return CreateMaybeMessage<ServerInfo>(nullptr);
  }

  ServerInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ServerInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ServerInfo& from);
  void MergeFrom(const ServerInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string server_id = 1;
  void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  const ::std::string& server_id() const;
  void set_server_id(const ::std::string& value);
  #if LANG_CXX11
  void set_server_id(::std::string&& value);
  #endif
  void set_server_id(const char* value);
  void set_server_id(const char* value, size_t size);
  ::std::string* mutable_server_id();
  ::std::string* release_server_id();
  void set_allocated_server_id(::std::string* server_id);

  // string server_name = 2;
  void clear_server_name();
  static const int kServerNameFieldNumber = 2;
  const ::std::string& server_name() const;
  void set_server_name(const ::std::string& value);
  #if LANG_CXX11
  void set_server_name(::std::string&& value);
  #endif
  void set_server_name(const char* value);
  void set_server_name(const char* value, size_t size);
  ::std::string* mutable_server_name();
  ::std::string* release_server_name();
  void set_allocated_server_name(::std::string* server_name);

  // int32 server_state = 3;
  void clear_server_state();
  static const int kServerStateFieldNumber = 3;
  ::google::protobuf::int32 server_state() const;
  void set_server_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:c2s.ServerInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr server_id_;
  ::google::protobuf::internal::ArenaStringPtr server_name_;
  ::google::protobuf::int32 server_state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class Rpc_Request :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.Rpc.Request) */ {
 public:
  Rpc_Request();
  virtual ~Rpc_Request();

  Rpc_Request(const Rpc_Request& from);

  inline Rpc_Request& operator=(const Rpc_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Rpc_Request(Rpc_Request&& from) noexcept
    : Rpc_Request() {
    *this = ::std::move(from);
  }

  inline Rpc_Request& operator=(Rpc_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Rpc_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Rpc_Request* internal_default_instance() {
    return reinterpret_cast<const Rpc_Request*>(
               &_Rpc_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Rpc_Request* other);
  friend void swap(Rpc_Request& a, Rpc_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Rpc_Request* New() const final {
    return CreateMaybeMessage<Rpc_Request>(nullptr);
  }

  Rpc_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Rpc_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Rpc_Request& from);
  void MergeFrom(const Rpc_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Rpc_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string method_name = 3;
  void clear_method_name();
  static const int kMethodNameFieldNumber = 3;
  const ::std::string& method_name() const;
  void set_method_name(const ::std::string& value);
  #if LANG_CXX11
  void set_method_name(::std::string&& value);
  #endif
  void set_method_name(const char* value);
  void set_method_name(const char* value, size_t size);
  ::std::string* mutable_method_name();
  ::std::string* release_method_name();
  void set_allocated_method_name(::std::string* method_name);

  // .google.protobuf.Any data = 5;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 5;
  const ::google::protobuf::Any& data() const;
  ::google::protobuf::Any* release_data();
  ::google::protobuf::Any* mutable_data();
  void set_allocated_data(::google::protobuf::Any* data);

  // int64 rpc_id = 1;
  void clear_rpc_id();
  static const int kRpcIdFieldNumber = 1;
  ::google::protobuf::int64 rpc_id() const;
  void set_rpc_id(::google::protobuf::int64 value);

  // int64 sock_id = 2;
  void clear_sock_id();
  static const int kSockIdFieldNumber = 2;
  ::google::protobuf::int64 sock_id() const;
  void set_sock_id(::google::protobuf::int64 value);

  // uint32 message_idx = 4;
  void clear_message_idx();
  static const int kMessageIdxFieldNumber = 4;
  ::google::protobuf::uint32 message_idx() const;
  void set_message_idx(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:c2s.Rpc.Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr method_name_;
  ::google::protobuf::Any* data_;
  ::google::protobuf::int64 rpc_id_;
  ::google::protobuf::int64 sock_id_;
  ::google::protobuf::uint32 message_idx_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class Rpc_Response :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.Rpc.Response) */ {
 public:
  Rpc_Response();
  virtual ~Rpc_Response();

  Rpc_Response(const Rpc_Response& from);

  inline Rpc_Response& operator=(const Rpc_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Rpc_Response(Rpc_Response&& from) noexcept
    : Rpc_Response() {
    *this = ::std::move(from);
  }

  inline Rpc_Response& operator=(Rpc_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Rpc_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Rpc_Response* internal_default_instance() {
    return reinterpret_cast<const Rpc_Response*>(
               &_Rpc_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Rpc_Response* other);
  friend void swap(Rpc_Response& a, Rpc_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Rpc_Response* New() const final {
    return CreateMaybeMessage<Rpc_Response>(nullptr);
  }

  Rpc_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Rpc_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Rpc_Response& from);
  void MergeFrom(const Rpc_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Rpc_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string error_str = 4;
  void clear_error_str();
  static const int kErrorStrFieldNumber = 4;
  const ::std::string& error_str() const;
  void set_error_str(const ::std::string& value);
  #if LANG_CXX11
  void set_error_str(::std::string&& value);
  #endif
  void set_error_str(const char* value);
  void set_error_str(const char* value, size_t size);
  ::std::string* mutable_error_str();
  ::std::string* release_error_str();
  void set_allocated_error_str(::std::string* error_str);

  // .google.protobuf.Any data = 5;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 5;
  const ::google::protobuf::Any& data() const;
  ::google::protobuf::Any* release_data();
  ::google::protobuf::Any* mutable_data();
  void set_allocated_data(::google::protobuf::Any* data);

  // int64 rpc_id = 2;
  void clear_rpc_id();
  static const int kRpcIdFieldNumber = 2;
  ::google::protobuf::int64 rpc_id() const;
  void set_rpc_id(::google::protobuf::int64 value);

  // int64 sock_id = 3;
  void clear_sock_id();
  static const int kSockIdFieldNumber = 3;
  ::google::protobuf::int64 sock_id() const;
  void set_sock_id(::google::protobuf::int64 value);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:c2s.Rpc.Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr error_str_;
  ::google::protobuf::Any* data_;
  ::google::protobuf::int64 rpc_id_;
  ::google::protobuf::int64 sock_id_;
  ::google::protobuf::int32 code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class Rpc :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.Rpc) */ {
 public:
  Rpc();
  virtual ~Rpc();

  Rpc(const Rpc& from);

  inline Rpc& operator=(const Rpc& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Rpc(Rpc&& from) noexcept
    : Rpc() {
    *this = ::std::move(from);
  }

  inline Rpc& operator=(Rpc&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Rpc& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Rpc* internal_default_instance() {
    return reinterpret_cast<const Rpc*>(
               &_Rpc_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Rpc* other);
  friend void swap(Rpc& a, Rpc& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Rpc* New() const final {
    return CreateMaybeMessage<Rpc>(nullptr);
  }

  Rpc* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Rpc>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Rpc& from);
  void MergeFrom(const Rpc& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Rpc* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Rpc_Request Request;
  typedef Rpc_Response Response;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:c2s.Rpc)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class AccountLogin_Request :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.AccountLogin.Request) */ {
 public:
  AccountLogin_Request();
  virtual ~AccountLogin_Request();

  AccountLogin_Request(const AccountLogin_Request& from);

  inline AccountLogin_Request& operator=(const AccountLogin_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountLogin_Request(AccountLogin_Request&& from) noexcept
    : AccountLogin_Request() {
    *this = ::std::move(from);
  }

  inline AccountLogin_Request& operator=(AccountLogin_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AccountLogin_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountLogin_Request* internal_default_instance() {
    return reinterpret_cast<const AccountLogin_Request*>(
               &_AccountLogin_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(AccountLogin_Request* other);
  friend void swap(AccountLogin_Request& a, AccountLogin_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountLogin_Request* New() const final {
    return CreateMaybeMessage<AccountLogin_Request>(nullptr);
  }

  AccountLogin_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AccountLogin_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AccountLogin_Request& from);
  void MergeFrom(const AccountLogin_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AccountLogin_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string account = 1;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // string token = 2;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string passwrod = 3;
  void clear_passwrod();
  static const int kPasswrodFieldNumber = 3;
  const ::std::string& passwrod() const;
  void set_passwrod(const ::std::string& value);
  #if LANG_CXX11
  void set_passwrod(::std::string&& value);
  #endif
  void set_passwrod(const char* value);
  void set_passwrod(const char* value, size_t size);
  ::std::string* mutable_passwrod();
  ::std::string* release_passwrod();
  void set_allocated_passwrod(::std::string* passwrod);

  // string login_dev = 4;
  void clear_login_dev();
  static const int kLoginDevFieldNumber = 4;
  const ::std::string& login_dev() const;
  void set_login_dev(const ::std::string& value);
  #if LANG_CXX11
  void set_login_dev(::std::string&& value);
  #endif
  void set_login_dev(const char* value);
  void set_login_dev(const char* value, size_t size);
  ::std::string* mutable_login_dev();
  ::std::string* release_login_dev();
  void set_allocated_login_dev(::std::string* login_dev);

  // @@protoc_insertion_point(class_scope:c2s.AccountLogin.Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr passwrod_;
  ::google::protobuf::internal::ArenaStringPtr login_dev_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class AccountLogin_Response :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.AccountLogin.Response) */ {
 public:
  AccountLogin_Response();
  virtual ~AccountLogin_Response();

  AccountLogin_Response(const AccountLogin_Response& from);

  inline AccountLogin_Response& operator=(const AccountLogin_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountLogin_Response(AccountLogin_Response&& from) noexcept
    : AccountLogin_Response() {
    *this = ::std::move(from);
  }

  inline AccountLogin_Response& operator=(AccountLogin_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AccountLogin_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountLogin_Response* internal_default_instance() {
    return reinterpret_cast<const AccountLogin_Response*>(
               &_AccountLogin_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(AccountLogin_Response* other);
  friend void swap(AccountLogin_Response& a, AccountLogin_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountLogin_Response* New() const final {
    return CreateMaybeMessage<AccountLogin_Response>(nullptr);
  }

  AccountLogin_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AccountLogin_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AccountLogin_Response& from);
  void MergeFrom(const AccountLogin_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AccountLogin_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .c2s.ServerInfo server_infos = 5;
  int server_infos_size() const;
  void clear_server_infos();
  static const int kServerInfosFieldNumber = 5;
  ::c2s::ServerInfo* mutable_server_infos(int index);
  ::google::protobuf::RepeatedPtrField< ::c2s::ServerInfo >*
      mutable_server_infos();
  const ::c2s::ServerInfo& server_infos(int index) const;
  ::c2s::ServerInfo* add_server_infos();
  const ::google::protobuf::RepeatedPtrField< ::c2s::ServerInfo >&
      server_infos() const;

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string gate_token = 2;
  void clear_gate_token();
  static const int kGateTokenFieldNumber = 2;
  const ::std::string& gate_token() const;
  void set_gate_token(const ::std::string& value);
  #if LANG_CXX11
  void set_gate_token(::std::string&& value);
  #endif
  void set_gate_token(const char* value);
  void set_gate_token(const char* value, size_t size);
  ::std::string* mutable_gate_token();
  ::std::string* release_gate_token();
  void set_allocated_gate_token(::std::string* gate_token);

  // int64 last_logintime = 4;
  void clear_last_logintime();
  static const int kLastLogintimeFieldNumber = 4;
  ::google::protobuf::int64 last_logintime() const;
  void set_last_logintime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:c2s.AccountLogin.Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::c2s::ServerInfo > server_infos_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr gate_token_;
  ::google::protobuf::int64 last_logintime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class AccountLogin :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.AccountLogin) */ {
 public:
  AccountLogin();
  virtual ~AccountLogin();

  AccountLogin(const AccountLogin& from);

  inline AccountLogin& operator=(const AccountLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountLogin(AccountLogin&& from) noexcept
    : AccountLogin() {
    *this = ::std::move(from);
  }

  inline AccountLogin& operator=(AccountLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AccountLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountLogin* internal_default_instance() {
    return reinterpret_cast<const AccountLogin*>(
               &_AccountLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(AccountLogin* other);
  friend void swap(AccountLogin& a, AccountLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountLogin* New() const final {
    return CreateMaybeMessage<AccountLogin>(nullptr);
  }

  AccountLogin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AccountLogin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AccountLogin& from);
  void MergeFrom(const AccountLogin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AccountLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AccountLogin_Request Request;
  typedef AccountLogin_Response Response;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:c2s.AccountLogin)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class AccountRegister_Request :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.AccountRegister.Request) */ {
 public:
  AccountRegister_Request();
  virtual ~AccountRegister_Request();

  AccountRegister_Request(const AccountRegister_Request& from);

  inline AccountRegister_Request& operator=(const AccountRegister_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountRegister_Request(AccountRegister_Request&& from) noexcept
    : AccountRegister_Request() {
    *this = ::std::move(from);
  }

  inline AccountRegister_Request& operator=(AccountRegister_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AccountRegister_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountRegister_Request* internal_default_instance() {
    return reinterpret_cast<const AccountRegister_Request*>(
               &_AccountRegister_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(AccountRegister_Request* other);
  friend void swap(AccountRegister_Request& a, AccountRegister_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountRegister_Request* New() const final {
    return CreateMaybeMessage<AccountRegister_Request>(nullptr);
  }

  AccountRegister_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AccountRegister_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AccountRegister_Request& from);
  void MergeFrom(const AccountRegister_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AccountRegister_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string account = 1;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // string login_dev = 3;
  void clear_login_dev();
  static const int kLoginDevFieldNumber = 3;
  const ::std::string& login_dev() const;
  void set_login_dev(const ::std::string& value);
  #if LANG_CXX11
  void set_login_dev(::std::string&& value);
  #endif
  void set_login_dev(const char* value);
  void set_login_dev(const char* value, size_t size);
  ::std::string* mutable_login_dev();
  ::std::string* release_login_dev();
  void set_allocated_login_dev(::std::string* login_dev);

  // @@protoc_insertion_point(class_scope:c2s.AccountRegister.Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr login_dev_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class AccountRegister_Response :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.AccountRegister.Response) */ {
 public:
  AccountRegister_Response();
  virtual ~AccountRegister_Response();

  AccountRegister_Response(const AccountRegister_Response& from);

  inline AccountRegister_Response& operator=(const AccountRegister_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountRegister_Response(AccountRegister_Response&& from) noexcept
    : AccountRegister_Response() {
    *this = ::std::move(from);
  }

  inline AccountRegister_Response& operator=(AccountRegister_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AccountRegister_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountRegister_Response* internal_default_instance() {
    return reinterpret_cast<const AccountRegister_Response*>(
               &_AccountRegister_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(AccountRegister_Response* other);
  friend void swap(AccountRegister_Response& a, AccountRegister_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountRegister_Response* New() const final {
    return CreateMaybeMessage<AccountRegister_Response>(nullptr);
  }

  AccountRegister_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AccountRegister_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AccountRegister_Response& from);
  void MergeFrom(const AccountRegister_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AccountRegister_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:c2s.AccountRegister.Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class AccountRegister :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.AccountRegister) */ {
 public:
  AccountRegister();
  virtual ~AccountRegister();

  AccountRegister(const AccountRegister& from);

  inline AccountRegister& operator=(const AccountRegister& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountRegister(AccountRegister&& from) noexcept
    : AccountRegister() {
    *this = ::std::move(from);
  }

  inline AccountRegister& operator=(AccountRegister&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AccountRegister& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountRegister* internal_default_instance() {
    return reinterpret_cast<const AccountRegister*>(
               &_AccountRegister_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(AccountRegister* other);
  friend void swap(AccountRegister& a, AccountRegister& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountRegister* New() const final {
    return CreateMaybeMessage<AccountRegister>(nullptr);
  }

  AccountRegister* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AccountRegister>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AccountRegister& from);
  void MergeFrom(const AccountRegister& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AccountRegister* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AccountRegister_Request Request;
  typedef AccountRegister_Response Response;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:c2s.AccountRegister)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class ProxyLogin_Request :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.ProxyLogin.Request) */ {
 public:
  ProxyLogin_Request();
  virtual ~ProxyLogin_Request();

  ProxyLogin_Request(const ProxyLogin_Request& from);

  inline ProxyLogin_Request& operator=(const ProxyLogin_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProxyLogin_Request(ProxyLogin_Request&& from) noexcept
    : ProxyLogin_Request() {
    *this = ::std::move(from);
  }

  inline ProxyLogin_Request& operator=(ProxyLogin_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProxyLogin_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProxyLogin_Request* internal_default_instance() {
    return reinterpret_cast<const ProxyLogin_Request*>(
               &_ProxyLogin_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(ProxyLogin_Request* other);
  friend void swap(ProxyLogin_Request& a, ProxyLogin_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProxyLogin_Request* New() const final {
    return CreateMaybeMessage<ProxyLogin_Request>(nullptr);
  }

  ProxyLogin_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProxyLogin_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProxyLogin_Request& from);
  void MergeFrom(const ProxyLogin_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProxyLogin_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:c2s.ProxyLogin.Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class ProxyLogin :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.ProxyLogin) */ {
 public:
  ProxyLogin();
  virtual ~ProxyLogin();

  ProxyLogin(const ProxyLogin& from);

  inline ProxyLogin& operator=(const ProxyLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProxyLogin(ProxyLogin&& from) noexcept
    : ProxyLogin() {
    *this = ::std::move(from);
  }

  inline ProxyLogin& operator=(ProxyLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProxyLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProxyLogin* internal_default_instance() {
    return reinterpret_cast<const ProxyLogin*>(
               &_ProxyLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(ProxyLogin* other);
  friend void swap(ProxyLogin& a, ProxyLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProxyLogin* New() const final {
    return CreateMaybeMessage<ProxyLogin>(nullptr);
  }

  ProxyLogin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProxyLogin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProxyLogin& from);
  void MergeFrom(const ProxyLogin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProxyLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ProxyLogin_Request Request;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:c2s.ProxyLogin)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class GateLogout_Request :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.GateLogout.Request) */ {
 public:
  GateLogout_Request();
  virtual ~GateLogout_Request();

  GateLogout_Request(const GateLogout_Request& from);

  inline GateLogout_Request& operator=(const GateLogout_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GateLogout_Request(GateLogout_Request&& from) noexcept
    : GateLogout_Request() {
    *this = ::std::move(from);
  }

  inline GateLogout_Request& operator=(GateLogout_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GateLogout_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GateLogout_Request* internal_default_instance() {
    return reinterpret_cast<const GateLogout_Request*>(
               &_GateLogout_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(GateLogout_Request* other);
  friend void swap(GateLogout_Request& a, GateLogout_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GateLogout_Request* New() const final {
    return CreateMaybeMessage<GateLogout_Request>(nullptr);
  }

  GateLogout_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GateLogout_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GateLogout_Request& from);
  void MergeFrom(const GateLogout_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GateLogout_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:c2s.GateLogout.Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class GateLogout_Response :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.GateLogout.Response) */ {
 public:
  GateLogout_Response();
  virtual ~GateLogout_Response();

  GateLogout_Response(const GateLogout_Response& from);

  inline GateLogout_Response& operator=(const GateLogout_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GateLogout_Response(GateLogout_Response&& from) noexcept
    : GateLogout_Response() {
    *this = ::std::move(from);
  }

  inline GateLogout_Response& operator=(GateLogout_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GateLogout_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GateLogout_Response* internal_default_instance() {
    return reinterpret_cast<const GateLogout_Response*>(
               &_GateLogout_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(GateLogout_Response* other);
  friend void swap(GateLogout_Response& a, GateLogout_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GateLogout_Response* New() const final {
    return CreateMaybeMessage<GateLogout_Response>(nullptr);
  }

  GateLogout_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GateLogout_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GateLogout_Response& from);
  void MergeFrom(const GateLogout_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GateLogout_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:c2s.GateLogout.Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class GateLogout :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.GateLogout) */ {
 public:
  GateLogout();
  virtual ~GateLogout();

  GateLogout(const GateLogout& from);

  inline GateLogout& operator=(const GateLogout& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GateLogout(GateLogout&& from) noexcept
    : GateLogout() {
    *this = ::std::move(from);
  }

  inline GateLogout& operator=(GateLogout&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GateLogout& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GateLogout* internal_default_instance() {
    return reinterpret_cast<const GateLogout*>(
               &_GateLogout_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(GateLogout* other);
  friend void swap(GateLogout& a, GateLogout& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GateLogout* New() const final {
    return CreateMaybeMessage<GateLogout>(nullptr);
  }

  GateLogout* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GateLogout>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GateLogout& from);
  void MergeFrom(const GateLogout& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GateLogout* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GateLogout_Request Request;
  typedef GateLogout_Response Response;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:c2s.GateLogout)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class Chat_Request :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.Chat.Request) */ {
 public:
  Chat_Request();
  virtual ~Chat_Request();

  Chat_Request(const Chat_Request& from);

  inline Chat_Request& operator=(const Chat_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Chat_Request(Chat_Request&& from) noexcept
    : Chat_Request() {
    *this = ::std::move(from);
  }

  inline Chat_Request& operator=(Chat_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Chat_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Chat_Request* internal_default_instance() {
    return reinterpret_cast<const Chat_Request*>(
               &_Chat_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(Chat_Request* other);
  friend void swap(Chat_Request& a, Chat_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Chat_Request* New() const final {
    return CreateMaybeMessage<Chat_Request>(nullptr);
  }

  Chat_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Chat_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Chat_Request& from);
  void MergeFrom(const Chat_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Chat_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:c2s.Chat.Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class Chat_Response :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.Chat.Response) */ {
 public:
  Chat_Response();
  virtual ~Chat_Response();

  Chat_Response(const Chat_Response& from);

  inline Chat_Response& operator=(const Chat_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Chat_Response(Chat_Response&& from) noexcept
    : Chat_Response() {
    *this = ::std::move(from);
  }

  inline Chat_Response& operator=(Chat_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Chat_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Chat_Response* internal_default_instance() {
    return reinterpret_cast<const Chat_Response*>(
               &_Chat_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(Chat_Response* other);
  friend void swap(Chat_Response& a, Chat_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Chat_Response* New() const final {
    return CreateMaybeMessage<Chat_Response>(nullptr);
  }

  Chat_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Chat_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Chat_Response& from);
  void MergeFrom(const Chat_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Chat_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:c2s.Chat.Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class Chat_Notice :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.Chat.Notice) */ {
 public:
  Chat_Notice();
  virtual ~Chat_Notice();

  Chat_Notice(const Chat_Notice& from);

  inline Chat_Notice& operator=(const Chat_Notice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Chat_Notice(Chat_Notice&& from) noexcept
    : Chat_Notice() {
    *this = ::std::move(from);
  }

  inline Chat_Notice& operator=(Chat_Notice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Chat_Notice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Chat_Notice* internal_default_instance() {
    return reinterpret_cast<const Chat_Notice*>(
               &_Chat_Notice_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(Chat_Notice* other);
  friend void swap(Chat_Notice& a, Chat_Notice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Chat_Notice* New() const final {
    return CreateMaybeMessage<Chat_Notice>(nullptr);
  }

  Chat_Notice* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Chat_Notice>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Chat_Notice& from);
  void MergeFrom(const Chat_Notice& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Chat_Notice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:c2s.Chat.Notice)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// -------------------------------------------------------------------

class Chat :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:c2s.Chat) */ {
 public:
  Chat();
  virtual ~Chat();

  Chat(const Chat& from);

  inline Chat& operator=(const Chat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Chat(Chat&& from) noexcept
    : Chat() {
    *this = ::std::move(from);
  }

  inline Chat& operator=(Chat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Chat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Chat* internal_default_instance() {
    return reinterpret_cast<const Chat*>(
               &_Chat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(Chat* other);
  friend void swap(Chat& a, Chat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Chat* New() const final {
    return CreateMaybeMessage<Chat>(nullptr);
  }

  Chat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Chat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Chat& from);
  void MergeFrom(const Chat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Chat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Chat_Request Request;
  typedef Chat_Response Response;
  typedef Chat_Notice Notice;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:c2s.Chat)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_c2s_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ServerInfo

// string server_id = 1;
inline void ServerInfo::clear_server_id() {
  server_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServerInfo::server_id() const {
  // @@protoc_insertion_point(field_get:c2s.ServerInfo.server_id)
  return server_id_.GetNoArena();
}
inline void ServerInfo::set_server_id(const ::std::string& value) {
  
  server_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.ServerInfo.server_id)
}
#if LANG_CXX11
inline void ServerInfo::set_server_id(::std::string&& value) {
  
  server_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.ServerInfo.server_id)
}
#endif
inline void ServerInfo::set_server_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  server_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.ServerInfo.server_id)
}
inline void ServerInfo::set_server_id(const char* value, size_t size) {
  
  server_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.ServerInfo.server_id)
}
inline ::std::string* ServerInfo::mutable_server_id() {
  
  // @@protoc_insertion_point(field_mutable:c2s.ServerInfo.server_id)
  return server_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServerInfo::release_server_id() {
  // @@protoc_insertion_point(field_release:c2s.ServerInfo.server_id)
  
  return server_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerInfo::set_allocated_server_id(::std::string* server_id) {
  if (server_id != nullptr) {
    
  } else {
    
  }
  server_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_id);
  // @@protoc_insertion_point(field_set_allocated:c2s.ServerInfo.server_id)
}

// string server_name = 2;
inline void ServerInfo::clear_server_name() {
  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServerInfo::server_name() const {
  // @@protoc_insertion_point(field_get:c2s.ServerInfo.server_name)
  return server_name_.GetNoArena();
}
inline void ServerInfo::set_server_name(const ::std::string& value) {
  
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.ServerInfo.server_name)
}
#if LANG_CXX11
inline void ServerInfo::set_server_name(::std::string&& value) {
  
  server_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.ServerInfo.server_name)
}
#endif
inline void ServerInfo::set_server_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.ServerInfo.server_name)
}
inline void ServerInfo::set_server_name(const char* value, size_t size) {
  
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.ServerInfo.server_name)
}
inline ::std::string* ServerInfo::mutable_server_name() {
  
  // @@protoc_insertion_point(field_mutable:c2s.ServerInfo.server_name)
  return server_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServerInfo::release_server_name() {
  // @@protoc_insertion_point(field_release:c2s.ServerInfo.server_name)
  
  return server_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerInfo::set_allocated_server_name(::std::string* server_name) {
  if (server_name != nullptr) {
    
  } else {
    
  }
  server_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_name);
  // @@protoc_insertion_point(field_set_allocated:c2s.ServerInfo.server_name)
}

// int32 server_state = 3;
inline void ServerInfo::clear_server_state() {
  server_state_ = 0;
}
inline ::google::protobuf::int32 ServerInfo::server_state() const {
  // @@protoc_insertion_point(field_get:c2s.ServerInfo.server_state)
  return server_state_;
}
inline void ServerInfo::set_server_state(::google::protobuf::int32 value) {
  
  server_state_ = value;
  // @@protoc_insertion_point(field_set:c2s.ServerInfo.server_state)
}

// -------------------------------------------------------------------

// Rpc_Request

// int64 rpc_id = 1;
inline void Rpc_Request::clear_rpc_id() {
  rpc_id_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Rpc_Request::rpc_id() const {
  // @@protoc_insertion_point(field_get:c2s.Rpc.Request.rpc_id)
  return rpc_id_;
}
inline void Rpc_Request::set_rpc_id(::google::protobuf::int64 value) {
  
  rpc_id_ = value;
  // @@protoc_insertion_point(field_set:c2s.Rpc.Request.rpc_id)
}

// int64 sock_id = 2;
inline void Rpc_Request::clear_sock_id() {
  sock_id_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Rpc_Request::sock_id() const {
  // @@protoc_insertion_point(field_get:c2s.Rpc.Request.sock_id)
  return sock_id_;
}
inline void Rpc_Request::set_sock_id(::google::protobuf::int64 value) {
  
  sock_id_ = value;
  // @@protoc_insertion_point(field_set:c2s.Rpc.Request.sock_id)
}

// string method_name = 3;
inline void Rpc_Request::clear_method_name() {
  method_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Rpc_Request::method_name() const {
  // @@protoc_insertion_point(field_get:c2s.Rpc.Request.method_name)
  return method_name_.GetNoArena();
}
inline void Rpc_Request::set_method_name(const ::std::string& value) {
  
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.Rpc.Request.method_name)
}
#if LANG_CXX11
inline void Rpc_Request::set_method_name(::std::string&& value) {
  
  method_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.Rpc.Request.method_name)
}
#endif
inline void Rpc_Request::set_method_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.Rpc.Request.method_name)
}
inline void Rpc_Request::set_method_name(const char* value, size_t size) {
  
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.Rpc.Request.method_name)
}
inline ::std::string* Rpc_Request::mutable_method_name() {
  
  // @@protoc_insertion_point(field_mutable:c2s.Rpc.Request.method_name)
  return method_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Rpc_Request::release_method_name() {
  // @@protoc_insertion_point(field_release:c2s.Rpc.Request.method_name)
  
  return method_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Rpc_Request::set_allocated_method_name(::std::string* method_name) {
  if (method_name != nullptr) {
    
  } else {
    
  }
  method_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_name);
  // @@protoc_insertion_point(field_set_allocated:c2s.Rpc.Request.method_name)
}

// uint32 message_idx = 4;
inline void Rpc_Request::clear_message_idx() {
  message_idx_ = 0u;
}
inline ::google::protobuf::uint32 Rpc_Request::message_idx() const {
  // @@protoc_insertion_point(field_get:c2s.Rpc.Request.message_idx)
  return message_idx_;
}
inline void Rpc_Request::set_message_idx(::google::protobuf::uint32 value) {
  
  message_idx_ = value;
  // @@protoc_insertion_point(field_set:c2s.Rpc.Request.message_idx)
}

// .google.protobuf.Any data = 5;
inline bool Rpc_Request::has_data() const {
  return this != internal_default_instance() && data_ != nullptr;
}
inline const ::google::protobuf::Any& Rpc_Request::data() const {
  const ::google::protobuf::Any* p = data_;
  // @@protoc_insertion_point(field_get:c2s.Rpc.Request.data)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* Rpc_Request::release_data() {
  // @@protoc_insertion_point(field_release:c2s.Rpc.Request.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* Rpc_Request::mutable_data() {
  
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Any>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:c2s.Rpc.Request.data)
  return data_;
}
inline void Rpc_Request::set_allocated_data(::google::protobuf::Any* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:c2s.Rpc.Request.data)
}

// -------------------------------------------------------------------

// Rpc_Response

// int32 code = 1;
inline void Rpc_Response::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 Rpc_Response::code() const {
  // @@protoc_insertion_point(field_get:c2s.Rpc.Response.code)
  return code_;
}
inline void Rpc_Response::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:c2s.Rpc.Response.code)
}

// int64 rpc_id = 2;
inline void Rpc_Response::clear_rpc_id() {
  rpc_id_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Rpc_Response::rpc_id() const {
  // @@protoc_insertion_point(field_get:c2s.Rpc.Response.rpc_id)
  return rpc_id_;
}
inline void Rpc_Response::set_rpc_id(::google::protobuf::int64 value) {
  
  rpc_id_ = value;
  // @@protoc_insertion_point(field_set:c2s.Rpc.Response.rpc_id)
}

// int64 sock_id = 3;
inline void Rpc_Response::clear_sock_id() {
  sock_id_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Rpc_Response::sock_id() const {
  // @@protoc_insertion_point(field_get:c2s.Rpc.Response.sock_id)
  return sock_id_;
}
inline void Rpc_Response::set_sock_id(::google::protobuf::int64 value) {
  
  sock_id_ = value;
  // @@protoc_insertion_point(field_set:c2s.Rpc.Response.sock_id)
}

// string error_str = 4;
inline void Rpc_Response::clear_error_str() {
  error_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Rpc_Response::error_str() const {
  // @@protoc_insertion_point(field_get:c2s.Rpc.Response.error_str)
  return error_str_.GetNoArena();
}
inline void Rpc_Response::set_error_str(const ::std::string& value) {
  
  error_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.Rpc.Response.error_str)
}
#if LANG_CXX11
inline void Rpc_Response::set_error_str(::std::string&& value) {
  
  error_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.Rpc.Response.error_str)
}
#endif
inline void Rpc_Response::set_error_str(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  error_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.Rpc.Response.error_str)
}
inline void Rpc_Response::set_error_str(const char* value, size_t size) {
  
  error_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.Rpc.Response.error_str)
}
inline ::std::string* Rpc_Response::mutable_error_str() {
  
  // @@protoc_insertion_point(field_mutable:c2s.Rpc.Response.error_str)
  return error_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Rpc_Response::release_error_str() {
  // @@protoc_insertion_point(field_release:c2s.Rpc.Response.error_str)
  
  return error_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Rpc_Response::set_allocated_error_str(::std::string* error_str) {
  if (error_str != nullptr) {
    
  } else {
    
  }
  error_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_str);
  // @@protoc_insertion_point(field_set_allocated:c2s.Rpc.Response.error_str)
}

// .google.protobuf.Any data = 5;
inline bool Rpc_Response::has_data() const {
  return this != internal_default_instance() && data_ != nullptr;
}
inline const ::google::protobuf::Any& Rpc_Response::data() const {
  const ::google::protobuf::Any* p = data_;
  // @@protoc_insertion_point(field_get:c2s.Rpc.Response.data)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* Rpc_Response::release_data() {
  // @@protoc_insertion_point(field_release:c2s.Rpc.Response.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* Rpc_Response::mutable_data() {
  
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Any>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:c2s.Rpc.Response.data)
  return data_;
}
inline void Rpc_Response::set_allocated_data(::google::protobuf::Any* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:c2s.Rpc.Response.data)
}

// -------------------------------------------------------------------

// Rpc

// -------------------------------------------------------------------

// AccountLogin_Request

// string account = 1;
inline void AccountLogin_Request::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountLogin_Request::account() const {
  // @@protoc_insertion_point(field_get:c2s.AccountLogin.Request.account)
  return account_.GetNoArena();
}
inline void AccountLogin_Request::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.AccountLogin.Request.account)
}
#if LANG_CXX11
inline void AccountLogin_Request::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.AccountLogin.Request.account)
}
#endif
inline void AccountLogin_Request::set_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.AccountLogin.Request.account)
}
inline void AccountLogin_Request::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.AccountLogin.Request.account)
}
inline ::std::string* AccountLogin_Request::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:c2s.AccountLogin.Request.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountLogin_Request::release_account() {
  // @@protoc_insertion_point(field_release:c2s.AccountLogin.Request.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountLogin_Request::set_allocated_account(::std::string* account) {
  if (account != nullptr) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:c2s.AccountLogin.Request.account)
}

// string token = 2;
inline void AccountLogin_Request::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountLogin_Request::token() const {
  // @@protoc_insertion_point(field_get:c2s.AccountLogin.Request.token)
  return token_.GetNoArena();
}
inline void AccountLogin_Request::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.AccountLogin.Request.token)
}
#if LANG_CXX11
inline void AccountLogin_Request::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.AccountLogin.Request.token)
}
#endif
inline void AccountLogin_Request::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.AccountLogin.Request.token)
}
inline void AccountLogin_Request::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.AccountLogin.Request.token)
}
inline ::std::string* AccountLogin_Request::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:c2s.AccountLogin.Request.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountLogin_Request::release_token() {
  // @@protoc_insertion_point(field_release:c2s.AccountLogin.Request.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountLogin_Request::set_allocated_token(::std::string* token) {
  if (token != nullptr) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:c2s.AccountLogin.Request.token)
}

// string passwrod = 3;
inline void AccountLogin_Request::clear_passwrod() {
  passwrod_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountLogin_Request::passwrod() const {
  // @@protoc_insertion_point(field_get:c2s.AccountLogin.Request.passwrod)
  return passwrod_.GetNoArena();
}
inline void AccountLogin_Request::set_passwrod(const ::std::string& value) {
  
  passwrod_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.AccountLogin.Request.passwrod)
}
#if LANG_CXX11
inline void AccountLogin_Request::set_passwrod(::std::string&& value) {
  
  passwrod_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.AccountLogin.Request.passwrod)
}
#endif
inline void AccountLogin_Request::set_passwrod(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  passwrod_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.AccountLogin.Request.passwrod)
}
inline void AccountLogin_Request::set_passwrod(const char* value, size_t size) {
  
  passwrod_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.AccountLogin.Request.passwrod)
}
inline ::std::string* AccountLogin_Request::mutable_passwrod() {
  
  // @@protoc_insertion_point(field_mutable:c2s.AccountLogin.Request.passwrod)
  return passwrod_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountLogin_Request::release_passwrod() {
  // @@protoc_insertion_point(field_release:c2s.AccountLogin.Request.passwrod)
  
  return passwrod_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountLogin_Request::set_allocated_passwrod(::std::string* passwrod) {
  if (passwrod != nullptr) {
    
  } else {
    
  }
  passwrod_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwrod);
  // @@protoc_insertion_point(field_set_allocated:c2s.AccountLogin.Request.passwrod)
}

// string login_dev = 4;
inline void AccountLogin_Request::clear_login_dev() {
  login_dev_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountLogin_Request::login_dev() const {
  // @@protoc_insertion_point(field_get:c2s.AccountLogin.Request.login_dev)
  return login_dev_.GetNoArena();
}
inline void AccountLogin_Request::set_login_dev(const ::std::string& value) {
  
  login_dev_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.AccountLogin.Request.login_dev)
}
#if LANG_CXX11
inline void AccountLogin_Request::set_login_dev(::std::string&& value) {
  
  login_dev_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.AccountLogin.Request.login_dev)
}
#endif
inline void AccountLogin_Request::set_login_dev(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  login_dev_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.AccountLogin.Request.login_dev)
}
inline void AccountLogin_Request::set_login_dev(const char* value, size_t size) {
  
  login_dev_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.AccountLogin.Request.login_dev)
}
inline ::std::string* AccountLogin_Request::mutable_login_dev() {
  
  // @@protoc_insertion_point(field_mutable:c2s.AccountLogin.Request.login_dev)
  return login_dev_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountLogin_Request::release_login_dev() {
  // @@protoc_insertion_point(field_release:c2s.AccountLogin.Request.login_dev)
  
  return login_dev_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountLogin_Request::set_allocated_login_dev(::std::string* login_dev) {
  if (login_dev != nullptr) {
    
  } else {
    
  }
  login_dev_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login_dev);
  // @@protoc_insertion_point(field_set_allocated:c2s.AccountLogin.Request.login_dev)
}

// -------------------------------------------------------------------

// AccountLogin_Response

// string token = 1;
inline void AccountLogin_Response::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountLogin_Response::token() const {
  // @@protoc_insertion_point(field_get:c2s.AccountLogin.Response.token)
  return token_.GetNoArena();
}
inline void AccountLogin_Response::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.AccountLogin.Response.token)
}
#if LANG_CXX11
inline void AccountLogin_Response::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.AccountLogin.Response.token)
}
#endif
inline void AccountLogin_Response::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.AccountLogin.Response.token)
}
inline void AccountLogin_Response::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.AccountLogin.Response.token)
}
inline ::std::string* AccountLogin_Response::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:c2s.AccountLogin.Response.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountLogin_Response::release_token() {
  // @@protoc_insertion_point(field_release:c2s.AccountLogin.Response.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountLogin_Response::set_allocated_token(::std::string* token) {
  if (token != nullptr) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:c2s.AccountLogin.Response.token)
}

// string gate_token = 2;
inline void AccountLogin_Response::clear_gate_token() {
  gate_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountLogin_Response::gate_token() const {
  // @@protoc_insertion_point(field_get:c2s.AccountLogin.Response.gate_token)
  return gate_token_.GetNoArena();
}
inline void AccountLogin_Response::set_gate_token(const ::std::string& value) {
  
  gate_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.AccountLogin.Response.gate_token)
}
#if LANG_CXX11
inline void AccountLogin_Response::set_gate_token(::std::string&& value) {
  
  gate_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.AccountLogin.Response.gate_token)
}
#endif
inline void AccountLogin_Response::set_gate_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  gate_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.AccountLogin.Response.gate_token)
}
inline void AccountLogin_Response::set_gate_token(const char* value, size_t size) {
  
  gate_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.AccountLogin.Response.gate_token)
}
inline ::std::string* AccountLogin_Response::mutable_gate_token() {
  
  // @@protoc_insertion_point(field_mutable:c2s.AccountLogin.Response.gate_token)
  return gate_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountLogin_Response::release_gate_token() {
  // @@protoc_insertion_point(field_release:c2s.AccountLogin.Response.gate_token)
  
  return gate_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountLogin_Response::set_allocated_gate_token(::std::string* gate_token) {
  if (gate_token != nullptr) {
    
  } else {
    
  }
  gate_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gate_token);
  // @@protoc_insertion_point(field_set_allocated:c2s.AccountLogin.Response.gate_token)
}

// int64 last_logintime = 4;
inline void AccountLogin_Response::clear_last_logintime() {
  last_logintime_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 AccountLogin_Response::last_logintime() const {
  // @@protoc_insertion_point(field_get:c2s.AccountLogin.Response.last_logintime)
  return last_logintime_;
}
inline void AccountLogin_Response::set_last_logintime(::google::protobuf::int64 value) {
  
  last_logintime_ = value;
  // @@protoc_insertion_point(field_set:c2s.AccountLogin.Response.last_logintime)
}

// repeated .c2s.ServerInfo server_infos = 5;
inline int AccountLogin_Response::server_infos_size() const {
  return server_infos_.size();
}
inline void AccountLogin_Response::clear_server_infos() {
  server_infos_.Clear();
}
inline ::c2s::ServerInfo* AccountLogin_Response::mutable_server_infos(int index) {
  // @@protoc_insertion_point(field_mutable:c2s.AccountLogin.Response.server_infos)
  return server_infos_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::c2s::ServerInfo >*
AccountLogin_Response::mutable_server_infos() {
  // @@protoc_insertion_point(field_mutable_list:c2s.AccountLogin.Response.server_infos)
  return &server_infos_;
}
inline const ::c2s::ServerInfo& AccountLogin_Response::server_infos(int index) const {
  // @@protoc_insertion_point(field_get:c2s.AccountLogin.Response.server_infos)
  return server_infos_.Get(index);
}
inline ::c2s::ServerInfo* AccountLogin_Response::add_server_infos() {
  // @@protoc_insertion_point(field_add:c2s.AccountLogin.Response.server_infos)
  return server_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::c2s::ServerInfo >&
AccountLogin_Response::server_infos() const {
  // @@protoc_insertion_point(field_list:c2s.AccountLogin.Response.server_infos)
  return server_infos_;
}

// -------------------------------------------------------------------

// AccountLogin

// -------------------------------------------------------------------

// AccountRegister_Request

// string account = 1;
inline void AccountRegister_Request::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountRegister_Request::account() const {
  // @@protoc_insertion_point(field_get:c2s.AccountRegister.Request.account)
  return account_.GetNoArena();
}
inline void AccountRegister_Request::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.AccountRegister.Request.account)
}
#if LANG_CXX11
inline void AccountRegister_Request::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.AccountRegister.Request.account)
}
#endif
inline void AccountRegister_Request::set_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.AccountRegister.Request.account)
}
inline void AccountRegister_Request::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.AccountRegister.Request.account)
}
inline ::std::string* AccountRegister_Request::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:c2s.AccountRegister.Request.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountRegister_Request::release_account() {
  // @@protoc_insertion_point(field_release:c2s.AccountRegister.Request.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountRegister_Request::set_allocated_account(::std::string* account) {
  if (account != nullptr) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:c2s.AccountRegister.Request.account)
}

// string password = 2;
inline void AccountRegister_Request::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountRegister_Request::password() const {
  // @@protoc_insertion_point(field_get:c2s.AccountRegister.Request.password)
  return password_.GetNoArena();
}
inline void AccountRegister_Request::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.AccountRegister.Request.password)
}
#if LANG_CXX11
inline void AccountRegister_Request::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.AccountRegister.Request.password)
}
#endif
inline void AccountRegister_Request::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.AccountRegister.Request.password)
}
inline void AccountRegister_Request::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.AccountRegister.Request.password)
}
inline ::std::string* AccountRegister_Request::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:c2s.AccountRegister.Request.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountRegister_Request::release_password() {
  // @@protoc_insertion_point(field_release:c2s.AccountRegister.Request.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountRegister_Request::set_allocated_password(::std::string* password) {
  if (password != nullptr) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:c2s.AccountRegister.Request.password)
}

// string login_dev = 3;
inline void AccountRegister_Request::clear_login_dev() {
  login_dev_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountRegister_Request::login_dev() const {
  // @@protoc_insertion_point(field_get:c2s.AccountRegister.Request.login_dev)
  return login_dev_.GetNoArena();
}
inline void AccountRegister_Request::set_login_dev(const ::std::string& value) {
  
  login_dev_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.AccountRegister.Request.login_dev)
}
#if LANG_CXX11
inline void AccountRegister_Request::set_login_dev(::std::string&& value) {
  
  login_dev_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.AccountRegister.Request.login_dev)
}
#endif
inline void AccountRegister_Request::set_login_dev(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  login_dev_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.AccountRegister.Request.login_dev)
}
inline void AccountRegister_Request::set_login_dev(const char* value, size_t size) {
  
  login_dev_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.AccountRegister.Request.login_dev)
}
inline ::std::string* AccountRegister_Request::mutable_login_dev() {
  
  // @@protoc_insertion_point(field_mutable:c2s.AccountRegister.Request.login_dev)
  return login_dev_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountRegister_Request::release_login_dev() {
  // @@protoc_insertion_point(field_release:c2s.AccountRegister.Request.login_dev)
  
  return login_dev_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountRegister_Request::set_allocated_login_dev(::std::string* login_dev) {
  if (login_dev != nullptr) {
    
  } else {
    
  }
  login_dev_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login_dev);
  // @@protoc_insertion_point(field_set_allocated:c2s.AccountRegister.Request.login_dev)
}

// -------------------------------------------------------------------

// AccountRegister_Response

// string token = 1;
inline void AccountRegister_Response::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountRegister_Response::token() const {
  // @@protoc_insertion_point(field_get:c2s.AccountRegister.Response.token)
  return token_.GetNoArena();
}
inline void AccountRegister_Response::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.AccountRegister.Response.token)
}
#if LANG_CXX11
inline void AccountRegister_Response::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.AccountRegister.Response.token)
}
#endif
inline void AccountRegister_Response::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.AccountRegister.Response.token)
}
inline void AccountRegister_Response::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.AccountRegister.Response.token)
}
inline ::std::string* AccountRegister_Response::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:c2s.AccountRegister.Response.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountRegister_Response::release_token() {
  // @@protoc_insertion_point(field_release:c2s.AccountRegister.Response.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountRegister_Response::set_allocated_token(::std::string* token) {
  if (token != nullptr) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:c2s.AccountRegister.Response.token)
}

// -------------------------------------------------------------------

// AccountRegister

// -------------------------------------------------------------------

// ProxyLogin_Request

// string Token = 1;
inline void ProxyLogin_Request::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyLogin_Request::token() const {
  // @@protoc_insertion_point(field_get:c2s.ProxyLogin.Request.Token)
  return token_.GetNoArena();
}
inline void ProxyLogin_Request::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.ProxyLogin.Request.Token)
}
#if LANG_CXX11
inline void ProxyLogin_Request::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:c2s.ProxyLogin.Request.Token)
}
#endif
inline void ProxyLogin_Request::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.ProxyLogin.Request.Token)
}
inline void ProxyLogin_Request::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.ProxyLogin.Request.Token)
}
inline ::std::string* ProxyLogin_Request::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:c2s.ProxyLogin.Request.Token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyLogin_Request::release_token() {
  // @@protoc_insertion_point(field_release:c2s.ProxyLogin.Request.Token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyLogin_Request::set_allocated_token(::std::string* token) {
  if (token != nullptr) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:c2s.ProxyLogin.Request.Token)
}

// -------------------------------------------------------------------

// ProxyLogin

// -------------------------------------------------------------------

// GateLogout_Request

// -------------------------------------------------------------------

// GateLogout_Response

// -------------------------------------------------------------------

// GateLogout

// -------------------------------------------------------------------

// Chat_Request

// -------------------------------------------------------------------

// Chat_Response

// -------------------------------------------------------------------

// Chat_Notice

// -------------------------------------------------------------------

// Chat

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace c2s

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_c2s_2eproto
