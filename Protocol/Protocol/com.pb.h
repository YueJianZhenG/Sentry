// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com.proto

#ifndef PROTOBUF_INCLUDED_com_2eproto
#define PROTOBUF_INCLUDED_com_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_com_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_com_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[20]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_com_2eproto();
namespace com {
class Array;
class ArrayDefaultTypeInternal;
extern ArrayDefaultTypeInternal _Array_default_instance_;
class Array_Double;
class Array_DoubleDefaultTypeInternal;
extern Array_DoubleDefaultTypeInternal _Array_Double_default_instance_;
class Array_Float;
class Array_FloatDefaultTypeInternal;
extern Array_FloatDefaultTypeInternal _Array_Float_default_instance_;
class Array_Int32;
class Array_Int32DefaultTypeInternal;
extern Array_Int32DefaultTypeInternal _Array_Int32_default_instance_;
class Array_Int64;
class Array_Int64DefaultTypeInternal;
extern Array_Int64DefaultTypeInternal _Array_Int64_default_instance_;
class Array_String;
class Array_StringDefaultTypeInternal;
extern Array_StringDefaultTypeInternal _Array_String_default_instance_;
class Http;
class HttpDefaultTypeInternal;
extern HttpDefaultTypeInternal _Http_default_instance_;
class Http_Data;
class Http_DataDefaultTypeInternal;
extern Http_DataDefaultTypeInternal _Http_Data_default_instance_;
class Http_Data_HeadEntry_DoNotUse;
class Http_Data_HeadEntry_DoNotUseDefaultTypeInternal;
extern Http_Data_HeadEntry_DoNotUseDefaultTypeInternal _Http_Data_HeadEntry_DoNotUse_default_instance_;
class Rpc;
class RpcDefaultTypeInternal;
extern RpcDefaultTypeInternal _Rpc_default_instance_;
class Rpc_Auth;
class Rpc_AuthDefaultTypeInternal;
extern Rpc_AuthDefaultTypeInternal _Rpc_Auth_default_instance_;
class Rpc_Request;
class Rpc_RequestDefaultTypeInternal;
extern Rpc_RequestDefaultTypeInternal _Rpc_Request_default_instance_;
class Rpc_Response;
class Rpc_ResponseDefaultTypeInternal;
extern Rpc_ResponseDefaultTypeInternal _Rpc_Response_default_instance_;
class Type;
class TypeDefaultTypeInternal;
extern TypeDefaultTypeInternal _Type_default_instance_;
class Type_Double;
class Type_DoubleDefaultTypeInternal;
extern Type_DoubleDefaultTypeInternal _Type_Double_default_instance_;
class Type_Float;
class Type_FloatDefaultTypeInternal;
extern Type_FloatDefaultTypeInternal _Type_Float_default_instance_;
class Type_Int32;
class Type_Int32DefaultTypeInternal;
extern Type_Int32DefaultTypeInternal _Type_Int32_default_instance_;
class Type_Int64;
class Type_Int64DefaultTypeInternal;
extern Type_Int64DefaultTypeInternal _Type_Int64_default_instance_;
class Type_Json;
class Type_JsonDefaultTypeInternal;
extern Type_JsonDefaultTypeInternal _Type_Json_default_instance_;
class Type_String;
class Type_StringDefaultTypeInternal;
extern Type_StringDefaultTypeInternal _Type_String_default_instance_;
}  // namespace com
namespace google {
namespace protobuf {
template<> ::com::Array* Arena::CreateMaybeMessage<::com::Array>(Arena*);
template<> ::com::Array_Double* Arena::CreateMaybeMessage<::com::Array_Double>(Arena*);
template<> ::com::Array_Float* Arena::CreateMaybeMessage<::com::Array_Float>(Arena*);
template<> ::com::Array_Int32* Arena::CreateMaybeMessage<::com::Array_Int32>(Arena*);
template<> ::com::Array_Int64* Arena::CreateMaybeMessage<::com::Array_Int64>(Arena*);
template<> ::com::Array_String* Arena::CreateMaybeMessage<::com::Array_String>(Arena*);
template<> ::com::Http* Arena::CreateMaybeMessage<::com::Http>(Arena*);
template<> ::com::Http_Data* Arena::CreateMaybeMessage<::com::Http_Data>(Arena*);
template<> ::com::Http_Data_HeadEntry_DoNotUse* Arena::CreateMaybeMessage<::com::Http_Data_HeadEntry_DoNotUse>(Arena*);
template<> ::com::Rpc* Arena::CreateMaybeMessage<::com::Rpc>(Arena*);
template<> ::com::Rpc_Auth* Arena::CreateMaybeMessage<::com::Rpc_Auth>(Arena*);
template<> ::com::Rpc_Request* Arena::CreateMaybeMessage<::com::Rpc_Request>(Arena*);
template<> ::com::Rpc_Response* Arena::CreateMaybeMessage<::com::Rpc_Response>(Arena*);
template<> ::com::Type* Arena::CreateMaybeMessage<::com::Type>(Arena*);
template<> ::com::Type_Double* Arena::CreateMaybeMessage<::com::Type_Double>(Arena*);
template<> ::com::Type_Float* Arena::CreateMaybeMessage<::com::Type_Float>(Arena*);
template<> ::com::Type_Int32* Arena::CreateMaybeMessage<::com::Type_Int32>(Arena*);
template<> ::com::Type_Int64* Arena::CreateMaybeMessage<::com::Type_Int64>(Arena*);
template<> ::com::Type_Json* Arena::CreateMaybeMessage<::com::Type_Json>(Arena*);
template<> ::com::Type_String* Arena::CreateMaybeMessage<::com::Type_String>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace com {

// ===================================================================

class Array_Int32 :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Array.Int32) */ {
 public:
  Array_Int32();
  virtual ~Array_Int32();

  Array_Int32(const Array_Int32& from);

  inline Array_Int32& operator=(const Array_Int32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Array_Int32(Array_Int32&& from) noexcept
    : Array_Int32() {
    *this = ::std::move(from);
  }

  inline Array_Int32& operator=(Array_Int32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Array_Int32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Array_Int32* internal_default_instance() {
    return reinterpret_cast<const Array_Int32*>(
               &_Array_Int32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Array_Int32* other);
  friend void swap(Array_Int32& a, Array_Int32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Array_Int32* New() const final {
    return CreateMaybeMessage<Array_Int32>(nullptr);
  }

  Array_Int32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Array_Int32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Array_Int32& from);
  void MergeFrom(const Array_Int32& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Array_Int32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 array = 1;
  int array_size() const;
  void clear_array();
  static const int kArrayFieldNumber = 1;
  ::google::protobuf::int32 array(int index) const;
  void set_array(int index, ::google::protobuf::int32 value);
  void add_array(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      array() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_array();

  // @@protoc_insertion_point(class_scope:com.Array.Int32)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > array_;
  mutable std::atomic<int> _array_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Array_Int64 :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Array.Int64) */ {
 public:
  Array_Int64();
  virtual ~Array_Int64();

  Array_Int64(const Array_Int64& from);

  inline Array_Int64& operator=(const Array_Int64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Array_Int64(Array_Int64&& from) noexcept
    : Array_Int64() {
    *this = ::std::move(from);
  }

  inline Array_Int64& operator=(Array_Int64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Array_Int64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Array_Int64* internal_default_instance() {
    return reinterpret_cast<const Array_Int64*>(
               &_Array_Int64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Array_Int64* other);
  friend void swap(Array_Int64& a, Array_Int64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Array_Int64* New() const final {
    return CreateMaybeMessage<Array_Int64>(nullptr);
  }

  Array_Int64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Array_Int64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Array_Int64& from);
  void MergeFrom(const Array_Int64& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Array_Int64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 array = 1;
  int array_size() const;
  void clear_array();
  static const int kArrayFieldNumber = 1;
  ::google::protobuf::int64 array(int index) const;
  void set_array(int index, ::google::protobuf::int64 value);
  void add_array(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      array() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_array();

  // @@protoc_insertion_point(class_scope:com.Array.Int64)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > array_;
  mutable std::atomic<int> _array_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Array_String :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Array.String) */ {
 public:
  Array_String();
  virtual ~Array_String();

  Array_String(const Array_String& from);

  inline Array_String& operator=(const Array_String& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Array_String(Array_String&& from) noexcept
    : Array_String() {
    *this = ::std::move(from);
  }

  inline Array_String& operator=(Array_String&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Array_String& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Array_String* internal_default_instance() {
    return reinterpret_cast<const Array_String*>(
               &_Array_String_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Array_String* other);
  friend void swap(Array_String& a, Array_String& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Array_String* New() const final {
    return CreateMaybeMessage<Array_String>(nullptr);
  }

  Array_String* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Array_String>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Array_String& from);
  void MergeFrom(const Array_String& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Array_String* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string array = 1;
  int array_size() const;
  void clear_array();
  static const int kArrayFieldNumber = 1;
  const ::std::string& array(int index) const;
  ::std::string* mutable_array(int index);
  void set_array(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_array(int index, ::std::string&& value);
  #endif
  void set_array(int index, const char* value);
  void set_array(int index, const char* value, size_t size);
  ::std::string* add_array();
  void add_array(const ::std::string& value);
  #if LANG_CXX11
  void add_array(::std::string&& value);
  #endif
  void add_array(const char* value);
  void add_array(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& array() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_array();

  // @@protoc_insertion_point(class_scope:com.Array.String)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> array_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Array_Float :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Array.Float) */ {
 public:
  Array_Float();
  virtual ~Array_Float();

  Array_Float(const Array_Float& from);

  inline Array_Float& operator=(const Array_Float& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Array_Float(Array_Float&& from) noexcept
    : Array_Float() {
    *this = ::std::move(from);
  }

  inline Array_Float& operator=(Array_Float&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Array_Float& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Array_Float* internal_default_instance() {
    return reinterpret_cast<const Array_Float*>(
               &_Array_Float_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Array_Float* other);
  friend void swap(Array_Float& a, Array_Float& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Array_Float* New() const final {
    return CreateMaybeMessage<Array_Float>(nullptr);
  }

  Array_Float* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Array_Float>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Array_Float& from);
  void MergeFrom(const Array_Float& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Array_Float* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float array = 1;
  int array_size() const;
  void clear_array();
  static const int kArrayFieldNumber = 1;
  float array(int index) const;
  void set_array(int index, float value);
  void add_array(float value);
  const ::google::protobuf::RepeatedField< float >&
      array() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_array();

  // @@protoc_insertion_point(class_scope:com.Array.Float)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > array_;
  mutable std::atomic<int> _array_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Array_Double :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Array.Double) */ {
 public:
  Array_Double();
  virtual ~Array_Double();

  Array_Double(const Array_Double& from);

  inline Array_Double& operator=(const Array_Double& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Array_Double(Array_Double&& from) noexcept
    : Array_Double() {
    *this = ::std::move(from);
  }

  inline Array_Double& operator=(Array_Double&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Array_Double& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Array_Double* internal_default_instance() {
    return reinterpret_cast<const Array_Double*>(
               &_Array_Double_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Array_Double* other);
  friend void swap(Array_Double& a, Array_Double& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Array_Double* New() const final {
    return CreateMaybeMessage<Array_Double>(nullptr);
  }

  Array_Double* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Array_Double>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Array_Double& from);
  void MergeFrom(const Array_Double& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Array_Double* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double array = 1;
  int array_size() const;
  void clear_array();
  static const int kArrayFieldNumber = 1;
  double array(int index) const;
  void set_array(int index, double value);
  void add_array(double value);
  const ::google::protobuf::RepeatedField< double >&
      array() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_array();

  // @@protoc_insertion_point(class_scope:com.Array.Double)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > array_;
  mutable std::atomic<int> _array_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Array :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Array) */ {
 public:
  Array();
  virtual ~Array();

  Array(const Array& from);

  inline Array& operator=(const Array& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Array(Array&& from) noexcept
    : Array() {
    *this = ::std::move(from);
  }

  inline Array& operator=(Array&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Array& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Array* internal_default_instance() {
    return reinterpret_cast<const Array*>(
               &_Array_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Array* other);
  friend void swap(Array& a, Array& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Array* New() const final {
    return CreateMaybeMessage<Array>(nullptr);
  }

  Array* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Array>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Array& from);
  void MergeFrom(const Array& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Array* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Array_Int32 Int32;
  typedef Array_Int64 Int64;
  typedef Array_String String;
  typedef Array_Float Float;
  typedef Array_Double Double;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:com.Array)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Type_Int32 :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Type.Int32) */ {
 public:
  Type_Int32();
  virtual ~Type_Int32();

  Type_Int32(const Type_Int32& from);

  inline Type_Int32& operator=(const Type_Int32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Type_Int32(Type_Int32&& from) noexcept
    : Type_Int32() {
    *this = ::std::move(from);
  }

  inline Type_Int32& operator=(Type_Int32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Type_Int32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Type_Int32* internal_default_instance() {
    return reinterpret_cast<const Type_Int32*>(
               &_Type_Int32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Type_Int32* other);
  friend void swap(Type_Int32& a, Type_Int32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Type_Int32* New() const final {
    return CreateMaybeMessage<Type_Int32>(nullptr);
  }

  Type_Int32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Type_Int32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Type_Int32& from);
  void MergeFrom(const Type_Int32& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Type_Int32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.Type.Int32)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Type_Int64 :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Type.Int64) */ {
 public:
  Type_Int64();
  virtual ~Type_Int64();

  Type_Int64(const Type_Int64& from);

  inline Type_Int64& operator=(const Type_Int64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Type_Int64(Type_Int64&& from) noexcept
    : Type_Int64() {
    *this = ::std::move(from);
  }

  inline Type_Int64& operator=(Type_Int64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Type_Int64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Type_Int64* internal_default_instance() {
    return reinterpret_cast<const Type_Int64*>(
               &_Type_Int64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(Type_Int64* other);
  friend void swap(Type_Int64& a, Type_Int64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Type_Int64* New() const final {
    return CreateMaybeMessage<Type_Int64>(nullptr);
  }

  Type_Int64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Type_Int64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Type_Int64& from);
  void MergeFrom(const Type_Int64& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Type_Int64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::int64 value() const;
  void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:com.Type.Int64)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Type_Float :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Type.Float) */ {
 public:
  Type_Float();
  virtual ~Type_Float();

  Type_Float(const Type_Float& from);

  inline Type_Float& operator=(const Type_Float& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Type_Float(Type_Float&& from) noexcept
    : Type_Float() {
    *this = ::std::move(from);
  }

  inline Type_Float& operator=(Type_Float&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Type_Float& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Type_Float* internal_default_instance() {
    return reinterpret_cast<const Type_Float*>(
               &_Type_Float_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(Type_Float* other);
  friend void swap(Type_Float& a, Type_Float& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Type_Float* New() const final {
    return CreateMaybeMessage<Type_Float>(nullptr);
  }

  Type_Float* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Type_Float>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Type_Float& from);
  void MergeFrom(const Type_Float& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Type_Float* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  float value() const;
  void set_value(float value);

  // @@protoc_insertion_point(class_scope:com.Type.Float)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Type_Double :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Type.Double) */ {
 public:
  Type_Double();
  virtual ~Type_Double();

  Type_Double(const Type_Double& from);

  inline Type_Double& operator=(const Type_Double& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Type_Double(Type_Double&& from) noexcept
    : Type_Double() {
    *this = ::std::move(from);
  }

  inline Type_Double& operator=(Type_Double&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Type_Double& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Type_Double* internal_default_instance() {
    return reinterpret_cast<const Type_Double*>(
               &_Type_Double_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(Type_Double* other);
  friend void swap(Type_Double& a, Type_Double& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Type_Double* New() const final {
    return CreateMaybeMessage<Type_Double>(nullptr);
  }

  Type_Double* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Type_Double>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Type_Double& from);
  void MergeFrom(const Type_Double& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Type_Double* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  double value() const;
  void set_value(double value);

  // @@protoc_insertion_point(class_scope:com.Type.Double)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Type_Json :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Type.Json) */ {
 public:
  Type_Json();
  virtual ~Type_Json();

  Type_Json(const Type_Json& from);

  inline Type_Json& operator=(const Type_Json& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Type_Json(Type_Json&& from) noexcept
    : Type_Json() {
    *this = ::std::move(from);
  }

  inline Type_Json& operator=(Type_Json&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Type_Json& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Type_Json* internal_default_instance() {
    return reinterpret_cast<const Type_Json*>(
               &_Type_Json_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(Type_Json* other);
  friend void swap(Type_Json& a, Type_Json& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Type_Json* New() const final {
    return CreateMaybeMessage<Type_Json>(nullptr);
  }

  Type_Json* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Type_Json>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Type_Json& from);
  void MergeFrom(const Type_Json& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Type_Json* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string json = 1;
  void clear_json();
  static const int kJsonFieldNumber = 1;
  const ::std::string& json() const;
  void set_json(const ::std::string& value);
  #if LANG_CXX11
  void set_json(::std::string&& value);
  #endif
  void set_json(const char* value);
  void set_json(const char* value, size_t size);
  ::std::string* mutable_json();
  ::std::string* release_json();
  void set_allocated_json(::std::string* json);

  // @@protoc_insertion_point(class_scope:com.Type.Json)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr json_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Type_String :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Type.String) */ {
 public:
  Type_String();
  virtual ~Type_String();

  Type_String(const Type_String& from);

  inline Type_String& operator=(const Type_String& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Type_String(Type_String&& from) noexcept
    : Type_String() {
    *this = ::std::move(from);
  }

  inline Type_String& operator=(Type_String&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Type_String& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Type_String* internal_default_instance() {
    return reinterpret_cast<const Type_String*>(
               &_Type_String_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(Type_String* other);
  friend void swap(Type_String& a, Type_String& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Type_String* New() const final {
    return CreateMaybeMessage<Type_String>(nullptr);
  }

  Type_String* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Type_String>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Type_String& from);
  void MergeFrom(const Type_String& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Type_String* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string str = 1;
  void clear_str();
  static const int kStrFieldNumber = 1;
  const ::std::string& str() const;
  void set_str(const ::std::string& value);
  #if LANG_CXX11
  void set_str(::std::string&& value);
  #endif
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  ::std::string* mutable_str();
  ::std::string* release_str();
  void set_allocated_str(::std::string* str);

  // @@protoc_insertion_point(class_scope:com.Type.String)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Type :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Type) */ {
 public:
  Type();
  virtual ~Type();

  Type(const Type& from);

  inline Type& operator=(const Type& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Type(Type&& from) noexcept
    : Type() {
    *this = ::std::move(from);
  }

  inline Type& operator=(Type&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Type& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Type* internal_default_instance() {
    return reinterpret_cast<const Type*>(
               &_Type_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(Type* other);
  friend void swap(Type& a, Type& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Type* New() const final {
    return CreateMaybeMessage<Type>(nullptr);
  }

  Type* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Type>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Type& from);
  void MergeFrom(const Type& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Type* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Type_Int32 Int32;
  typedef Type_Int64 Int64;
  typedef Type_Float Float;
  typedef Type_Double Double;
  typedef Type_Json Json;
  typedef Type_String String;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:com.Type)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Rpc_Request :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Rpc.Request) */ {
 public:
  Rpc_Request();
  virtual ~Rpc_Request();

  Rpc_Request(const Rpc_Request& from);

  inline Rpc_Request& operator=(const Rpc_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Rpc_Request(Rpc_Request&& from) noexcept
    : Rpc_Request() {
    *this = ::std::move(from);
  }

  inline Rpc_Request& operator=(Rpc_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Rpc_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Rpc_Request* internal_default_instance() {
    return reinterpret_cast<const Rpc_Request*>(
               &_Rpc_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(Rpc_Request* other);
  friend void swap(Rpc_Request& a, Rpc_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Rpc_Request* New() const final {
    return CreateMaybeMessage<Rpc_Request>(nullptr);
  }

  Rpc_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Rpc_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Rpc_Request& from);
  void MergeFrom(const Rpc_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Rpc_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string func = 3;
  void clear_func();
  static const int kFuncFieldNumber = 3;
  const ::std::string& func() const;
  void set_func(const ::std::string& value);
  #if LANG_CXX11
  void set_func(::std::string&& value);
  #endif
  void set_func(const char* value);
  void set_func(const char* value, size_t size);
  ::std::string* mutable_func();
  ::std::string* release_func();
  void set_allocated_func(::std::string* func);

  // string address = 4;
  void clear_address();
  static const int kAddressFieldNumber = 4;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // .google.protobuf.Any Data = 5;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 5;
  const ::google::protobuf::Any& data() const;
  ::google::protobuf::Any* release_data();
  ::google::protobuf::Any* mutable_data();
  void set_allocated_data(::google::protobuf::Any* data);

  // int64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 user_id() const;
  void set_user_id(::google::protobuf::int64 value);

  // int64 rpc_id = 2;
  void clear_rpc_id();
  static const int kRpcIdFieldNumber = 2;
  ::google::protobuf::int64 rpc_id() const;
  void set_rpc_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:com.Rpc.Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr func_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::Any* data_;
  ::google::protobuf::int64 user_id_;
  ::google::protobuf::int64 rpc_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Rpc_Response :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Rpc.Response) */ {
 public:
  Rpc_Response();
  virtual ~Rpc_Response();

  Rpc_Response(const Rpc_Response& from);

  inline Rpc_Response& operator=(const Rpc_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Rpc_Response(Rpc_Response&& from) noexcept
    : Rpc_Response() {
    *this = ::std::move(from);
  }

  inline Rpc_Response& operator=(Rpc_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Rpc_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Rpc_Response* internal_default_instance() {
    return reinterpret_cast<const Rpc_Response*>(
               &_Rpc_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(Rpc_Response* other);
  friend void swap(Rpc_Response& a, Rpc_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Rpc_Response* New() const final {
    return CreateMaybeMessage<Rpc_Response>(nullptr);
  }

  Rpc_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Rpc_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Rpc_Response& from);
  void MergeFrom(const Rpc_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Rpc_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string error_str = 4;
  void clear_error_str();
  static const int kErrorStrFieldNumber = 4;
  const ::std::string& error_str() const;
  void set_error_str(const ::std::string& value);
  #if LANG_CXX11
  void set_error_str(::std::string&& value);
  #endif
  void set_error_str(const char* value);
  void set_error_str(const char* value, size_t size);
  ::std::string* mutable_error_str();
  ::std::string* release_error_str();
  void set_allocated_error_str(::std::string* error_str);

  // .google.protobuf.Any Data = 5;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 5;
  const ::google::protobuf::Any& data() const;
  ::google::protobuf::Any* release_data();
  ::google::protobuf::Any* mutable_data();
  void set_allocated_data(::google::protobuf::Any* data);

  // int64 rpc_id = 2;
  void clear_rpc_id();
  static const int kRpcIdFieldNumber = 2;
  ::google::protobuf::int64 rpc_id() const;
  void set_rpc_id(::google::protobuf::int64 value);

  // int64 user_id = 3;
  void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  ::google::protobuf::int64 user_id() const;
  void set_user_id(::google::protobuf::int64 value);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.Rpc.Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr error_str_;
  ::google::protobuf::Any* data_;
  ::google::protobuf::int64 rpc_id_;
  ::google::protobuf::int64 user_id_;
  ::google::protobuf::int32 code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Rpc_Auth :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Rpc.Auth) */ {
 public:
  Rpc_Auth();
  virtual ~Rpc_Auth();

  Rpc_Auth(const Rpc_Auth& from);

  inline Rpc_Auth& operator=(const Rpc_Auth& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Rpc_Auth(Rpc_Auth&& from) noexcept
    : Rpc_Auth() {
    *this = ::std::move(from);
  }

  inline Rpc_Auth& operator=(Rpc_Auth&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Rpc_Auth& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Rpc_Auth* internal_default_instance() {
    return reinterpret_cast<const Rpc_Auth*>(
               &_Rpc_Auth_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(Rpc_Auth* other);
  friend void swap(Rpc_Auth& a, Rpc_Auth& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Rpc_Auth* New() const final {
    return CreateMaybeMessage<Rpc_Auth>(nullptr);
  }

  Rpc_Auth* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Rpc_Auth>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Rpc_Auth& from);
  void MergeFrom(const Rpc_Auth& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Rpc_Auth* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:com.Rpc.Auth)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Rpc :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Rpc) */ {
 public:
  Rpc();
  virtual ~Rpc();

  Rpc(const Rpc& from);

  inline Rpc& operator=(const Rpc& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Rpc(Rpc&& from) noexcept
    : Rpc() {
    *this = ::std::move(from);
  }

  inline Rpc& operator=(Rpc&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Rpc& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Rpc* internal_default_instance() {
    return reinterpret_cast<const Rpc*>(
               &_Rpc_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(Rpc* other);
  friend void swap(Rpc& a, Rpc& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Rpc* New() const final {
    return CreateMaybeMessage<Rpc>(nullptr);
  }

  Rpc* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Rpc>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Rpc& from);
  void MergeFrom(const Rpc& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Rpc* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Rpc_Request Request;
  typedef Rpc_Response Response;
  typedef Rpc_Auth Auth;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:com.Rpc)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Http_Data_HeadEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Http_Data_HeadEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<Http_Data_HeadEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  Http_Data_HeadEntry_DoNotUse();
  Http_Data_HeadEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Http_Data_HeadEntry_DoNotUse& other);
  static const Http_Data_HeadEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Http_Data_HeadEntry_DoNotUse*>(&_Http_Data_HeadEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Http_Data :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Http.Data) */ {
 public:
  Http_Data();
  virtual ~Http_Data();

  Http_Data(const Http_Data& from);

  inline Http_Data& operator=(const Http_Data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Http_Data(Http_Data&& from) noexcept
    : Http_Data() {
    *this = ::std::move(from);
  }

  inline Http_Data& operator=(Http_Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Http_Data& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Http_Data* internal_default_instance() {
    return reinterpret_cast<const Http_Data*>(
               &_Http_Data_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(Http_Data* other);
  friend void swap(Http_Data& a, Http_Data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Http_Data* New() const final {
    return CreateMaybeMessage<Http_Data>(nullptr);
  }

  Http_Data* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Http_Data>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Http_Data& from);
  void MergeFrom(const Http_Data& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Http_Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> head = 6;
  int head_size() const;
  void clear_head();
  static const int kHeadFieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      head() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_head();

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // string method = 2;
  void clear_method();
  static const int kMethodFieldNumber = 2;
  const ::std::string& method() const;
  void set_method(const ::std::string& value);
  #if LANG_CXX11
  void set_method(::std::string&& value);
  #endif
  void set_method(const char* value);
  void set_method(const char* value, size_t size);
  ::std::string* mutable_method();
  ::std::string* release_method();
  void set_allocated_method(::std::string* method);

  // string version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // string address = 4;
  void clear_address();
  static const int kAddressFieldNumber = 4;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // string data = 5;
  void clear_data();
  static const int kDataFieldNumber = 5;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:com.Http.Data)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Http_Data_HeadEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > head_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr method_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Http :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Http) */ {
 public:
  Http();
  virtual ~Http();

  Http(const Http& from);

  inline Http& operator=(const Http& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Http(Http&& from) noexcept
    : Http() {
    *this = ::std::move(from);
  }

  inline Http& operator=(Http&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Http& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Http* internal_default_instance() {
    return reinterpret_cast<const Http*>(
               &_Http_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(Http* other);
  friend void swap(Http& a, Http& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Http* New() const final {
    return CreateMaybeMessage<Http>(nullptr);
  }

  Http* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Http>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Http& from);
  void MergeFrom(const Http& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Http* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Http_Data Data;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:com.Http)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Array_Int32

// repeated int32 array = 1;
inline int Array_Int32::array_size() const {
  return array_.size();
}
inline void Array_Int32::clear_array() {
  array_.Clear();
}
inline ::google::protobuf::int32 Array_Int32::array(int index) const {
  // @@protoc_insertion_point(field_get:com.Array.Int32.array)
  return array_.Get(index);
}
inline void Array_Int32::set_array(int index, ::google::protobuf::int32 value) {
  array_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.Array.Int32.array)
}
inline void Array_Int32::add_array(::google::protobuf::int32 value) {
  array_.Add(value);
  // @@protoc_insertion_point(field_add:com.Array.Int32.array)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Array_Int32::array() const {
  // @@protoc_insertion_point(field_list:com.Array.Int32.array)
  return array_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Array_Int32::mutable_array() {
  // @@protoc_insertion_point(field_mutable_list:com.Array.Int32.array)
  return &array_;
}

// -------------------------------------------------------------------

// Array_Int64

// repeated int64 array = 1;
inline int Array_Int64::array_size() const {
  return array_.size();
}
inline void Array_Int64::clear_array() {
  array_.Clear();
}
inline ::google::protobuf::int64 Array_Int64::array(int index) const {
  // @@protoc_insertion_point(field_get:com.Array.Int64.array)
  return array_.Get(index);
}
inline void Array_Int64::set_array(int index, ::google::protobuf::int64 value) {
  array_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.Array.Int64.array)
}
inline void Array_Int64::add_array(::google::protobuf::int64 value) {
  array_.Add(value);
  // @@protoc_insertion_point(field_add:com.Array.Int64.array)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Array_Int64::array() const {
  // @@protoc_insertion_point(field_list:com.Array.Int64.array)
  return array_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Array_Int64::mutable_array() {
  // @@protoc_insertion_point(field_mutable_list:com.Array.Int64.array)
  return &array_;
}

// -------------------------------------------------------------------

// Array_String

// repeated string array = 1;
inline int Array_String::array_size() const {
  return array_.size();
}
inline void Array_String::clear_array() {
  array_.Clear();
}
inline const ::std::string& Array_String::array(int index) const {
  // @@protoc_insertion_point(field_get:com.Array.String.array)
  return array_.Get(index);
}
inline ::std::string* Array_String::mutable_array(int index) {
  // @@protoc_insertion_point(field_mutable:com.Array.String.array)
  return array_.Mutable(index);
}
inline void Array_String::set_array(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:com.Array.String.array)
  array_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Array_String::set_array(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:com.Array.String.array)
  array_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Array_String::set_array(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  array_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.Array.String.array)
}
inline void Array_String::set_array(int index, const char* value, size_t size) {
  array_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.Array.String.array)
}
inline ::std::string* Array_String::add_array() {
  // @@protoc_insertion_point(field_add_mutable:com.Array.String.array)
  return array_.Add();
}
inline void Array_String::add_array(const ::std::string& value) {
  array_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.Array.String.array)
}
#if LANG_CXX11
inline void Array_String::add_array(::std::string&& value) {
  array_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.Array.String.array)
}
#endif
inline void Array_String::add_array(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  array_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.Array.String.array)
}
inline void Array_String::add_array(const char* value, size_t size) {
  array_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.Array.String.array)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
Array_String::array() const {
  // @@protoc_insertion_point(field_list:com.Array.String.array)
  return array_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
Array_String::mutable_array() {
  // @@protoc_insertion_point(field_mutable_list:com.Array.String.array)
  return &array_;
}

// -------------------------------------------------------------------

// Array_Float

// repeated float array = 1;
inline int Array_Float::array_size() const {
  return array_.size();
}
inline void Array_Float::clear_array() {
  array_.Clear();
}
inline float Array_Float::array(int index) const {
  // @@protoc_insertion_point(field_get:com.Array.Float.array)
  return array_.Get(index);
}
inline void Array_Float::set_array(int index, float value) {
  array_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.Array.Float.array)
}
inline void Array_Float::add_array(float value) {
  array_.Add(value);
  // @@protoc_insertion_point(field_add:com.Array.Float.array)
}
inline const ::google::protobuf::RepeatedField< float >&
Array_Float::array() const {
  // @@protoc_insertion_point(field_list:com.Array.Float.array)
  return array_;
}
inline ::google::protobuf::RepeatedField< float >*
Array_Float::mutable_array() {
  // @@protoc_insertion_point(field_mutable_list:com.Array.Float.array)
  return &array_;
}

// -------------------------------------------------------------------

// Array_Double

// repeated double array = 1;
inline int Array_Double::array_size() const {
  return array_.size();
}
inline void Array_Double::clear_array() {
  array_.Clear();
}
inline double Array_Double::array(int index) const {
  // @@protoc_insertion_point(field_get:com.Array.Double.array)
  return array_.Get(index);
}
inline void Array_Double::set_array(int index, double value) {
  array_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.Array.Double.array)
}
inline void Array_Double::add_array(double value) {
  array_.Add(value);
  // @@protoc_insertion_point(field_add:com.Array.Double.array)
}
inline const ::google::protobuf::RepeatedField< double >&
Array_Double::array() const {
  // @@protoc_insertion_point(field_list:com.Array.Double.array)
  return array_;
}
inline ::google::protobuf::RepeatedField< double >*
Array_Double::mutable_array() {
  // @@protoc_insertion_point(field_mutable_list:com.Array.Double.array)
  return &array_;
}

// -------------------------------------------------------------------

// Array

// -------------------------------------------------------------------

// Type_Int32

// int32 value = 1;
inline void Type_Int32::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 Type_Int32::value() const {
  // @@protoc_insertion_point(field_get:com.Type.Int32.value)
  return value_;
}
inline void Type_Int32::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:com.Type.Int32.value)
}

// -------------------------------------------------------------------

// Type_Int64

// int64 value = 1;
inline void Type_Int64::clear_value() {
  value_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Type_Int64::value() const {
  // @@protoc_insertion_point(field_get:com.Type.Int64.value)
  return value_;
}
inline void Type_Int64::set_value(::google::protobuf::int64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:com.Type.Int64.value)
}

// -------------------------------------------------------------------

// Type_Float

// float value = 1;
inline void Type_Float::clear_value() {
  value_ = 0;
}
inline float Type_Float::value() const {
  // @@protoc_insertion_point(field_get:com.Type.Float.value)
  return value_;
}
inline void Type_Float::set_value(float value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:com.Type.Float.value)
}

// -------------------------------------------------------------------

// Type_Double

// double value = 1;
inline void Type_Double::clear_value() {
  value_ = 0;
}
inline double Type_Double::value() const {
  // @@protoc_insertion_point(field_get:com.Type.Double.value)
  return value_;
}
inline void Type_Double::set_value(double value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:com.Type.Double.value)
}

// -------------------------------------------------------------------

// Type_Json

// string json = 1;
inline void Type_Json::clear_json() {
  json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Type_Json::json() const {
  // @@protoc_insertion_point(field_get:com.Type.Json.json)
  return json_.GetNoArena();
}
inline void Type_Json::set_json(const ::std::string& value) {
  
  json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.Type.Json.json)
}
#if LANG_CXX11
inline void Type_Json::set_json(::std::string&& value) {
  
  json_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.Type.Json.json)
}
#endif
inline void Type_Json::set_json(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.Type.Json.json)
}
inline void Type_Json::set_json(const char* value, size_t size) {
  
  json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.Type.Json.json)
}
inline ::std::string* Type_Json::mutable_json() {
  
  // @@protoc_insertion_point(field_mutable:com.Type.Json.json)
  return json_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Type_Json::release_json() {
  // @@protoc_insertion_point(field_release:com.Type.Json.json)
  
  return json_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Type_Json::set_allocated_json(::std::string* json) {
  if (json != nullptr) {
    
  } else {
    
  }
  json_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), json);
  // @@protoc_insertion_point(field_set_allocated:com.Type.Json.json)
}

// -------------------------------------------------------------------

// Type_String

// string str = 1;
inline void Type_String::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Type_String::str() const {
  // @@protoc_insertion_point(field_get:com.Type.String.str)
  return str_.GetNoArena();
}
inline void Type_String::set_str(const ::std::string& value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.Type.String.str)
}
#if LANG_CXX11
inline void Type_String::set_str(::std::string&& value) {
  
  str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.Type.String.str)
}
#endif
inline void Type_String::set_str(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.Type.String.str)
}
inline void Type_String::set_str(const char* value, size_t size) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.Type.String.str)
}
inline ::std::string* Type_String::mutable_str() {
  
  // @@protoc_insertion_point(field_mutable:com.Type.String.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Type_String::release_str() {
  // @@protoc_insertion_point(field_release:com.Type.String.str)
  
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Type_String::set_allocated_str(::std::string* str) {
  if (str != nullptr) {
    
  } else {
    
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:com.Type.String.str)
}

// -------------------------------------------------------------------

// Type

// -------------------------------------------------------------------

// Rpc_Request

// int64 user_id = 1;
inline void Rpc_Request::clear_user_id() {
  user_id_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Rpc_Request::user_id() const {
  // @@protoc_insertion_point(field_get:com.Rpc.Request.user_id)
  return user_id_;
}
inline void Rpc_Request::set_user_id(::google::protobuf::int64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:com.Rpc.Request.user_id)
}

// int64 rpc_id = 2;
inline void Rpc_Request::clear_rpc_id() {
  rpc_id_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Rpc_Request::rpc_id() const {
  // @@protoc_insertion_point(field_get:com.Rpc.Request.rpc_id)
  return rpc_id_;
}
inline void Rpc_Request::set_rpc_id(::google::protobuf::int64 value) {
  
  rpc_id_ = value;
  // @@protoc_insertion_point(field_set:com.Rpc.Request.rpc_id)
}

// string func = 3;
inline void Rpc_Request::clear_func() {
  func_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Rpc_Request::func() const {
  // @@protoc_insertion_point(field_get:com.Rpc.Request.func)
  return func_.GetNoArena();
}
inline void Rpc_Request::set_func(const ::std::string& value) {
  
  func_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.Rpc.Request.func)
}
#if LANG_CXX11
inline void Rpc_Request::set_func(::std::string&& value) {
  
  func_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.Rpc.Request.func)
}
#endif
inline void Rpc_Request::set_func(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  func_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.Rpc.Request.func)
}
inline void Rpc_Request::set_func(const char* value, size_t size) {
  
  func_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.Rpc.Request.func)
}
inline ::std::string* Rpc_Request::mutable_func() {
  
  // @@protoc_insertion_point(field_mutable:com.Rpc.Request.func)
  return func_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Rpc_Request::release_func() {
  // @@protoc_insertion_point(field_release:com.Rpc.Request.func)
  
  return func_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Rpc_Request::set_allocated_func(::std::string* func) {
  if (func != nullptr) {
    
  } else {
    
  }
  func_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), func);
  // @@protoc_insertion_point(field_set_allocated:com.Rpc.Request.func)
}

// string address = 4;
inline void Rpc_Request::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Rpc_Request::address() const {
  // @@protoc_insertion_point(field_get:com.Rpc.Request.address)
  return address_.GetNoArena();
}
inline void Rpc_Request::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.Rpc.Request.address)
}
#if LANG_CXX11
inline void Rpc_Request::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.Rpc.Request.address)
}
#endif
inline void Rpc_Request::set_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.Rpc.Request.address)
}
inline void Rpc_Request::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.Rpc.Request.address)
}
inline ::std::string* Rpc_Request::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:com.Rpc.Request.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Rpc_Request::release_address() {
  // @@protoc_insertion_point(field_release:com.Rpc.Request.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Rpc_Request::set_allocated_address(::std::string* address) {
  if (address != nullptr) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:com.Rpc.Request.address)
}

// .google.protobuf.Any Data = 5;
inline bool Rpc_Request::has_data() const {
  return this != internal_default_instance() && data_ != nullptr;
}
inline const ::google::protobuf::Any& Rpc_Request::data() const {
  const ::google::protobuf::Any* p = data_;
  // @@protoc_insertion_point(field_get:com.Rpc.Request.Data)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* Rpc_Request::release_data() {
  // @@protoc_insertion_point(field_release:com.Rpc.Request.Data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* Rpc_Request::mutable_data() {
  
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Any>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.Rpc.Request.Data)
  return data_;
}
inline void Rpc_Request::set_allocated_data(::google::protobuf::Any* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:com.Rpc.Request.Data)
}

// -------------------------------------------------------------------

// Rpc_Response

// int32 code = 1;
inline void Rpc_Response::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 Rpc_Response::code() const {
  // @@protoc_insertion_point(field_get:com.Rpc.Response.code)
  return code_;
}
inline void Rpc_Response::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:com.Rpc.Response.code)
}

// int64 rpc_id = 2;
inline void Rpc_Response::clear_rpc_id() {
  rpc_id_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Rpc_Response::rpc_id() const {
  // @@protoc_insertion_point(field_get:com.Rpc.Response.rpc_id)
  return rpc_id_;
}
inline void Rpc_Response::set_rpc_id(::google::protobuf::int64 value) {
  
  rpc_id_ = value;
  // @@protoc_insertion_point(field_set:com.Rpc.Response.rpc_id)
}

// int64 user_id = 3;
inline void Rpc_Response::clear_user_id() {
  user_id_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Rpc_Response::user_id() const {
  // @@protoc_insertion_point(field_get:com.Rpc.Response.user_id)
  return user_id_;
}
inline void Rpc_Response::set_user_id(::google::protobuf::int64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:com.Rpc.Response.user_id)
}

// string error_str = 4;
inline void Rpc_Response::clear_error_str() {
  error_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Rpc_Response::error_str() const {
  // @@protoc_insertion_point(field_get:com.Rpc.Response.error_str)
  return error_str_.GetNoArena();
}
inline void Rpc_Response::set_error_str(const ::std::string& value) {
  
  error_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.Rpc.Response.error_str)
}
#if LANG_CXX11
inline void Rpc_Response::set_error_str(::std::string&& value) {
  
  error_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.Rpc.Response.error_str)
}
#endif
inline void Rpc_Response::set_error_str(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  error_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.Rpc.Response.error_str)
}
inline void Rpc_Response::set_error_str(const char* value, size_t size) {
  
  error_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.Rpc.Response.error_str)
}
inline ::std::string* Rpc_Response::mutable_error_str() {
  
  // @@protoc_insertion_point(field_mutable:com.Rpc.Response.error_str)
  return error_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Rpc_Response::release_error_str() {
  // @@protoc_insertion_point(field_release:com.Rpc.Response.error_str)
  
  return error_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Rpc_Response::set_allocated_error_str(::std::string* error_str) {
  if (error_str != nullptr) {
    
  } else {
    
  }
  error_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_str);
  // @@protoc_insertion_point(field_set_allocated:com.Rpc.Response.error_str)
}

// .google.protobuf.Any Data = 5;
inline bool Rpc_Response::has_data() const {
  return this != internal_default_instance() && data_ != nullptr;
}
inline const ::google::protobuf::Any& Rpc_Response::data() const {
  const ::google::protobuf::Any* p = data_;
  // @@protoc_insertion_point(field_get:com.Rpc.Response.Data)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* Rpc_Response::release_data() {
  // @@protoc_insertion_point(field_release:com.Rpc.Response.Data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* Rpc_Response::mutable_data() {
  
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Any>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.Rpc.Response.Data)
  return data_;
}
inline void Rpc_Response::set_allocated_data(::google::protobuf::Any* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:com.Rpc.Response.Data)
}

// -------------------------------------------------------------------

// Rpc_Auth

// string token = 1;
inline void Rpc_Auth::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Rpc_Auth::token() const {
  // @@protoc_insertion_point(field_get:com.Rpc.Auth.token)
  return token_.GetNoArena();
}
inline void Rpc_Auth::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.Rpc.Auth.token)
}
#if LANG_CXX11
inline void Rpc_Auth::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.Rpc.Auth.token)
}
#endif
inline void Rpc_Auth::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.Rpc.Auth.token)
}
inline void Rpc_Auth::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.Rpc.Auth.token)
}
inline ::std::string* Rpc_Auth::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:com.Rpc.Auth.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Rpc_Auth::release_token() {
  // @@protoc_insertion_point(field_release:com.Rpc.Auth.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Rpc_Auth::set_allocated_token(::std::string* token) {
  if (token != nullptr) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:com.Rpc.Auth.token)
}

// -------------------------------------------------------------------

// Rpc

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Http_Data

// string path = 1;
inline void Http_Data::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Http_Data::path() const {
  // @@protoc_insertion_point(field_get:com.Http.Data.path)
  return path_.GetNoArena();
}
inline void Http_Data::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.Http.Data.path)
}
#if LANG_CXX11
inline void Http_Data::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.Http.Data.path)
}
#endif
inline void Http_Data::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.Http.Data.path)
}
inline void Http_Data::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.Http.Data.path)
}
inline ::std::string* Http_Data::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:com.Http.Data.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Http_Data::release_path() {
  // @@protoc_insertion_point(field_release:com.Http.Data.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Http_Data::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:com.Http.Data.path)
}

// string method = 2;
inline void Http_Data::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Http_Data::method() const {
  // @@protoc_insertion_point(field_get:com.Http.Data.method)
  return method_.GetNoArena();
}
inline void Http_Data::set_method(const ::std::string& value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.Http.Data.method)
}
#if LANG_CXX11
inline void Http_Data::set_method(::std::string&& value) {
  
  method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.Http.Data.method)
}
#endif
inline void Http_Data::set_method(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.Http.Data.method)
}
inline void Http_Data::set_method(const char* value, size_t size) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.Http.Data.method)
}
inline ::std::string* Http_Data::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:com.Http.Data.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Http_Data::release_method() {
  // @@protoc_insertion_point(field_release:com.Http.Data.method)
  
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Http_Data::set_allocated_method(::std::string* method) {
  if (method != nullptr) {
    
  } else {
    
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:com.Http.Data.method)
}

// string version = 3;
inline void Http_Data::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Http_Data::version() const {
  // @@protoc_insertion_point(field_get:com.Http.Data.version)
  return version_.GetNoArena();
}
inline void Http_Data::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.Http.Data.version)
}
#if LANG_CXX11
inline void Http_Data::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.Http.Data.version)
}
#endif
inline void Http_Data::set_version(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.Http.Data.version)
}
inline void Http_Data::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.Http.Data.version)
}
inline ::std::string* Http_Data::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:com.Http.Data.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Http_Data::release_version() {
  // @@protoc_insertion_point(field_release:com.Http.Data.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Http_Data::set_allocated_version(::std::string* version) {
  if (version != nullptr) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:com.Http.Data.version)
}

// string address = 4;
inline void Http_Data::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Http_Data::address() const {
  // @@protoc_insertion_point(field_get:com.Http.Data.address)
  return address_.GetNoArena();
}
inline void Http_Data::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.Http.Data.address)
}
#if LANG_CXX11
inline void Http_Data::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.Http.Data.address)
}
#endif
inline void Http_Data::set_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.Http.Data.address)
}
inline void Http_Data::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.Http.Data.address)
}
inline ::std::string* Http_Data::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:com.Http.Data.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Http_Data::release_address() {
  // @@protoc_insertion_point(field_release:com.Http.Data.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Http_Data::set_allocated_address(::std::string* address) {
  if (address != nullptr) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:com.Http.Data.address)
}

// string data = 5;
inline void Http_Data::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Http_Data::data() const {
  // @@protoc_insertion_point(field_get:com.Http.Data.data)
  return data_.GetNoArena();
}
inline void Http_Data::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.Http.Data.data)
}
#if LANG_CXX11
inline void Http_Data::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.Http.Data.data)
}
#endif
inline void Http_Data::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.Http.Data.data)
}
inline void Http_Data::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.Http.Data.data)
}
inline ::std::string* Http_Data::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:com.Http.Data.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Http_Data::release_data() {
  // @@protoc_insertion_point(field_release:com.Http.Data.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Http_Data::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:com.Http.Data.data)
}

// map<string, string> head = 6;
inline int Http_Data::head_size() const {
  return head_.size();
}
inline void Http_Data::clear_head() {
  head_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Http_Data::head() const {
  // @@protoc_insertion_point(field_map:com.Http.Data.head)
  return head_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Http_Data::mutable_head() {
  // @@protoc_insertion_point(field_mutable_map:com.Http.Data.head)
  return head_.MutableMap();
}

// -------------------------------------------------------------------

// Http

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_com_2eproto
