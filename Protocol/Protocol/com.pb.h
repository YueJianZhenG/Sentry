// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com.proto

#ifndef PROTOBUF_INCLUDED_com_2eproto
#define PROTOBUF_INCLUDED_com_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_com_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_com_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[13]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_com_2eproto();
namespace com {
class DoubleData;
class DoubleDataDefaultTypeInternal;
extern DoubleDataDefaultTypeInternal _DoubleData_default_instance_;
class Int32Array;
class Int32ArrayDefaultTypeInternal;
extern Int32ArrayDefaultTypeInternal _Int32Array_default_instance_;
class Int32Data;
class Int32DataDefaultTypeInternal;
extern Int32DataDefaultTypeInternal _Int32Data_default_instance_;
class Int64Array;
class Int64ArrayDefaultTypeInternal;
extern Int64ArrayDefaultTypeInternal _Int64Array_default_instance_;
class Int64Data;
class Int64DataDefaultTypeInternal;
extern Int64DataDefaultTypeInternal _Int64Data_default_instance_;
class Rpc;
class RpcDefaultTypeInternal;
extern RpcDefaultTypeInternal _Rpc_default_instance_;
class Rpc_Request;
class Rpc_RequestDefaultTypeInternal;
extern Rpc_RequestDefaultTypeInternal _Rpc_Request_default_instance_;
class Rpc_Response;
class Rpc_ResponseDefaultTypeInternal;
extern Rpc_ResponseDefaultTypeInternal _Rpc_Response_default_instance_;
class StringArray;
class StringArrayDefaultTypeInternal;
extern StringArrayDefaultTypeInternal _StringArray_default_instance_;
class StringData;
class StringDataDefaultTypeInternal;
extern StringDataDefaultTypeInternal _StringData_default_instance_;
class StringMap;
class StringMapDefaultTypeInternal;
extern StringMapDefaultTypeInternal _StringMap_default_instance_;
class StringMap_DataEntry_DoNotUse;
class StringMap_DataEntry_DoNotUseDefaultTypeInternal;
extern StringMap_DataEntry_DoNotUseDefaultTypeInternal _StringMap_DataEntry_DoNotUse_default_instance_;
class floatData;
class floatDataDefaultTypeInternal;
extern floatDataDefaultTypeInternal _floatData_default_instance_;
}  // namespace com
namespace google {
namespace protobuf {
template<> ::com::DoubleData* Arena::CreateMaybeMessage<::com::DoubleData>(Arena*);
template<> ::com::Int32Array* Arena::CreateMaybeMessage<::com::Int32Array>(Arena*);
template<> ::com::Int32Data* Arena::CreateMaybeMessage<::com::Int32Data>(Arena*);
template<> ::com::Int64Array* Arena::CreateMaybeMessage<::com::Int64Array>(Arena*);
template<> ::com::Int64Data* Arena::CreateMaybeMessage<::com::Int64Data>(Arena*);
template<> ::com::Rpc* Arena::CreateMaybeMessage<::com::Rpc>(Arena*);
template<> ::com::Rpc_Request* Arena::CreateMaybeMessage<::com::Rpc_Request>(Arena*);
template<> ::com::Rpc_Response* Arena::CreateMaybeMessage<::com::Rpc_Response>(Arena*);
template<> ::com::StringArray* Arena::CreateMaybeMessage<::com::StringArray>(Arena*);
template<> ::com::StringData* Arena::CreateMaybeMessage<::com::StringData>(Arena*);
template<> ::com::StringMap* Arena::CreateMaybeMessage<::com::StringMap>(Arena*);
template<> ::com::StringMap_DataEntry_DoNotUse* Arena::CreateMaybeMessage<::com::StringMap_DataEntry_DoNotUse>(Arena*);
template<> ::com::floatData* Arena::CreateMaybeMessage<::com::floatData>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace com {

// ===================================================================

class StringArray :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.StringArray) */ {
 public:
  StringArray();
  virtual ~StringArray();

  StringArray(const StringArray& from);

  inline StringArray& operator=(const StringArray& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StringArray(StringArray&& from) noexcept
    : StringArray() {
    *this = ::std::move(from);
  }

  inline StringArray& operator=(StringArray&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StringArray& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringArray* internal_default_instance() {
    return reinterpret_cast<const StringArray*>(
               &_StringArray_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(StringArray* other);
  friend void swap(StringArray& a, StringArray& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StringArray* New() const final {
    return CreateMaybeMessage<StringArray>(nullptr);
  }

  StringArray* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StringArray>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StringArray& from);
  void MergeFrom(const StringArray& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string DataArray = 1;
  int dataarray_size() const;
  void clear_dataarray();
  static const int kDataArrayFieldNumber = 1;
  const ::std::string& dataarray(int index) const;
  ::std::string* mutable_dataarray(int index);
  void set_dataarray(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_dataarray(int index, ::std::string&& value);
  #endif
  void set_dataarray(int index, const char* value);
  void set_dataarray(int index, const char* value, size_t size);
  ::std::string* add_dataarray();
  void add_dataarray(const ::std::string& value);
  #if LANG_CXX11
  void add_dataarray(::std::string&& value);
  #endif
  void add_dataarray(const char* value);
  void add_dataarray(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& dataarray() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_dataarray();

  // @@protoc_insertion_point(class_scope:com.StringArray)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> dataarray_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Int32Array :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Int32Array) */ {
 public:
  Int32Array();
  virtual ~Int32Array();

  Int32Array(const Int32Array& from);

  inline Int32Array& operator=(const Int32Array& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int32Array(Int32Array&& from) noexcept
    : Int32Array() {
    *this = ::std::move(from);
  }

  inline Int32Array& operator=(Int32Array&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Int32Array& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int32Array* internal_default_instance() {
    return reinterpret_cast<const Int32Array*>(
               &_Int32Array_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Int32Array* other);
  friend void swap(Int32Array& a, Int32Array& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int32Array* New() const final {
    return CreateMaybeMessage<Int32Array>(nullptr);
  }

  Int32Array* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Int32Array>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Int32Array& from);
  void MergeFrom(const Int32Array& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Int32Array* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 DataArray = 1;
  int dataarray_size() const;
  void clear_dataarray();
  static const int kDataArrayFieldNumber = 1;
  ::google::protobuf::int32 dataarray(int index) const;
  void set_dataarray(int index, ::google::protobuf::int32 value);
  void add_dataarray(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dataarray() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dataarray();

  // @@protoc_insertion_point(class_scope:com.Int32Array)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dataarray_;
  mutable std::atomic<int> _dataarray_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Int64Array :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Int64Array) */ {
 public:
  Int64Array();
  virtual ~Int64Array();

  Int64Array(const Int64Array& from);

  inline Int64Array& operator=(const Int64Array& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int64Array(Int64Array&& from) noexcept
    : Int64Array() {
    *this = ::std::move(from);
  }

  inline Int64Array& operator=(Int64Array&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Int64Array& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int64Array* internal_default_instance() {
    return reinterpret_cast<const Int64Array*>(
               &_Int64Array_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Int64Array* other);
  friend void swap(Int64Array& a, Int64Array& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int64Array* New() const final {
    return CreateMaybeMessage<Int64Array>(nullptr);
  }

  Int64Array* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Int64Array>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Int64Array& from);
  void MergeFrom(const Int64Array& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Int64Array* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 DataArray = 1;
  int dataarray_size() const;
  void clear_dataarray();
  static const int kDataArrayFieldNumber = 1;
  ::google::protobuf::int64 dataarray(int index) const;
  void set_dataarray(int index, ::google::protobuf::int64 value);
  void add_dataarray(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      dataarray() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_dataarray();

  // @@protoc_insertion_point(class_scope:com.Int64Array)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > dataarray_;
  mutable std::atomic<int> _dataarray_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class StringData :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.StringData) */ {
 public:
  StringData();
  virtual ~StringData();

  StringData(const StringData& from);

  inline StringData& operator=(const StringData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StringData(StringData&& from) noexcept
    : StringData() {
    *this = ::std::move(from);
  }

  inline StringData& operator=(StringData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StringData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringData* internal_default_instance() {
    return reinterpret_cast<const StringData*>(
               &_StringData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(StringData* other);
  friend void swap(StringData& a, StringData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StringData* New() const final {
    return CreateMaybeMessage<StringData>(nullptr);
  }

  StringData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StringData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StringData& from);
  void MergeFrom(const StringData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:com.StringData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Int32Data :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Int32Data) */ {
 public:
  Int32Data();
  virtual ~Int32Data();

  Int32Data(const Int32Data& from);

  inline Int32Data& operator=(const Int32Data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int32Data(Int32Data&& from) noexcept
    : Int32Data() {
    *this = ::std::move(from);
  }

  inline Int32Data& operator=(Int32Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Int32Data& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int32Data* internal_default_instance() {
    return reinterpret_cast<const Int32Data*>(
               &_Int32Data_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Int32Data* other);
  friend void swap(Int32Data& a, Int32Data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int32Data* New() const final {
    return CreateMaybeMessage<Int32Data>(nullptr);
  }

  Int32Data* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Int32Data>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Int32Data& from);
  void MergeFrom(const Int32Data& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Int32Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 Data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::int32 data() const;
  void set_data(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.Int32Data)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Int64Data :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Int64Data) */ {
 public:
  Int64Data();
  virtual ~Int64Data();

  Int64Data(const Int64Data& from);

  inline Int64Data& operator=(const Int64Data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int64Data(Int64Data&& from) noexcept
    : Int64Data() {
    *this = ::std::move(from);
  }

  inline Int64Data& operator=(Int64Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Int64Data& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int64Data* internal_default_instance() {
    return reinterpret_cast<const Int64Data*>(
               &_Int64Data_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Int64Data* other);
  friend void swap(Int64Data& a, Int64Data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int64Data* New() const final {
    return CreateMaybeMessage<Int64Data>(nullptr);
  }

  Int64Data* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Int64Data>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Int64Data& from);
  void MergeFrom(const Int64Data& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Int64Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 Data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::int64 data() const;
  void set_data(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:com.Int64Data)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class floatData :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.floatData) */ {
 public:
  floatData();
  virtual ~floatData();

  floatData(const floatData& from);

  inline floatData& operator=(const floatData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  floatData(floatData&& from) noexcept
    : floatData() {
    *this = ::std::move(from);
  }

  inline floatData& operator=(floatData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const floatData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const floatData* internal_default_instance() {
    return reinterpret_cast<const floatData*>(
               &_floatData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(floatData* other);
  friend void swap(floatData& a, floatData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline floatData* New() const final {
    return CreateMaybeMessage<floatData>(nullptr);
  }

  floatData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<floatData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const floatData& from);
  void MergeFrom(const floatData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(floatData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float Data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  float data() const;
  void set_data(float value);

  // @@protoc_insertion_point(class_scope:com.floatData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class DoubleData :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.DoubleData) */ {
 public:
  DoubleData();
  virtual ~DoubleData();

  DoubleData(const DoubleData& from);

  inline DoubleData& operator=(const DoubleData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DoubleData(DoubleData&& from) noexcept
    : DoubleData() {
    *this = ::std::move(from);
  }

  inline DoubleData& operator=(DoubleData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DoubleData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DoubleData* internal_default_instance() {
    return reinterpret_cast<const DoubleData*>(
               &_DoubleData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(DoubleData* other);
  friend void swap(DoubleData& a, DoubleData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DoubleData* New() const final {
    return CreateMaybeMessage<DoubleData>(nullptr);
  }

  DoubleData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DoubleData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DoubleData& from);
  void MergeFrom(const DoubleData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DoubleData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double Data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  double data() const;
  void set_data(double value);

  // @@protoc_insertion_point(class_scope:com.DoubleData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class StringMap_DataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<StringMap_DataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<StringMap_DataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  StringMap_DataEntry_DoNotUse();
  StringMap_DataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const StringMap_DataEntry_DoNotUse& other);
  static const StringMap_DataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const StringMap_DataEntry_DoNotUse*>(&_StringMap_DataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class StringMap :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.StringMap) */ {
 public:
  StringMap();
  virtual ~StringMap();

  StringMap(const StringMap& from);

  inline StringMap& operator=(const StringMap& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StringMap(StringMap&& from) noexcept
    : StringMap() {
    *this = ::std::move(from);
  }

  inline StringMap& operator=(StringMap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StringMap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringMap* internal_default_instance() {
    return reinterpret_cast<const StringMap*>(
               &_StringMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(StringMap* other);
  friend void swap(StringMap& a, StringMap& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StringMap* New() const final {
    return CreateMaybeMessage<StringMap>(nullptr);
  }

  StringMap* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StringMap>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StringMap& from);
  void MergeFrom(const StringMap& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> Data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      data() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:com.StringMap)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      StringMap_DataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Rpc_Request :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Rpc.Request) */ {
 public:
  Rpc_Request();
  virtual ~Rpc_Request();

  Rpc_Request(const Rpc_Request& from);

  inline Rpc_Request& operator=(const Rpc_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Rpc_Request(Rpc_Request&& from) noexcept
    : Rpc_Request() {
    *this = ::std::move(from);
  }

  inline Rpc_Request& operator=(Rpc_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Rpc_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Rpc_Request* internal_default_instance() {
    return reinterpret_cast<const Rpc_Request*>(
               &_Rpc_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(Rpc_Request* other);
  friend void swap(Rpc_Request& a, Rpc_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Rpc_Request* New() const final {
    return CreateMaybeMessage<Rpc_Request>(nullptr);
  }

  Rpc_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Rpc_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Rpc_Request& from);
  void MergeFrom(const Rpc_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Rpc_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Any Data = 5;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 5;
  const ::google::protobuf::Any& data() const;
  ::google::protobuf::Any* release_data();
  ::google::protobuf::Any* mutable_data();
  void set_allocated_data(::google::protobuf::Any* data);

  // int64 UserId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // uint32 RpcId = 2;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 2;
  ::google::protobuf::uint32 rpcid() const;
  void set_rpcid(::google::protobuf::uint32 value);

  // int32 MethodId = 3;
  void clear_methodid();
  static const int kMethodIdFieldNumber = 3;
  ::google::protobuf::int32 methodid() const;
  void set_methodid(::google::protobuf::int32 value);

  // int64 SocketId = 4;
  void clear_socketid();
  static const int kSocketIdFieldNumber = 4;
  ::google::protobuf::int64 socketid() const;
  void set_socketid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:com.Rpc.Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Any* data_;
  ::google::protobuf::int64 userid_;
  ::google::protobuf::uint32 rpcid_;
  ::google::protobuf::int32 methodid_;
  ::google::protobuf::int64 socketid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Rpc_Response :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Rpc.Response) */ {
 public:
  Rpc_Response();
  virtual ~Rpc_Response();

  Rpc_Response(const Rpc_Response& from);

  inline Rpc_Response& operator=(const Rpc_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Rpc_Response(Rpc_Response&& from) noexcept
    : Rpc_Response() {
    *this = ::std::move(from);
  }

  inline Rpc_Response& operator=(Rpc_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Rpc_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Rpc_Response* internal_default_instance() {
    return reinterpret_cast<const Rpc_Response*>(
               &_Rpc_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(Rpc_Response* other);
  friend void swap(Rpc_Response& a, Rpc_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Rpc_Response* New() const final {
    return CreateMaybeMessage<Rpc_Response>(nullptr);
  }

  Rpc_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Rpc_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Rpc_Response& from);
  void MergeFrom(const Rpc_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Rpc_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Any Data = 4;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::google::protobuf::Any& data() const;
  ::google::protobuf::Any* release_data();
  ::google::protobuf::Any* mutable_data();
  void set_allocated_data(::google::protobuf::Any* data);

  // int32 Code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // uint32 RpcId = 2;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 2;
  ::google::protobuf::uint32 rpcid() const;
  void set_rpcid(::google::protobuf::uint32 value);

  // int64 UserId = 3;
  void clear_userid();
  static const int kUserIdFieldNumber = 3;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:com.Rpc.Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Any* data_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::uint32 rpcid_;
  ::google::protobuf::int64 userid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// -------------------------------------------------------------------

class Rpc :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.Rpc) */ {
 public:
  Rpc();
  virtual ~Rpc();

  Rpc(const Rpc& from);

  inline Rpc& operator=(const Rpc& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Rpc(Rpc&& from) noexcept
    : Rpc() {
    *this = ::std::move(from);
  }

  inline Rpc& operator=(Rpc&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Rpc& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Rpc* internal_default_instance() {
    return reinterpret_cast<const Rpc*>(
               &_Rpc_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(Rpc* other);
  friend void swap(Rpc& a, Rpc& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Rpc* New() const final {
    return CreateMaybeMessage<Rpc>(nullptr);
  }

  Rpc* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Rpc>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Rpc& from);
  void MergeFrom(const Rpc& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Rpc* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Rpc_Request Request;
  typedef Rpc_Response Response;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:com.Rpc)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_com_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StringArray

// repeated string DataArray = 1;
inline int StringArray::dataarray_size() const {
  return dataarray_.size();
}
inline void StringArray::clear_dataarray() {
  dataarray_.Clear();
}
inline const ::std::string& StringArray::dataarray(int index) const {
  // @@protoc_insertion_point(field_get:com.StringArray.DataArray)
  return dataarray_.Get(index);
}
inline ::std::string* StringArray::mutable_dataarray(int index) {
  // @@protoc_insertion_point(field_mutable:com.StringArray.DataArray)
  return dataarray_.Mutable(index);
}
inline void StringArray::set_dataarray(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:com.StringArray.DataArray)
  dataarray_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void StringArray::set_dataarray(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:com.StringArray.DataArray)
  dataarray_.Mutable(index)->assign(std::move(value));
}
#endif
inline void StringArray::set_dataarray(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  dataarray_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.StringArray.DataArray)
}
inline void StringArray::set_dataarray(int index, const char* value, size_t size) {
  dataarray_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.StringArray.DataArray)
}
inline ::std::string* StringArray::add_dataarray() {
  // @@protoc_insertion_point(field_add_mutable:com.StringArray.DataArray)
  return dataarray_.Add();
}
inline void StringArray::add_dataarray(const ::std::string& value) {
  dataarray_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.StringArray.DataArray)
}
#if LANG_CXX11
inline void StringArray::add_dataarray(::std::string&& value) {
  dataarray_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.StringArray.DataArray)
}
#endif
inline void StringArray::add_dataarray(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  dataarray_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.StringArray.DataArray)
}
inline void StringArray::add_dataarray(const char* value, size_t size) {
  dataarray_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.StringArray.DataArray)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
StringArray::dataarray() const {
  // @@protoc_insertion_point(field_list:com.StringArray.DataArray)
  return dataarray_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
StringArray::mutable_dataarray() {
  // @@protoc_insertion_point(field_mutable_list:com.StringArray.DataArray)
  return &dataarray_;
}

// -------------------------------------------------------------------

// Int32Array

// repeated int32 DataArray = 1;
inline int Int32Array::dataarray_size() const {
  return dataarray_.size();
}
inline void Int32Array::clear_dataarray() {
  dataarray_.Clear();
}
inline ::google::protobuf::int32 Int32Array::dataarray(int index) const {
  // @@protoc_insertion_point(field_get:com.Int32Array.DataArray)
  return dataarray_.Get(index);
}
inline void Int32Array::set_dataarray(int index, ::google::protobuf::int32 value) {
  dataarray_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.Int32Array.DataArray)
}
inline void Int32Array::add_dataarray(::google::protobuf::int32 value) {
  dataarray_.Add(value);
  // @@protoc_insertion_point(field_add:com.Int32Array.DataArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Int32Array::dataarray() const {
  // @@protoc_insertion_point(field_list:com.Int32Array.DataArray)
  return dataarray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Int32Array::mutable_dataarray() {
  // @@protoc_insertion_point(field_mutable_list:com.Int32Array.DataArray)
  return &dataarray_;
}

// -------------------------------------------------------------------

// Int64Array

// repeated int64 DataArray = 1;
inline int Int64Array::dataarray_size() const {
  return dataarray_.size();
}
inline void Int64Array::clear_dataarray() {
  dataarray_.Clear();
}
inline ::google::protobuf::int64 Int64Array::dataarray(int index) const {
  // @@protoc_insertion_point(field_get:com.Int64Array.DataArray)
  return dataarray_.Get(index);
}
inline void Int64Array::set_dataarray(int index, ::google::protobuf::int64 value) {
  dataarray_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.Int64Array.DataArray)
}
inline void Int64Array::add_dataarray(::google::protobuf::int64 value) {
  dataarray_.Add(value);
  // @@protoc_insertion_point(field_add:com.Int64Array.DataArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Int64Array::dataarray() const {
  // @@protoc_insertion_point(field_list:com.Int64Array.DataArray)
  return dataarray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Int64Array::mutable_dataarray() {
  // @@protoc_insertion_point(field_mutable_list:com.Int64Array.DataArray)
  return &dataarray_;
}

// -------------------------------------------------------------------

// StringData

// string Data = 1;
inline void StringData::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StringData::data() const {
  // @@protoc_insertion_point(field_get:com.StringData.Data)
  return data_.GetNoArena();
}
inline void StringData::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.StringData.Data)
}
#if LANG_CXX11
inline void StringData::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.StringData.Data)
}
#endif
inline void StringData::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.StringData.Data)
}
inline void StringData::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.StringData.Data)
}
inline ::std::string* StringData::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:com.StringData.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StringData::release_data() {
  // @@protoc_insertion_point(field_release:com.StringData.Data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringData::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:com.StringData.Data)
}

// -------------------------------------------------------------------

// Int32Data

// int32 Data = 1;
inline void Int32Data::clear_data() {
  data_ = 0;
}
inline ::google::protobuf::int32 Int32Data::data() const {
  // @@protoc_insertion_point(field_get:com.Int32Data.Data)
  return data_;
}
inline void Int32Data::set_data(::google::protobuf::int32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:com.Int32Data.Data)
}

// -------------------------------------------------------------------

// Int64Data

// int64 Data = 1;
inline void Int64Data::clear_data() {
  data_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Int64Data::data() const {
  // @@protoc_insertion_point(field_get:com.Int64Data.Data)
  return data_;
}
inline void Int64Data::set_data(::google::protobuf::int64 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:com.Int64Data.Data)
}

// -------------------------------------------------------------------

// floatData

// float Data = 1;
inline void floatData::clear_data() {
  data_ = 0;
}
inline float floatData::data() const {
  // @@protoc_insertion_point(field_get:com.floatData.Data)
  return data_;
}
inline void floatData::set_data(float value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:com.floatData.Data)
}

// -------------------------------------------------------------------

// DoubleData

// double Data = 1;
inline void DoubleData::clear_data() {
  data_ = 0;
}
inline double DoubleData::data() const {
  // @@protoc_insertion_point(field_get:com.DoubleData.Data)
  return data_;
}
inline void DoubleData::set_data(double value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:com.DoubleData.Data)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// StringMap

// map<string, string> Data = 1;
inline int StringMap::data_size() const {
  return data_.size();
}
inline void StringMap::clear_data() {
  data_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
StringMap::data() const {
  // @@protoc_insertion_point(field_map:com.StringMap.Data)
  return data_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
StringMap::mutable_data() {
  // @@protoc_insertion_point(field_mutable_map:com.StringMap.Data)
  return data_.MutableMap();
}

// -------------------------------------------------------------------

// Rpc_Request

// int64 UserId = 1;
inline void Rpc_Request::clear_userid() {
  userid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Rpc_Request::userid() const {
  // @@protoc_insertion_point(field_get:com.Rpc.Request.UserId)
  return userid_;
}
inline void Rpc_Request::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.Rpc.Request.UserId)
}

// uint32 RpcId = 2;
inline void Rpc_Request::clear_rpcid() {
  rpcid_ = 0u;
}
inline ::google::protobuf::uint32 Rpc_Request::rpcid() const {
  // @@protoc_insertion_point(field_get:com.Rpc.Request.RpcId)
  return rpcid_;
}
inline void Rpc_Request::set_rpcid(::google::protobuf::uint32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:com.Rpc.Request.RpcId)
}

// int32 MethodId = 3;
inline void Rpc_Request::clear_methodid() {
  methodid_ = 0;
}
inline ::google::protobuf::int32 Rpc_Request::methodid() const {
  // @@protoc_insertion_point(field_get:com.Rpc.Request.MethodId)
  return methodid_;
}
inline void Rpc_Request::set_methodid(::google::protobuf::int32 value) {
  
  methodid_ = value;
  // @@protoc_insertion_point(field_set:com.Rpc.Request.MethodId)
}

// int64 SocketId = 4;
inline void Rpc_Request::clear_socketid() {
  socketid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Rpc_Request::socketid() const {
  // @@protoc_insertion_point(field_get:com.Rpc.Request.SocketId)
  return socketid_;
}
inline void Rpc_Request::set_socketid(::google::protobuf::int64 value) {
  
  socketid_ = value;
  // @@protoc_insertion_point(field_set:com.Rpc.Request.SocketId)
}

// .google.protobuf.Any Data = 5;
inline bool Rpc_Request::has_data() const {
  return this != internal_default_instance() && data_ != nullptr;
}
inline const ::google::protobuf::Any& Rpc_Request::data() const {
  const ::google::protobuf::Any* p = data_;
  // @@protoc_insertion_point(field_get:com.Rpc.Request.Data)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* Rpc_Request::release_data() {
  // @@protoc_insertion_point(field_release:com.Rpc.Request.Data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* Rpc_Request::mutable_data() {
  
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Any>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.Rpc.Request.Data)
  return data_;
}
inline void Rpc_Request::set_allocated_data(::google::protobuf::Any* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:com.Rpc.Request.Data)
}

// -------------------------------------------------------------------

// Rpc_Response

// int32 Code = 1;
inline void Rpc_Response::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 Rpc_Response::code() const {
  // @@protoc_insertion_point(field_get:com.Rpc.Response.Code)
  return code_;
}
inline void Rpc_Response::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:com.Rpc.Response.Code)
}

// uint32 RpcId = 2;
inline void Rpc_Response::clear_rpcid() {
  rpcid_ = 0u;
}
inline ::google::protobuf::uint32 Rpc_Response::rpcid() const {
  // @@protoc_insertion_point(field_get:com.Rpc.Response.RpcId)
  return rpcid_;
}
inline void Rpc_Response::set_rpcid(::google::protobuf::uint32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:com.Rpc.Response.RpcId)
}

// int64 UserId = 3;
inline void Rpc_Response::clear_userid() {
  userid_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Rpc_Response::userid() const {
  // @@protoc_insertion_point(field_get:com.Rpc.Response.UserId)
  return userid_;
}
inline void Rpc_Response::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:com.Rpc.Response.UserId)
}

// .google.protobuf.Any Data = 4;
inline bool Rpc_Response::has_data() const {
  return this != internal_default_instance() && data_ != nullptr;
}
inline const ::google::protobuf::Any& Rpc_Response::data() const {
  const ::google::protobuf::Any* p = data_;
  // @@protoc_insertion_point(field_get:com.Rpc.Response.Data)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* Rpc_Response::release_data() {
  // @@protoc_insertion_point(field_release:com.Rpc.Response.Data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* Rpc_Response::mutable_data() {
  
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Any>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.Rpc.Response.Data)
  return data_;
}
inline void Rpc_Response::set_allocated_data(::google::protobuf::Any* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:com.Rpc.Response.Data)
}

// -------------------------------------------------------------------

// Rpc

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_com_2eproto
