// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: s2s.proto

#include "s2s.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace s2s {
class cluster_joinDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cluster_join> _instance;
} _cluster_join_default_instance_;
class cluster_exitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cluster_exit> _instance;
} _cluster_exit_default_instance_;
class clusterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cluster> _instance;
} _cluster_default_instance_;
class user_loginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<user_login> _instance;
} _user_login_default_instance_;
class user_logoutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<user_logout> _instance;
} _user_logout_default_instance_;
class userDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<user> _instance;
} _user_default_instance_;
class allot_responseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<allot_response> _instance;
} _allot_response_default_instance_;
class allot_saveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<allot_save> _instance;
} _allot_save_default_instance_;
class allotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<allot> _instance;
} _allot_default_instance_;
}  // namespace s2s
static void InitDefaultscluster_join_s2s_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::s2s::_cluster_join_default_instance_;
    new (ptr) ::s2s::cluster_join();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::s2s::cluster_join::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cluster_join_s2s_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscluster_join_s2s_2eproto}, {}};

static void InitDefaultscluster_exit_s2s_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::s2s::_cluster_exit_default_instance_;
    new (ptr) ::s2s::cluster_exit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::s2s::cluster_exit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cluster_exit_s2s_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscluster_exit_s2s_2eproto}, {}};

static void InitDefaultscluster_s2s_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::s2s::_cluster_default_instance_;
    new (ptr) ::s2s::cluster();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::s2s::cluster::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cluster_s2s_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscluster_s2s_2eproto}, {}};

static void InitDefaultsuser_login_s2s_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::s2s::_user_login_default_instance_;
    new (ptr) ::s2s::user_login();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::s2s::user_login::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_user_login_s2s_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsuser_login_s2s_2eproto}, {}};

static void InitDefaultsuser_logout_s2s_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::s2s::_user_logout_default_instance_;
    new (ptr) ::s2s::user_logout();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::s2s::user_logout::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_user_logout_s2s_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsuser_logout_s2s_2eproto}, {}};

static void InitDefaultsuser_s2s_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::s2s::_user_default_instance_;
    new (ptr) ::s2s::user();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::s2s::user::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_user_s2s_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsuser_s2s_2eproto}, {}};

static void InitDefaultsallot_response_s2s_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::s2s::_allot_response_default_instance_;
    new (ptr) ::s2s::allot_response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::s2s::allot_response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_allot_response_s2s_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsallot_response_s2s_2eproto}, {}};

static void InitDefaultsallot_save_s2s_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::s2s::_allot_save_default_instance_;
    new (ptr) ::s2s::allot_save();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::s2s::allot_save::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_allot_save_s2s_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsallot_save_s2s_2eproto}, {}};

static void InitDefaultsallot_s2s_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::s2s::_allot_default_instance_;
    new (ptr) ::s2s::allot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::s2s::allot::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_allot_s2s_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsallot_s2s_2eproto}, {}};

void InitDefaults_s2s_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_cluster_join_s2s_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cluster_exit_s2s_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cluster_s2s_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_user_login_s2s_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_user_logout_s2s_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_user_s2s_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_allot_response_s2s_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_allot_save_s2s_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_allot_s2s_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_s2s_2eproto[9];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_s2s_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_s2s_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_s2s_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::s2s::cluster_join, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::s2s::cluster_join, name_),
  PROTOBUF_FIELD_OFFSET(::s2s::cluster_join, rpc_),
  PROTOBUF_FIELD_OFFSET(::s2s::cluster_join, http_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::s2s::cluster_exit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::s2s::cluster_exit, name_),
  PROTOBUF_FIELD_OFFSET(::s2s::cluster_exit, rpc_),
  PROTOBUF_FIELD_OFFSET(::s2s::cluster_exit, http_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::s2s::cluster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::s2s::user_login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::s2s::user_login, user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::s2s::user_logout, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::s2s::user_logout, user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::s2s::user, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::s2s::allot_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::s2s::allot_response, token_),
  PROTOBUF_FIELD_OFFSET(::s2s::allot_response, address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::s2s::allot_save, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::s2s::allot_save, service_),
  PROTOBUF_FIELD_OFFSET(::s2s::allot_save, address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::s2s::allot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::s2s::cluster_join)},
  { 8, -1, sizeof(::s2s::cluster_exit)},
  { 16, -1, sizeof(::s2s::cluster)},
  { 21, -1, sizeof(::s2s::user_login)},
  { 27, -1, sizeof(::s2s::user_logout)},
  { 33, -1, sizeof(::s2s::user)},
  { 38, -1, sizeof(::s2s::allot_response)},
  { 45, -1, sizeof(::s2s::allot_save)},
  { 52, -1, sizeof(::s2s::allot)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::s2s::_cluster_join_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::s2s::_cluster_exit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::s2s::_cluster_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::s2s::_user_login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::s2s::_user_logout_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::s2s::_user_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::s2s::_allot_response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::s2s::_allot_save_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::s2s::_allot_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_s2s_2eproto = {
  {}, AddDescriptors_s2s_2eproto, "s2s.proto", schemas,
  file_default_instances, TableStruct_s2s_2eproto::offsets,
  file_level_metadata_s2s_2eproto, 9, file_level_enum_descriptors_s2s_2eproto, file_level_service_descriptors_s2s_2eproto,
};

const char descriptor_table_protodef_s2s_2eproto[] =
  "\n\ts2s.proto\022\003s2s\"k\n\007cluster\032/\n\004join\022\014\n\004n"
  "ame\030\001 \001(\t\022\013\n\003rpc\030\002 \001(\t\022\014\n\004http\030\003 \001(\t\032/\n\004"
  "exit\022\014\n\004name\030\001 \001(\t\022\013\n\003rpc\030\002 \001(\t\022\014\n\004http\030"
  "\003 \001(\t\";\n\004user\032\030\n\005login\022\017\n\007user_id\030\001 \001(\003\032"
  "\031\n\006logout\022\017\n\007user_id\030\001 \001(\003\"]\n\005allot\032*\n\010r"
  "esponse\022\r\n\005token\030\001 \001(\t\022\017\n\007address\030\002 \001(\t\032"
  "(\n\004save\022\017\n\007service\030\001 \001(\t\022\017\n\007address\030\002 \001("
  "\tb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_s2s_2eproto = {
  false, InitDefaults_s2s_2eproto, 
  descriptor_table_protodef_s2s_2eproto,
  "s2s.proto", &assign_descriptors_table_s2s_2eproto, 289,
};

void AddDescriptors_s2s_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_s2s_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_s2s_2eproto = []() { AddDescriptors_s2s_2eproto(); return true; }();
namespace s2s {

// ===================================================================

void cluster_join::InitAsDefaultInstance() {
}
class cluster_join::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cluster_join::kNameFieldNumber;
const int cluster_join::kRpcFieldNumber;
const int cluster_join::kHttpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cluster_join::cluster_join()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:s2s.cluster.join)
}
cluster_join::cluster_join(const cluster_join& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  rpc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rpc().size() > 0) {
    rpc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rpc_);
  }
  http_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.http().size() > 0) {
    http_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.http_);
  }
  // @@protoc_insertion_point(copy_constructor:s2s.cluster.join)
}

void cluster_join::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_cluster_join_s2s_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  http_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

cluster_join::~cluster_join() {
  // @@protoc_insertion_point(destructor:s2s.cluster.join)
  SharedDtor();
}

void cluster_join::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  http_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cluster_join::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const cluster_join& cluster_join::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_cluster_join_s2s_2eproto.base);
  return *internal_default_instance();
}


void cluster_join::Clear() {
// @@protoc_insertion_point(message_clear_start:s2s.cluster.join)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  http_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* cluster_join::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<cluster_join*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("s2s.cluster.join.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string rpc = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("s2s.cluster.join.rpc");
        object = msg->mutable_rpc();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string http = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("s2s.cluster.join.http");
        object = msg->mutable_http();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool cluster_join::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:s2s.cluster.join)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "s2s.cluster.join.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rpc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rpc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rpc().data(), static_cast<int>(this->rpc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "s2s.cluster.join.rpc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string http = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_http()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->http().data(), static_cast<int>(this->http().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "s2s.cluster.join.http"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:s2s.cluster.join)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:s2s.cluster.join)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void cluster_join::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:s2s.cluster.join)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "s2s.cluster.join.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string rpc = 2;
  if (this->rpc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rpc().data(), static_cast<int>(this->rpc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "s2s.cluster.join.rpc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rpc(), output);
  }

  // string http = 3;
  if (this->http().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->http().data(), static_cast<int>(this->http().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "s2s.cluster.join.http");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->http(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:s2s.cluster.join)
}

::google::protobuf::uint8* cluster_join::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:s2s.cluster.join)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "s2s.cluster.join.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string rpc = 2;
  if (this->rpc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rpc().data(), static_cast<int>(this->rpc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "s2s.cluster.join.rpc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rpc(), target);
  }

  // string http = 3;
  if (this->http().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->http().data(), static_cast<int>(this->http().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "s2s.cluster.join.http");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->http(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:s2s.cluster.join)
  return target;
}

size_t cluster_join::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:s2s.cluster.join)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string rpc = 2;
  if (this->rpc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rpc());
  }

  // string http = 3;
  if (this->http().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->http());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cluster_join::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:s2s.cluster.join)
  GOOGLE_DCHECK_NE(&from, this);
  const cluster_join* source =
      ::google::protobuf::DynamicCastToGenerated<cluster_join>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:s2s.cluster.join)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:s2s.cluster.join)
    MergeFrom(*source);
  }
}

void cluster_join::MergeFrom(const cluster_join& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:s2s.cluster.join)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.rpc().size() > 0) {

    rpc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rpc_);
  }
  if (from.http().size() > 0) {

    http_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.http_);
  }
}

void cluster_join::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:s2s.cluster.join)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cluster_join::CopyFrom(const cluster_join& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:s2s.cluster.join)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cluster_join::IsInitialized() const {
  return true;
}

void cluster_join::Swap(cluster_join* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cluster_join::InternalSwap(cluster_join* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rpc_.Swap(&other->rpc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  http_.Swap(&other->http_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata cluster_join::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_s2s_2eproto);
  return ::file_level_metadata_s2s_2eproto[kIndexInFileMessages];
}


// ===================================================================

void cluster_exit::InitAsDefaultInstance() {
}
class cluster_exit::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cluster_exit::kNameFieldNumber;
const int cluster_exit::kRpcFieldNumber;
const int cluster_exit::kHttpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cluster_exit::cluster_exit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:s2s.cluster.exit)
}
cluster_exit::cluster_exit(const cluster_exit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  rpc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rpc().size() > 0) {
    rpc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rpc_);
  }
  http_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.http().size() > 0) {
    http_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.http_);
  }
  // @@protoc_insertion_point(copy_constructor:s2s.cluster.exit)
}

void cluster_exit::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_cluster_exit_s2s_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  http_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

cluster_exit::~cluster_exit() {
  // @@protoc_insertion_point(destructor:s2s.cluster.exit)
  SharedDtor();
}

void cluster_exit::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  http_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cluster_exit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const cluster_exit& cluster_exit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_cluster_exit_s2s_2eproto.base);
  return *internal_default_instance();
}


void cluster_exit::Clear() {
// @@protoc_insertion_point(message_clear_start:s2s.cluster.exit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  http_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* cluster_exit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<cluster_exit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("s2s.cluster.exit.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string rpc = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("s2s.cluster.exit.rpc");
        object = msg->mutable_rpc();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string http = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("s2s.cluster.exit.http");
        object = msg->mutable_http();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool cluster_exit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:s2s.cluster.exit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "s2s.cluster.exit.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rpc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rpc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rpc().data(), static_cast<int>(this->rpc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "s2s.cluster.exit.rpc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string http = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_http()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->http().data(), static_cast<int>(this->http().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "s2s.cluster.exit.http"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:s2s.cluster.exit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:s2s.cluster.exit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void cluster_exit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:s2s.cluster.exit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "s2s.cluster.exit.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string rpc = 2;
  if (this->rpc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rpc().data(), static_cast<int>(this->rpc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "s2s.cluster.exit.rpc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rpc(), output);
  }

  // string http = 3;
  if (this->http().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->http().data(), static_cast<int>(this->http().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "s2s.cluster.exit.http");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->http(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:s2s.cluster.exit)
}

::google::protobuf::uint8* cluster_exit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:s2s.cluster.exit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "s2s.cluster.exit.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string rpc = 2;
  if (this->rpc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rpc().data(), static_cast<int>(this->rpc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "s2s.cluster.exit.rpc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rpc(), target);
  }

  // string http = 3;
  if (this->http().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->http().data(), static_cast<int>(this->http().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "s2s.cluster.exit.http");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->http(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:s2s.cluster.exit)
  return target;
}

size_t cluster_exit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:s2s.cluster.exit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string rpc = 2;
  if (this->rpc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rpc());
  }

  // string http = 3;
  if (this->http().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->http());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cluster_exit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:s2s.cluster.exit)
  GOOGLE_DCHECK_NE(&from, this);
  const cluster_exit* source =
      ::google::protobuf::DynamicCastToGenerated<cluster_exit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:s2s.cluster.exit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:s2s.cluster.exit)
    MergeFrom(*source);
  }
}

void cluster_exit::MergeFrom(const cluster_exit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:s2s.cluster.exit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.rpc().size() > 0) {

    rpc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rpc_);
  }
  if (from.http().size() > 0) {

    http_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.http_);
  }
}

void cluster_exit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:s2s.cluster.exit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cluster_exit::CopyFrom(const cluster_exit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:s2s.cluster.exit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cluster_exit::IsInitialized() const {
  return true;
}

void cluster_exit::Swap(cluster_exit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cluster_exit::InternalSwap(cluster_exit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rpc_.Swap(&other->rpc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  http_.Swap(&other->http_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata cluster_exit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_s2s_2eproto);
  return ::file_level_metadata_s2s_2eproto[kIndexInFileMessages];
}


// ===================================================================

void cluster::InitAsDefaultInstance() {
}
class cluster::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cluster::cluster()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:s2s.cluster)
}
cluster::cluster(const cluster& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:s2s.cluster)
}

void cluster::SharedCtor() {
}

cluster::~cluster() {
  // @@protoc_insertion_point(destructor:s2s.cluster)
  SharedDtor();
}

void cluster::SharedDtor() {
}

void cluster::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const cluster& cluster::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_cluster_s2s_2eproto.base);
  return *internal_default_instance();
}


void cluster::Clear() {
// @@protoc_insertion_point(message_clear_start:s2s.cluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* cluster::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<cluster*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool cluster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:s2s.cluster)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:s2s.cluster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:s2s.cluster)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void cluster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:s2s.cluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:s2s.cluster)
}

::google::protobuf::uint8* cluster::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:s2s.cluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:s2s.cluster)
  return target;
}

size_t cluster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:s2s.cluster)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cluster::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:s2s.cluster)
  GOOGLE_DCHECK_NE(&from, this);
  const cluster* source =
      ::google::protobuf::DynamicCastToGenerated<cluster>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:s2s.cluster)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:s2s.cluster)
    MergeFrom(*source);
  }
}

void cluster::MergeFrom(const cluster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:s2s.cluster)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void cluster::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:s2s.cluster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cluster::CopyFrom(const cluster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:s2s.cluster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cluster::IsInitialized() const {
  return true;
}

void cluster::Swap(cluster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cluster::InternalSwap(cluster* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cluster::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_s2s_2eproto);
  return ::file_level_metadata_s2s_2eproto[kIndexInFileMessages];
}


// ===================================================================

void user_login::InitAsDefaultInstance() {
}
class user_login::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int user_login::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

user_login::user_login()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:s2s.user.login)
}
user_login::user_login(const user_login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:s2s.user.login)
}

void user_login::SharedCtor() {
  user_id_ = PROTOBUF_LONGLONG(0);
}

user_login::~user_login() {
  // @@protoc_insertion_point(destructor:s2s.user.login)
  SharedDtor();
}

void user_login::SharedDtor() {
}

void user_login::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const user_login& user_login::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_user_login_s2s_2eproto.base);
  return *internal_default_instance();
}


void user_login::Clear() {
// @@protoc_insertion_point(message_clear_start:s2s.user.login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* user_login::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<user_login*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_user_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool user_login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:s2s.user.login)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:s2s.user.login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:s2s.user.login)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void user_login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:s2s.user.login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->user_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:s2s.user.login)
}

::google::protobuf::uint8* user_login::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:s2s.user.login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->user_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:s2s.user.login)
  return target;
}

size_t user_login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:s2s.user.login)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void user_login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:s2s.user.login)
  GOOGLE_DCHECK_NE(&from, this);
  const user_login* source =
      ::google::protobuf::DynamicCastToGenerated<user_login>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:s2s.user.login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:s2s.user.login)
    MergeFrom(*source);
  }
}

void user_login::MergeFrom(const user_login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:s2s.user.login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void user_login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:s2s.user.login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void user_login::CopyFrom(const user_login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:s2s.user.login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool user_login::IsInitialized() const {
  return true;
}

void user_login::Swap(user_login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void user_login::InternalSwap(user_login* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(user_id_, other->user_id_);
}

::google::protobuf::Metadata user_login::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_s2s_2eproto);
  return ::file_level_metadata_s2s_2eproto[kIndexInFileMessages];
}


// ===================================================================

void user_logout::InitAsDefaultInstance() {
}
class user_logout::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int user_logout::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

user_logout::user_logout()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:s2s.user.logout)
}
user_logout::user_logout(const user_logout& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:s2s.user.logout)
}

void user_logout::SharedCtor() {
  user_id_ = PROTOBUF_LONGLONG(0);
}

user_logout::~user_logout() {
  // @@protoc_insertion_point(destructor:s2s.user.logout)
  SharedDtor();
}

void user_logout::SharedDtor() {
}

void user_logout::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const user_logout& user_logout::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_user_logout_s2s_2eproto.base);
  return *internal_default_instance();
}


void user_logout::Clear() {
// @@protoc_insertion_point(message_clear_start:s2s.user.logout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* user_logout::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<user_logout*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_user_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool user_logout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:s2s.user.logout)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:s2s.user.logout)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:s2s.user.logout)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void user_logout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:s2s.user.logout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->user_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:s2s.user.logout)
}

::google::protobuf::uint8* user_logout::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:s2s.user.logout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->user_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:s2s.user.logout)
  return target;
}

size_t user_logout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:s2s.user.logout)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void user_logout::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:s2s.user.logout)
  GOOGLE_DCHECK_NE(&from, this);
  const user_logout* source =
      ::google::protobuf::DynamicCastToGenerated<user_logout>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:s2s.user.logout)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:s2s.user.logout)
    MergeFrom(*source);
  }
}

void user_logout::MergeFrom(const user_logout& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:s2s.user.logout)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void user_logout::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:s2s.user.logout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void user_logout::CopyFrom(const user_logout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:s2s.user.logout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool user_logout::IsInitialized() const {
  return true;
}

void user_logout::Swap(user_logout* other) {
  if (other == this) return;
  InternalSwap(other);
}
void user_logout::InternalSwap(user_logout* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(user_id_, other->user_id_);
}

::google::protobuf::Metadata user_logout::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_s2s_2eproto);
  return ::file_level_metadata_s2s_2eproto[kIndexInFileMessages];
}


// ===================================================================

void user::InitAsDefaultInstance() {
}
class user::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

user::user()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:s2s.user)
}
user::user(const user& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:s2s.user)
}

void user::SharedCtor() {
}

user::~user() {
  // @@protoc_insertion_point(destructor:s2s.user)
  SharedDtor();
}

void user::SharedDtor() {
}

void user::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const user& user::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_user_s2s_2eproto.base);
  return *internal_default_instance();
}


void user::Clear() {
// @@protoc_insertion_point(message_clear_start:s2s.user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* user::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<user*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool user::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:s2s.user)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:s2s.user)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:s2s.user)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void user::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:s2s.user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:s2s.user)
}

::google::protobuf::uint8* user::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:s2s.user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:s2s.user)
  return target;
}

size_t user::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:s2s.user)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void user::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:s2s.user)
  GOOGLE_DCHECK_NE(&from, this);
  const user* source =
      ::google::protobuf::DynamicCastToGenerated<user>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:s2s.user)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:s2s.user)
    MergeFrom(*source);
  }
}

void user::MergeFrom(const user& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:s2s.user)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void user::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:s2s.user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void user::CopyFrom(const user& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:s2s.user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool user::IsInitialized() const {
  return true;
}

void user::Swap(user* other) {
  if (other == this) return;
  InternalSwap(other);
}
void user::InternalSwap(user* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata user::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_s2s_2eproto);
  return ::file_level_metadata_s2s_2eproto[kIndexInFileMessages];
}


// ===================================================================

void allot_response::InitAsDefaultInstance() {
}
class allot_response::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int allot_response::kTokenFieldNumber;
const int allot_response::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

allot_response::allot_response()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:s2s.allot.response)
}
allot_response::allot_response(const allot_response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  // @@protoc_insertion_point(copy_constructor:s2s.allot.response)
}

void allot_response::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_allot_response_s2s_2eproto.base);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

allot_response::~allot_response() {
  // @@protoc_insertion_point(destructor:s2s.allot.response)
  SharedDtor();
}

void allot_response::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void allot_response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const allot_response& allot_response::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_allot_response_s2s_2eproto.base);
  return *internal_default_instance();
}


void allot_response::Clear() {
// @@protoc_insertion_point(message_clear_start:s2s.allot.response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* allot_response::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<allot_response*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("s2s.allot.response.token");
        object = msg->mutable_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string address = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("s2s.allot.response.address");
        object = msg->mutable_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool allot_response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:s2s.allot.response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "s2s.allot.response.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "s2s.allot.response.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:s2s.allot.response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:s2s.allot.response)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void allot_response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:s2s.allot.response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "s2s.allot.response.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "s2s.allot.response.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->address(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:s2s.allot.response)
}

::google::protobuf::uint8* allot_response::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:s2s.allot.response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "s2s.allot.response.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "s2s.allot.response.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->address(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:s2s.allot.response)
  return target;
}

size_t allot_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:s2s.allot.response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string address = 2;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void allot_response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:s2s.allot.response)
  GOOGLE_DCHECK_NE(&from, this);
  const allot_response* source =
      ::google::protobuf::DynamicCastToGenerated<allot_response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:s2s.allot.response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:s2s.allot.response)
    MergeFrom(*source);
  }
}

void allot_response::MergeFrom(const allot_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:s2s.allot.response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void allot_response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:s2s.allot.response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void allot_response::CopyFrom(const allot_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:s2s.allot.response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool allot_response::IsInitialized() const {
  return true;
}

void allot_response::Swap(allot_response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void allot_response::InternalSwap(allot_response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata allot_response::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_s2s_2eproto);
  return ::file_level_metadata_s2s_2eproto[kIndexInFileMessages];
}


// ===================================================================

void allot_save::InitAsDefaultInstance() {
}
class allot_save::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int allot_save::kServiceFieldNumber;
const int allot_save::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

allot_save::allot_save()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:s2s.allot.save)
}
allot_save::allot_save(const allot_save& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service().size() > 0) {
    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  // @@protoc_insertion_point(copy_constructor:s2s.allot.save)
}

void allot_save::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_allot_save_s2s_2eproto.base);
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

allot_save::~allot_save() {
  // @@protoc_insertion_point(destructor:s2s.allot.save)
  SharedDtor();
}

void allot_save::SharedDtor() {
  service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void allot_save::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const allot_save& allot_save::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_allot_save_s2s_2eproto.base);
  return *internal_default_instance();
}


void allot_save::Clear() {
// @@protoc_insertion_point(message_clear_start:s2s.allot.save)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* allot_save::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<allot_save*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string service = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("s2s.allot.save.service");
        object = msg->mutable_service();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string address = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("s2s.allot.save.address");
        object = msg->mutable_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool allot_save::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:s2s.allot.save)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service().data(), static_cast<int>(this->service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "s2s.allot.save.service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "s2s.allot.save.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:s2s.allot.save)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:s2s.allot.save)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void allot_save::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:s2s.allot.save)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service = 1;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), static_cast<int>(this->service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "s2s.allot.save.service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service(), output);
  }

  // string address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "s2s.allot.save.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->address(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:s2s.allot.save)
}

::google::protobuf::uint8* allot_save::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:s2s.allot.save)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service = 1;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), static_cast<int>(this->service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "s2s.allot.save.service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service(), target);
  }

  // string address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "s2s.allot.save.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->address(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:s2s.allot.save)
  return target;
}

size_t allot_save::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:s2s.allot.save)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service = 1;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service());
  }

  // string address = 2;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void allot_save::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:s2s.allot.save)
  GOOGLE_DCHECK_NE(&from, this);
  const allot_save* source =
      ::google::protobuf::DynamicCastToGenerated<allot_save>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:s2s.allot.save)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:s2s.allot.save)
    MergeFrom(*source);
  }
}

void allot_save::MergeFrom(const allot_save& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:s2s.allot.save)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service().size() > 0) {

    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void allot_save::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:s2s.allot.save)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void allot_save::CopyFrom(const allot_save& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:s2s.allot.save)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool allot_save::IsInitialized() const {
  return true;
}

void allot_save::Swap(allot_save* other) {
  if (other == this) return;
  InternalSwap(other);
}
void allot_save::InternalSwap(allot_save* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  service_.Swap(&other->service_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata allot_save::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_s2s_2eproto);
  return ::file_level_metadata_s2s_2eproto[kIndexInFileMessages];
}


// ===================================================================

void allot::InitAsDefaultInstance() {
}
class allot::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

allot::allot()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:s2s.allot)
}
allot::allot(const allot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:s2s.allot)
}

void allot::SharedCtor() {
}

allot::~allot() {
  // @@protoc_insertion_point(destructor:s2s.allot)
  SharedDtor();
}

void allot::SharedDtor() {
}

void allot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const allot& allot::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_allot_s2s_2eproto.base);
  return *internal_default_instance();
}


void allot::Clear() {
// @@protoc_insertion_point(message_clear_start:s2s.allot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* allot::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<allot*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool allot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:s2s.allot)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:s2s.allot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:s2s.allot)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void allot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:s2s.allot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:s2s.allot)
}

::google::protobuf::uint8* allot::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:s2s.allot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:s2s.allot)
  return target;
}

size_t allot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:s2s.allot)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void allot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:s2s.allot)
  GOOGLE_DCHECK_NE(&from, this);
  const allot* source =
      ::google::protobuf::DynamicCastToGenerated<allot>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:s2s.allot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:s2s.allot)
    MergeFrom(*source);
  }
}

void allot::MergeFrom(const allot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:s2s.allot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void allot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:s2s.allot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void allot::CopyFrom(const allot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:s2s.allot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool allot::IsInitialized() const {
  return true;
}

void allot::Swap(allot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void allot::InternalSwap(allot* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata allot::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_s2s_2eproto);
  return ::file_level_metadata_s2s_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace s2s
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::s2s::cluster_join* Arena::CreateMaybeMessage< ::s2s::cluster_join >(Arena* arena) {
  return Arena::CreateInternal< ::s2s::cluster_join >(arena);
}
template<> PROTOBUF_NOINLINE ::s2s::cluster_exit* Arena::CreateMaybeMessage< ::s2s::cluster_exit >(Arena* arena) {
  return Arena::CreateInternal< ::s2s::cluster_exit >(arena);
}
template<> PROTOBUF_NOINLINE ::s2s::cluster* Arena::CreateMaybeMessage< ::s2s::cluster >(Arena* arena) {
  return Arena::CreateInternal< ::s2s::cluster >(arena);
}
template<> PROTOBUF_NOINLINE ::s2s::user_login* Arena::CreateMaybeMessage< ::s2s::user_login >(Arena* arena) {
  return Arena::CreateInternal< ::s2s::user_login >(arena);
}
template<> PROTOBUF_NOINLINE ::s2s::user_logout* Arena::CreateMaybeMessage< ::s2s::user_logout >(Arena* arena) {
  return Arena::CreateInternal< ::s2s::user_logout >(arena);
}
template<> PROTOBUF_NOINLINE ::s2s::user* Arena::CreateMaybeMessage< ::s2s::user >(Arena* arena) {
  return Arena::CreateInternal< ::s2s::user >(arena);
}
template<> PROTOBUF_NOINLINE ::s2s::allot_response* Arena::CreateMaybeMessage< ::s2s::allot_response >(Arena* arena) {
  return Arena::CreateInternal< ::s2s::allot_response >(arena);
}
template<> PROTOBUF_NOINLINE ::s2s::allot_save* Arena::CreateMaybeMessage< ::s2s::allot_save >(Arena* arena) {
  return Arena::CreateInternal< ::s2s::allot_save >(arena);
}
template<> PROTOBUF_NOINLINE ::s2s::allot* Arena::CreateMaybeMessage< ::s2s::allot >(Arena* arena) {
  return Arena::CreateInternal< ::s2s::allot >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
