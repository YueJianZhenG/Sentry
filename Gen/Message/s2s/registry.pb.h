// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: s2s/registry.proto

#ifndef PROTOBUF_INCLUDED_s2s_2fregistry_2eproto
#define PROTOBUF_INCLUDED_s2s_2fregistry_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_s2s_2fregistry_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_s2s_2fregistry_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_s2s_2fregistry_2eproto();
namespace registry {
class actor;
class actorDefaultTypeInternal;
extern actorDefaultTypeInternal _actor_default_instance_;
class query;
class queryDefaultTypeInternal;
extern queryDefaultTypeInternal _query_default_instance_;
class query_request;
class query_requestDefaultTypeInternal;
extern query_requestDefaultTypeInternal _query_request_default_instance_;
class query_response;
class query_responseDefaultTypeInternal;
extern query_responseDefaultTypeInternal _query_response_default_instance_;
}  // namespace registry
namespace google {
namespace protobuf {
template<> ::registry::actor* Arena::CreateMaybeMessage<::registry::actor>(Arena*);
template<> ::registry::query* Arena::CreateMaybeMessage<::registry::query>(Arena*);
template<> ::registry::query_request* Arena::CreateMaybeMessage<::registry::query_request>(Arena*);
template<> ::registry::query_response* Arena::CreateMaybeMessage<::registry::query_response>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace registry {

// ===================================================================

class actor :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:registry.actor) */ {
 public:
  actor();
  virtual ~actor();

  actor(const actor& from);

  inline actor& operator=(const actor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  actor(actor&& from) noexcept
    : actor() {
    *this = ::std::move(from);
  }

  inline actor& operator=(actor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const actor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const actor* internal_default_instance() {
    return reinterpret_cast<const actor*>(
               &_actor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(actor* other);
  friend void swap(actor& a, actor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline actor* New() const final {
    return CreateMaybeMessage<actor>(nullptr);
  }

  actor* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<actor>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const actor& from);
  void MergeFrom(const actor& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(actor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string actor_json = 3;
  void clear_actor_json();
  static const int kActorJsonFieldNumber = 3;
  const ::std::string& actor_json() const;
  void set_actor_json(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_json(::std::string&& value);
  #endif
  void set_actor_json(const char* value);
  void set_actor_json(const char* value, size_t size);
  ::std::string* mutable_actor_json();
  ::std::string* release_actor_json();
  void set_allocated_actor_json(::std::string* actor_json);

  // int64 actor_id = 2;
  void clear_actor_id();
  static const int kActorIdFieldNumber = 2;
  ::google::protobuf::int64 actor_id() const;
  void set_actor_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:registry.actor)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr actor_json_;
  ::google::protobuf::int64 actor_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_s2s_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class query_request :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:registry.query.request) */ {
 public:
  query_request();
  virtual ~query_request();

  query_request(const query_request& from);

  inline query_request& operator=(const query_request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  query_request(query_request&& from) noexcept
    : query_request() {
    *this = ::std::move(from);
  }

  inline query_request& operator=(query_request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const query_request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const query_request* internal_default_instance() {
    return reinterpret_cast<const query_request*>(
               &_query_request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(query_request* other);
  friend void swap(query_request& a, query_request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline query_request* New() const final {
    return CreateMaybeMessage<query_request>(nullptr);
  }

  query_request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<query_request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const query_request& from);
  void MergeFrom(const query_request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(query_request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int64 actor_id = 2;
  void clear_actor_id();
  static const int kActorIdFieldNumber = 2;
  ::google::protobuf::int64 actor_id() const;
  void set_actor_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:registry.query.request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 actor_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_s2s_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class query_response :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:registry.query.response) */ {
 public:
  query_response();
  virtual ~query_response();

  query_response(const query_response& from);

  inline query_response& operator=(const query_response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  query_response(query_response&& from) noexcept
    : query_response() {
    *this = ::std::move(from);
  }

  inline query_response& operator=(query_response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const query_response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const query_response* internal_default_instance() {
    return reinterpret_cast<const query_response*>(
               &_query_response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(query_response* other);
  friend void swap(query_response& a, query_response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline query_response* New() const final {
    return CreateMaybeMessage<query_response>(nullptr);
  }

  query_response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<query_response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const query_response& from);
  void MergeFrom(const query_response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(query_response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .registry.actor actors = 1;
  int actors_size() const;
  void clear_actors();
  static const int kActorsFieldNumber = 1;
  ::registry::actor* mutable_actors(int index);
  ::google::protobuf::RepeatedPtrField< ::registry::actor >*
      mutable_actors();
  const ::registry::actor& actors(int index) const;
  ::registry::actor* add_actors();
  const ::google::protobuf::RepeatedPtrField< ::registry::actor >&
      actors() const;

  // @@protoc_insertion_point(class_scope:registry.query.response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::registry::actor > actors_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_s2s_2fregistry_2eproto;
};
// -------------------------------------------------------------------

class query :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:registry.query) */ {
 public:
  query();
  virtual ~query();

  query(const query& from);

  inline query& operator=(const query& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  query(query&& from) noexcept
    : query() {
    *this = ::std::move(from);
  }

  inline query& operator=(query&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const query& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const query* internal_default_instance() {
    return reinterpret_cast<const query*>(
               &_query_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(query* other);
  friend void swap(query& a, query& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline query* New() const final {
    return CreateMaybeMessage<query>(nullptr);
  }

  query* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<query>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const query& from);
  void MergeFrom(const query& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(query* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef query_request request;
  typedef query_response response;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:registry.query)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_s2s_2fregistry_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// actor

// string name = 1;
inline void actor::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& actor::name() const {
  // @@protoc_insertion_point(field_get:registry.actor.name)
  return name_.GetNoArena();
}
inline void actor::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:registry.actor.name)
}
#if LANG_CXX11
inline void actor::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:registry.actor.name)
}
#endif
inline void actor::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:registry.actor.name)
}
inline void actor::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:registry.actor.name)
}
inline ::std::string* actor::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:registry.actor.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* actor::release_name() {
  // @@protoc_insertion_point(field_release:registry.actor.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void actor::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:registry.actor.name)
}

// int64 actor_id = 2;
inline void actor::clear_actor_id() {
  actor_id_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 actor::actor_id() const {
  // @@protoc_insertion_point(field_get:registry.actor.actor_id)
  return actor_id_;
}
inline void actor::set_actor_id(::google::protobuf::int64 value) {
  
  actor_id_ = value;
  // @@protoc_insertion_point(field_set:registry.actor.actor_id)
}

// string actor_json = 3;
inline void actor::clear_actor_json() {
  actor_json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& actor::actor_json() const {
  // @@protoc_insertion_point(field_get:registry.actor.actor_json)
  return actor_json_.GetNoArena();
}
inline void actor::set_actor_json(const ::std::string& value) {
  
  actor_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:registry.actor.actor_json)
}
#if LANG_CXX11
inline void actor::set_actor_json(::std::string&& value) {
  
  actor_json_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:registry.actor.actor_json)
}
#endif
inline void actor::set_actor_json(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  actor_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:registry.actor.actor_json)
}
inline void actor::set_actor_json(const char* value, size_t size) {
  
  actor_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:registry.actor.actor_json)
}
inline ::std::string* actor::mutable_actor_json() {
  
  // @@protoc_insertion_point(field_mutable:registry.actor.actor_json)
  return actor_json_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* actor::release_actor_json() {
  // @@protoc_insertion_point(field_release:registry.actor.actor_json)
  
  return actor_json_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void actor::set_allocated_actor_json(::std::string* actor_json) {
  if (actor_json != nullptr) {
    
  } else {
    
  }
  actor_json_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_json);
  // @@protoc_insertion_point(field_set_allocated:registry.actor.actor_json)
}

// -------------------------------------------------------------------

// query_request

// string name = 1;
inline void query_request::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& query_request::name() const {
  // @@protoc_insertion_point(field_get:registry.query.request.name)
  return name_.GetNoArena();
}
inline void query_request::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:registry.query.request.name)
}
#if LANG_CXX11
inline void query_request::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:registry.query.request.name)
}
#endif
inline void query_request::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:registry.query.request.name)
}
inline void query_request::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:registry.query.request.name)
}
inline ::std::string* query_request::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:registry.query.request.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* query_request::release_name() {
  // @@protoc_insertion_point(field_release:registry.query.request.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void query_request::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:registry.query.request.name)
}

// int64 actor_id = 2;
inline void query_request::clear_actor_id() {
  actor_id_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 query_request::actor_id() const {
  // @@protoc_insertion_point(field_get:registry.query.request.actor_id)
  return actor_id_;
}
inline void query_request::set_actor_id(::google::protobuf::int64 value) {
  
  actor_id_ = value;
  // @@protoc_insertion_point(field_set:registry.query.request.actor_id)
}

// -------------------------------------------------------------------

// query_response

// repeated .registry.actor actors = 1;
inline int query_response::actors_size() const {
  return actors_.size();
}
inline void query_response::clear_actors() {
  actors_.Clear();
}
inline ::registry::actor* query_response::mutable_actors(int index) {
  // @@protoc_insertion_point(field_mutable:registry.query.response.actors)
  return actors_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::registry::actor >*
query_response::mutable_actors() {
  // @@protoc_insertion_point(field_mutable_list:registry.query.response.actors)
  return &actors_;
}
inline const ::registry::actor& query_response::actors(int index) const {
  // @@protoc_insertion_point(field_get:registry.query.response.actors)
  return actors_.Get(index);
}
inline ::registry::actor* query_response::add_actors() {
  // @@protoc_insertion_point(field_add:registry.query.response.actors)
  return actors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::registry::actor >&
query_response::actors() const {
  // @@protoc_insertion_point(field_list:registry.query.response.actors)
  return actors_;
}

// -------------------------------------------------------------------

// query

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace registry

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_s2s_2fregistry_2eproto
