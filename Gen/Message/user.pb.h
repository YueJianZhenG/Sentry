// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user.proto

#ifndef PROTOBUF_INCLUDED_user_2eproto
#define PROTOBUF_INCLUDED_user_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_user_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_user_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_user_2eproto();
namespace user {
class account_info;
class account_infoDefaultTypeInternal;
extern account_infoDefaultTypeInternal _account_info_default_instance_;
}  // namespace user
namespace google {
namespace protobuf {
template<> ::user::account_info* Arena::CreateMaybeMessage<::user::account_info>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace user {

// ===================================================================

class account_info :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:user.account_info) */ {
 public:
  account_info();
  virtual ~account_info();

  account_info(const account_info& from);

  inline account_info& operator=(const account_info& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  account_info(account_info&& from) noexcept
    : account_info() {
    *this = ::std::move(from);
  }

  inline account_info& operator=(account_info&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const account_info& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const account_info* internal_default_instance() {
    return reinterpret_cast<const account_info*>(
               &_account_info_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(account_info* other);
  friend void swap(account_info& a, account_info& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline account_info* New() const final {
    return CreateMaybeMessage<account_info>(nullptr);
  }

  account_info* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<account_info>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const account_info& from);
  void MergeFrom(const account_info& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(account_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string account = 1;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // string pass_word = 3;
  void clear_pass_word();
  static const int kPassWordFieldNumber = 3;
  const ::std::string& pass_word() const;
  void set_pass_word(const ::std::string& value);
  #if LANG_CXX11
  void set_pass_word(::std::string&& value);
  #endif
  void set_pass_word(const char* value);
  void set_pass_word(const char* value, size_t size);
  ::std::string* mutable_pass_word();
  ::std::string* release_pass_word();
  void set_allocated_pass_word(::std::string* pass_word);

  // string last_login_ip = 7;
  void clear_last_login_ip();
  static const int kLastLoginIpFieldNumber = 7;
  const ::std::string& last_login_ip() const;
  void set_last_login_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_last_login_ip(::std::string&& value);
  #endif
  void set_last_login_ip(const char* value);
  void set_last_login_ip(const char* value, size_t size);
  ::std::string* mutable_last_login_ip();
  ::std::string* release_last_login_ip();
  void set_allocated_last_login_ip(::std::string* last_login_ip);

  // int64 phone_num = 2;
  void clear_phone_num();
  static const int kPhoneNumFieldNumber = 2;
  ::google::protobuf::int64 phone_num() const;
  void set_phone_num(::google::protobuf::int64 value);

  // int64 user_id = 4;
  void clear_user_id();
  static const int kUserIdFieldNumber = 4;
  ::google::protobuf::int64 user_id() const;
  void set_user_id(::google::protobuf::int64 value);

  // int64 login_time = 5;
  void clear_login_time();
  static const int kLoginTimeFieldNumber = 5;
  ::google::protobuf::int64 login_time() const;
  void set_login_time(::google::protobuf::int64 value);

  // int64 register_time = 6;
  void clear_register_time();
  static const int kRegisterTimeFieldNumber = 6;
  ::google::protobuf::int64 register_time() const;
  void set_register_time(::google::protobuf::int64 value);

  // bool is_new_user = 8;
  void clear_is_new_user();
  static const int kIsNewUserFieldNumber = 8;
  bool is_new_user() const;
  void set_is_new_user(bool value);

  // int32 ared_id = 9;
  void clear_ared_id();
  static const int kAredIdFieldNumber = 9;
  ::google::protobuf::int32 ared_id() const;
  void set_ared_id(::google::protobuf::int32 value);

  // int32 login_channel = 10;
  void clear_login_channel();
  static const int kLoginChannelFieldNumber = 10;
  ::google::protobuf::int32 login_channel() const;
  void set_login_channel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:user.account_info)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr pass_word_;
  ::google::protobuf::internal::ArenaStringPtr last_login_ip_;
  ::google::protobuf::int64 phone_num_;
  ::google::protobuf::int64 user_id_;
  ::google::protobuf::int64 login_time_;
  ::google::protobuf::int64 register_time_;
  bool is_new_user_;
  ::google::protobuf::int32 ared_id_;
  ::google::protobuf::int32 login_channel_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_user_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// account_info

// string account = 1;
inline void account_info::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& account_info::account() const {
  // @@protoc_insertion_point(field_get:user.account_info.account)
  return account_.GetNoArena();
}
inline void account_info::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:user.account_info.account)
}
#if LANG_CXX11
inline void account_info::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:user.account_info.account)
}
#endif
inline void account_info::set_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:user.account_info.account)
}
inline void account_info::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:user.account_info.account)
}
inline ::std::string* account_info::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:user.account_info.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* account_info::release_account() {
  // @@protoc_insertion_point(field_release:user.account_info.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void account_info::set_allocated_account(::std::string* account) {
  if (account != nullptr) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:user.account_info.account)
}

// int64 phone_num = 2;
inline void account_info::clear_phone_num() {
  phone_num_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 account_info::phone_num() const {
  // @@protoc_insertion_point(field_get:user.account_info.phone_num)
  return phone_num_;
}
inline void account_info::set_phone_num(::google::protobuf::int64 value) {
  
  phone_num_ = value;
  // @@protoc_insertion_point(field_set:user.account_info.phone_num)
}

// string pass_word = 3;
inline void account_info::clear_pass_word() {
  pass_word_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& account_info::pass_word() const {
  // @@protoc_insertion_point(field_get:user.account_info.pass_word)
  return pass_word_.GetNoArena();
}
inline void account_info::set_pass_word(const ::std::string& value) {
  
  pass_word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:user.account_info.pass_word)
}
#if LANG_CXX11
inline void account_info::set_pass_word(::std::string&& value) {
  
  pass_word_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:user.account_info.pass_word)
}
#endif
inline void account_info::set_pass_word(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pass_word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:user.account_info.pass_word)
}
inline void account_info::set_pass_word(const char* value, size_t size) {
  
  pass_word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:user.account_info.pass_word)
}
inline ::std::string* account_info::mutable_pass_word() {
  
  // @@protoc_insertion_point(field_mutable:user.account_info.pass_word)
  return pass_word_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* account_info::release_pass_word() {
  // @@protoc_insertion_point(field_release:user.account_info.pass_word)
  
  return pass_word_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void account_info::set_allocated_pass_word(::std::string* pass_word) {
  if (pass_word != nullptr) {
    
  } else {
    
  }
  pass_word_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pass_word);
  // @@protoc_insertion_point(field_set_allocated:user.account_info.pass_word)
}

// int64 user_id = 4;
inline void account_info::clear_user_id() {
  user_id_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 account_info::user_id() const {
  // @@protoc_insertion_point(field_get:user.account_info.user_id)
  return user_id_;
}
inline void account_info::set_user_id(::google::protobuf::int64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:user.account_info.user_id)
}

// int64 login_time = 5;
inline void account_info::clear_login_time() {
  login_time_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 account_info::login_time() const {
  // @@protoc_insertion_point(field_get:user.account_info.login_time)
  return login_time_;
}
inline void account_info::set_login_time(::google::protobuf::int64 value) {
  
  login_time_ = value;
  // @@protoc_insertion_point(field_set:user.account_info.login_time)
}

// int64 register_time = 6;
inline void account_info::clear_register_time() {
  register_time_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 account_info::register_time() const {
  // @@protoc_insertion_point(field_get:user.account_info.register_time)
  return register_time_;
}
inline void account_info::set_register_time(::google::protobuf::int64 value) {
  
  register_time_ = value;
  // @@protoc_insertion_point(field_set:user.account_info.register_time)
}

// string last_login_ip = 7;
inline void account_info::clear_last_login_ip() {
  last_login_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& account_info::last_login_ip() const {
  // @@protoc_insertion_point(field_get:user.account_info.last_login_ip)
  return last_login_ip_.GetNoArena();
}
inline void account_info::set_last_login_ip(const ::std::string& value) {
  
  last_login_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:user.account_info.last_login_ip)
}
#if LANG_CXX11
inline void account_info::set_last_login_ip(::std::string&& value) {
  
  last_login_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:user.account_info.last_login_ip)
}
#endif
inline void account_info::set_last_login_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  last_login_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:user.account_info.last_login_ip)
}
inline void account_info::set_last_login_ip(const char* value, size_t size) {
  
  last_login_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:user.account_info.last_login_ip)
}
inline ::std::string* account_info::mutable_last_login_ip() {
  
  // @@protoc_insertion_point(field_mutable:user.account_info.last_login_ip)
  return last_login_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* account_info::release_last_login_ip() {
  // @@protoc_insertion_point(field_release:user.account_info.last_login_ip)
  
  return last_login_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void account_info::set_allocated_last_login_ip(::std::string* last_login_ip) {
  if (last_login_ip != nullptr) {
    
  } else {
    
  }
  last_login_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_login_ip);
  // @@protoc_insertion_point(field_set_allocated:user.account_info.last_login_ip)
}

// bool is_new_user = 8;
inline void account_info::clear_is_new_user() {
  is_new_user_ = false;
}
inline bool account_info::is_new_user() const {
  // @@protoc_insertion_point(field_get:user.account_info.is_new_user)
  return is_new_user_;
}
inline void account_info::set_is_new_user(bool value) {
  
  is_new_user_ = value;
  // @@protoc_insertion_point(field_set:user.account_info.is_new_user)
}

// int32 ared_id = 9;
inline void account_info::clear_ared_id() {
  ared_id_ = 0;
}
inline ::google::protobuf::int32 account_info::ared_id() const {
  // @@protoc_insertion_point(field_get:user.account_info.ared_id)
  return ared_id_;
}
inline void account_info::set_ared_id(::google::protobuf::int32 value) {
  
  ared_id_ = value;
  // @@protoc_insertion_point(field_set:user.account_info.ared_id)
}

// int32 login_channel = 10;
inline void account_info::clear_login_channel() {
  login_channel_ = 0;
}
inline ::google::protobuf::int32 account_info::login_channel() const {
  // @@protoc_insertion_point(field_get:user.account_info.login_channel)
  return login_channel_;
}
inline void account_info::set_login_channel(::google::protobuf::int32 value) {
  
  login_channel_ = value;
  // @@protoc_insertion_point(field_set:user.account_info.login_channel)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace user

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_user_2eproto
