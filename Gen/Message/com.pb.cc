// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com.proto

#include "com.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_com_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_http_data_HeadEntry_DoNotUse_com_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
namespace com {
class array_int32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<array_int32> _instance;
} _array_int32_default_instance_;
class array_int64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<array_int64> _instance;
} _array_int64_default_instance_;
class array_stringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<array_string> _instance;
} _array_string_default_instance_;
class array_float32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<array_float32> _instance;
} _array_float32_default_instance_;
class array_float64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<array_float64> _instance;
} _array_float64_default_instance_;
class arrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<array> _instance;
} _array_default_instance_;
class type_int32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<type_int32> _instance;
} _type_int32_default_instance_;
class type_int64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<type_int64> _instance;
} _type_int64_default_instance_;
class type_float32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<type_float32> _instance;
} _type_float32_default_instance_;
class type_float64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<type_float64> _instance;
} _type_float64_default_instance_;
class type_jsonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<type_json> _instance;
} _type_json_default_instance_;
class type_stringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<type_string> _instance;
} _type_string_default_instance_;
class typeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<type> _instance;
} _type_default_instance_;
class rpc_requestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<rpc_request> _instance;
} _rpc_request_default_instance_;
class rpc_responseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<rpc_response> _instance;
} _rpc_response_default_instance_;
class rpc_authDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<rpc_auth> _instance;
} _rpc_auth_default_instance_;
class rpcDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<rpc> _instance;
} _rpc_default_instance_;
class http_data_HeadEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<http_data_HeadEntry_DoNotUse> _instance;
} _http_data_HeadEntry_DoNotUse_default_instance_;
class http_dataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<http_data> _instance;
} _http_data_default_instance_;
class httpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<http> _instance;
} _http_default_instance_;
}  // namespace com
static void InitDefaultsarray_int32_com_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::_array_int32_default_instance_;
    new (ptr) ::com::array_int32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::array_int32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_array_int32_com_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsarray_int32_com_2eproto}, {}};

static void InitDefaultsarray_int64_com_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::_array_int64_default_instance_;
    new (ptr) ::com::array_int64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::array_int64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_array_int64_com_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsarray_int64_com_2eproto}, {}};

static void InitDefaultsarray_string_com_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::_array_string_default_instance_;
    new (ptr) ::com::array_string();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::array_string::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_array_string_com_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsarray_string_com_2eproto}, {}};

static void InitDefaultsarray_float32_com_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::_array_float32_default_instance_;
    new (ptr) ::com::array_float32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::array_float32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_array_float32_com_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsarray_float32_com_2eproto}, {}};

static void InitDefaultsarray_float64_com_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::_array_float64_default_instance_;
    new (ptr) ::com::array_float64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::array_float64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_array_float64_com_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsarray_float64_com_2eproto}, {}};

static void InitDefaultsarray_com_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::_array_default_instance_;
    new (ptr) ::com::array();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::array::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_array_com_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsarray_com_2eproto}, {}};

static void InitDefaultstype_int32_com_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::_type_int32_default_instance_;
    new (ptr) ::com::type_int32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::type_int32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_type_int32_com_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstype_int32_com_2eproto}, {}};

static void InitDefaultstype_int64_com_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::_type_int64_default_instance_;
    new (ptr) ::com::type_int64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::type_int64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_type_int64_com_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstype_int64_com_2eproto}, {}};

static void InitDefaultstype_float32_com_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::_type_float32_default_instance_;
    new (ptr) ::com::type_float32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::type_float32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_type_float32_com_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstype_float32_com_2eproto}, {}};

static void InitDefaultstype_float64_com_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::_type_float64_default_instance_;
    new (ptr) ::com::type_float64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::type_float64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_type_float64_com_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstype_float64_com_2eproto}, {}};

static void InitDefaultstype_json_com_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::_type_json_default_instance_;
    new (ptr) ::com::type_json();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::type_json::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_type_json_com_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstype_json_com_2eproto}, {}};

static void InitDefaultstype_string_com_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::_type_string_default_instance_;
    new (ptr) ::com::type_string();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::type_string::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_type_string_com_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstype_string_com_2eproto}, {}};

static void InitDefaultstype_com_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::_type_default_instance_;
    new (ptr) ::com::type();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::type::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_type_com_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstype_com_2eproto}, {}};

static void InitDefaultsrpc_request_com_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::_rpc_request_default_instance_;
    new (ptr) ::com::rpc_request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::rpc_request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_rpc_request_com_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsrpc_request_com_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsrpc_response_com_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::_rpc_response_default_instance_;
    new (ptr) ::com::rpc_response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::rpc_response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_rpc_response_com_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsrpc_response_com_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsrpc_auth_com_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::_rpc_auth_default_instance_;
    new (ptr) ::com::rpc_auth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::rpc_auth::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_rpc_auth_com_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsrpc_auth_com_2eproto}, {}};

static void InitDefaultsrpc_com_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::_rpc_default_instance_;
    new (ptr) ::com::rpc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::rpc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_rpc_com_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsrpc_com_2eproto}, {}};

static void InitDefaultshttp_data_HeadEntry_DoNotUse_com_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::_http_data_HeadEntry_DoNotUse_default_instance_;
    new (ptr) ::com::http_data_HeadEntry_DoNotUse();
  }
  ::com::http_data_HeadEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_http_data_HeadEntry_DoNotUse_com_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultshttp_data_HeadEntry_DoNotUse_com_2eproto}, {}};

static void InitDefaultshttp_data_com_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::_http_data_default_instance_;
    new (ptr) ::com::http_data();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::http_data::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_http_data_com_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultshttp_data_com_2eproto}, {
      &scc_info_http_data_HeadEntry_DoNotUse_com_2eproto.base,}};

static void InitDefaultshttp_com_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::_http_default_instance_;
    new (ptr) ::com::http();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::http::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_http_com_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultshttp_com_2eproto}, {}};

void InitDefaults_com_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_array_int32_com_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_array_int64_com_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_array_string_com_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_array_float32_com_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_array_float64_com_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_array_com_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_type_int32_com_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_type_int64_com_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_type_float32_com_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_type_float64_com_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_type_json_com_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_type_string_com_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_type_com_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_rpc_request_com_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_rpc_response_com_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_rpc_auth_com_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_rpc_com_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_http_data_HeadEntry_DoNotUse_com_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_http_data_com_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_http_com_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_com_2eproto[20];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_com_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_com_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_com_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::array_int32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::array_int32, array_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::array_int64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::array_int64, array_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::array_string, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::array_string, array_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::array_float32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::array_float32, array_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::array_float64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::array_float64, array_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::array, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::type_int32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::type_int32, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::type_int64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::type_int64, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::type_float32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::type_float32, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::type_float64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::type_float64, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::type_json, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::type_json, json_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::type_string, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::type_string, str_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::type, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::rpc_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::rpc_request, user_id_),
  PROTOBUF_FIELD_OFFSET(::com::rpc_request, rpc_id_),
  PROTOBUF_FIELD_OFFSET(::com::rpc_request, func_),
  PROTOBUF_FIELD_OFFSET(::com::rpc_request, address_),
  PROTOBUF_FIELD_OFFSET(::com::rpc_request, json_),
  PROTOBUF_FIELD_OFFSET(::com::rpc_request, type_),
  PROTOBUF_FIELD_OFFSET(::com::rpc_request, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::rpc_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::rpc_response, code_),
  PROTOBUF_FIELD_OFFSET(::com::rpc_response, rpc_id_),
  PROTOBUF_FIELD_OFFSET(::com::rpc_response, error_str_),
  PROTOBUF_FIELD_OFFSET(::com::rpc_response, json_),
  PROTOBUF_FIELD_OFFSET(::com::rpc_response, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::rpc_auth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::rpc_auth, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::rpc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::http_data_HeadEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::http_data_HeadEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::http_data_HeadEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::com::http_data_HeadEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::http_data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::http_data, path_),
  PROTOBUF_FIELD_OFFSET(::com::http_data, method_),
  PROTOBUF_FIELD_OFFSET(::com::http_data, version_),
  PROTOBUF_FIELD_OFFSET(::com::http_data, address_),
  PROTOBUF_FIELD_OFFSET(::com::http_data, data_),
  PROTOBUF_FIELD_OFFSET(::com::http_data, head_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::http, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::array_int32)},
  { 6, -1, sizeof(::com::array_int64)},
  { 12, -1, sizeof(::com::array_string)},
  { 18, -1, sizeof(::com::array_float32)},
  { 24, -1, sizeof(::com::array_float64)},
  { 30, -1, sizeof(::com::array)},
  { 35, -1, sizeof(::com::type_int32)},
  { 41, -1, sizeof(::com::type_int64)},
  { 47, -1, sizeof(::com::type_float32)},
  { 53, -1, sizeof(::com::type_float64)},
  { 59, -1, sizeof(::com::type_json)},
  { 65, -1, sizeof(::com::type_string)},
  { 71, -1, sizeof(::com::type)},
  { 76, -1, sizeof(::com::rpc_request)},
  { 88, -1, sizeof(::com::rpc_response)},
  { 98, -1, sizeof(::com::rpc_auth)},
  { 104, -1, sizeof(::com::rpc)},
  { 109, 116, sizeof(::com::http_data_HeadEntry_DoNotUse)},
  { 118, -1, sizeof(::com::http_data)},
  { 129, -1, sizeof(::com::http)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::_array_int32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::_array_int64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::_array_string_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::_array_float32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::_array_float64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::_array_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::_type_int32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::_type_int64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::_type_float32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::_type_float64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::_type_json_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::_type_string_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::_type_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::_rpc_request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::_rpc_response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::_rpc_auth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::_rpc_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::_http_data_HeadEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::_http_data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::_http_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_com_2eproto = {
  {}, AddDescriptors_com_2eproto, "com.proto", schemas,
  file_default_instances, TableStruct_com_2eproto::offsets,
  file_level_metadata_com_2eproto, 20, file_level_enum_descriptors_com_2eproto, file_level_service_descriptors_com_2eproto,
};

const char descriptor_table_protodef_com_2eproto[] =
  "\n\tcom.proto\022\003com\032\031google/protobuf/any.pr"
  "oto\"\204\001\n\005array\032\026\n\005int32\022\r\n\005array\030\001 \003(\005\032\026\n"
  "\005int64\022\r\n\005array\030\001 \003(\003\032\027\n\006string\022\r\n\005array"
  "\030\001 \003(\t\032\030\n\007float32\022\r\n\005array\030\001 \003(\002\032\030\n\007floa"
  "t64\022\r\n\005array\030\001 \003(\001\"\227\001\n\004type\032\026\n\005int32\022\r\n\005"
  "value\030\001 \001(\005\032\026\n\005int64\022\r\n\005value\030\001 \001(\003\032\030\n\007f"
  "loat32\022\r\n\005value\030\001 \001(\002\032\030\n\007float64\022\r\n\005valu"
  "e\030\001 \001(\001\032\024\n\004json\022\014\n\004json\030\001 \001(\t\032\025\n\006string\022"
  "\013\n\003str\030\001 \001(\t\"\325\002\n\003rpc\032\234\001\n\007request\022\017\n\007user"
  "_id\030\001 \001(\003\022\016\n\006rpc_id\030\002 \001(\003\022\014\n\004func\030\003 \001(\t\022"
  "\017\n\007address\030\004 \001(\t\022\014\n\004json\030\006 \001(\014\022\037\n\004type\030\007"
  " \001(\0162\021.com.rpc.msg_type\022\"\n\004data\030\005 \001(\0132\024."
  "google.protobuf.Any\032m\n\010response\022\014\n\004code\030"
  "\001 \001(\005\022\016\n\006rpc_id\030\002 \001(\003\022\021\n\terror_str\030\003 \001(\t"
  "\022\014\n\004json\030\006 \001(\014\022\"\n\004data\030\005 \001(\0132\024.google.pr"
  "otobuf.Any\032\025\n\004auth\022\r\n\005token\030\001 \001(\t\")\n\010msg"
  "_type\022\010\n\004none\020\000\022\010\n\004json\020\001\022\t\n\005proto\020\002\"\262\001\n"
  "\004http\032\251\001\n\004data\022\014\n\004path\030\001 \001(\t\022\016\n\006method\030\002"
  " \001(\t\022\017\n\007version\030\003 \001(\t\022\017\n\007address\030\004 \001(\t\022\014"
  "\n\004data\030\005 \001(\t\022&\n\004head\030\006 \003(\0132\030.com.http.da"
  "ta.HeadEntry\032+\n\tHeadEntry\022\013\n\003key\030\001 \001(\t\022\r"
  "\n\005value\030\002 \001(\t:\0028\001b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_com_2eproto = {
  false, InitDefaults_com_2eproto, 
  descriptor_table_protodef_com_2eproto,
  "com.proto", &assign_descriptors_table_com_2eproto, 865,
};

void AddDescriptors_com_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_google_2fprotobuf_2fany_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_com_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_com_2eproto = []() { AddDescriptors_com_2eproto(); return true; }();
namespace com {
const ::google::protobuf::EnumDescriptor* rpc_msg_type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_com_2eproto);
  return file_level_enum_descriptors_com_2eproto[0];
}
bool rpc_msg_type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const rpc_msg_type rpc::none;
const rpc_msg_type rpc::json;
const rpc_msg_type rpc::proto;
const rpc_msg_type rpc::msg_type_MIN;
const rpc_msg_type rpc::msg_type_MAX;
const int rpc::msg_type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void array_int32::InitAsDefaultInstance() {
}
class array_int32::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int array_int32::kArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

array_int32::array_int32()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.array.int32)
}
array_int32::array_int32(const array_int32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      array_(from.array_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.array.int32)
}

void array_int32::SharedCtor() {
}

array_int32::~array_int32() {
  // @@protoc_insertion_point(destructor:com.array.int32)
  SharedDtor();
}

void array_int32::SharedDtor() {
}

void array_int32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const array_int32& array_int32::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_array_int32_com_2eproto.base);
  return *internal_default_instance();
}


void array_int32::Clear() {
// @@protoc_insertion_point(message_clear_start:com.array.int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  array_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* array_int32::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<array_int32*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated int32 array = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 10) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedInt32Parser;
          object = msg->mutable_array();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        do {
          msg->add_array(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool array_int32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.array.int32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 array = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_array())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_array())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.array.int32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.array.int32)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void array_int32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.array.int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 array = 1;
  if (this->array_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_array_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->array_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->array(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.array.int32)
}

::google::protobuf::uint8* array_int32::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.array.int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 array = 1;
  if (this->array_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _array_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->array_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.array.int32)
  return target;
}

size_t array_int32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.array.int32)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 array = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->array_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _array_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void array_int32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.array.int32)
  GOOGLE_DCHECK_NE(&from, this);
  const array_int32* source =
      ::google::protobuf::DynamicCastToGenerated<array_int32>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.array.int32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.array.int32)
    MergeFrom(*source);
  }
}

void array_int32::MergeFrom(const array_int32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.array.int32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  array_.MergeFrom(from.array_);
}

void array_int32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.array.int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void array_int32::CopyFrom(const array_int32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.array.int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool array_int32::IsInitialized() const {
  return true;
}

void array_int32::Swap(array_int32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void array_int32::InternalSwap(array_int32* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  array_.InternalSwap(&other->array_);
}

::google::protobuf::Metadata array_int32::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2eproto);
  return ::file_level_metadata_com_2eproto[kIndexInFileMessages];
}


// ===================================================================

void array_int64::InitAsDefaultInstance() {
}
class array_int64::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int array_int64::kArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

array_int64::array_int64()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.array.int64)
}
array_int64::array_int64(const array_int64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      array_(from.array_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.array.int64)
}

void array_int64::SharedCtor() {
}

array_int64::~array_int64() {
  // @@protoc_insertion_point(destructor:com.array.int64)
  SharedDtor();
}

void array_int64::SharedDtor() {
}

void array_int64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const array_int64& array_int64::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_array_int64_com_2eproto.base);
  return *internal_default_instance();
}


void array_int64::Clear() {
// @@protoc_insertion_point(message_clear_start:com.array.int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  array_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* array_int64::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<array_int64*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated int64 array = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 10) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedInt64Parser;
          object = msg->mutable_array();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        do {
          msg->add_array(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool array_int64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.array.int64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 array = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_array())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_array())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.array.int64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.array.int64)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void array_int64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.array.int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 array = 1;
  if (this->array_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_array_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->array_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->array(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.array.int64)
}

::google::protobuf::uint8* array_int64::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.array.int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 array = 1;
  if (this->array_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _array_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->array_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.array.int64)
  return target;
}

size_t array_int64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.array.int64)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 array = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->array_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _array_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void array_int64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.array.int64)
  GOOGLE_DCHECK_NE(&from, this);
  const array_int64* source =
      ::google::protobuf::DynamicCastToGenerated<array_int64>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.array.int64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.array.int64)
    MergeFrom(*source);
  }
}

void array_int64::MergeFrom(const array_int64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.array.int64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  array_.MergeFrom(from.array_);
}

void array_int64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.array.int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void array_int64::CopyFrom(const array_int64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.array.int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool array_int64::IsInitialized() const {
  return true;
}

void array_int64::Swap(array_int64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void array_int64::InternalSwap(array_int64* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  array_.InternalSwap(&other->array_);
}

::google::protobuf::Metadata array_int64::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2eproto);
  return ::file_level_metadata_com_2eproto[kIndexInFileMessages];
}


// ===================================================================

void array_string::InitAsDefaultInstance() {
}
class array_string::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int array_string::kArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

array_string::array_string()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.array.string)
}
array_string::array_string(const array_string& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      array_(from.array_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.array.string)
}

void array_string::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_array_string_com_2eproto.base);
}

array_string::~array_string() {
  // @@protoc_insertion_point(destructor:com.array.string)
  SharedDtor();
}

void array_string::SharedDtor() {
}

void array_string::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const array_string& array_string::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_array_string_com_2eproto.base);
  return *internal_default_instance();
}


void array_string::Clear() {
// @@protoc_insertion_point(message_clear_start:com.array.string)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  array_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* array_string::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<array_string*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string array = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("com.array.string.array");
          object = msg->add_array();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool array_string::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.array.string)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string array = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_array()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->array(this->array_size() - 1).data(),
            static_cast<int>(this->array(this->array_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.array.string.array"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.array.string)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.array.string)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void array_string::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.array.string)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string array = 1;
  for (int i = 0, n = this->array_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->array(i).data(), static_cast<int>(this->array(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.array.string.array");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->array(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.array.string)
}

::google::protobuf::uint8* array_string::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.array.string)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string array = 1;
  for (int i = 0, n = this->array_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->array(i).data(), static_cast<int>(this->array(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.array.string.array");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->array(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.array.string)
  return target;
}

size_t array_string::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.array.string)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string array = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->array_size());
  for (int i = 0, n = this->array_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->array(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void array_string::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.array.string)
  GOOGLE_DCHECK_NE(&from, this);
  const array_string* source =
      ::google::protobuf::DynamicCastToGenerated<array_string>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.array.string)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.array.string)
    MergeFrom(*source);
  }
}

void array_string::MergeFrom(const array_string& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.array.string)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  array_.MergeFrom(from.array_);
}

void array_string::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.array.string)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void array_string::CopyFrom(const array_string& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.array.string)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool array_string::IsInitialized() const {
  return true;
}

void array_string::Swap(array_string* other) {
  if (other == this) return;
  InternalSwap(other);
}
void array_string::InternalSwap(array_string* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  array_.InternalSwap(CastToBase(&other->array_));
}

::google::protobuf::Metadata array_string::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2eproto);
  return ::file_level_metadata_com_2eproto[kIndexInFileMessages];
}


// ===================================================================

void array_float32::InitAsDefaultInstance() {
}
class array_float32::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int array_float32::kArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

array_float32::array_float32()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.array.float32)
}
array_float32::array_float32(const array_float32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      array_(from.array_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.array.float32)
}

void array_float32::SharedCtor() {
}

array_float32::~array_float32() {
  // @@protoc_insertion_point(destructor:com.array.float32)
  SharedDtor();
}

void array_float32::SharedDtor() {
}

void array_float32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const array_float32& array_float32::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_array_float32_com_2eproto.base);
  return *internal_default_instance();
}


void array_float32::Clear() {
// @@protoc_insertion_point(message_clear_start:com.array.float32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  array_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* array_float32::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<array_float32*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated float array = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 10) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedFloatParser;
          object = msg->mutable_array();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        do {
          msg->add_array(::google::protobuf::io::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 13 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool array_float32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.array.float32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float array = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_array())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_array())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.array.float32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.array.float32)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void array_float32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.array.float32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float array = 1;
  if (this->array_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_array_cached_byte_size_.load(
        std::memory_order_relaxed));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->array().data(), this->array_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.array.float32)
}

::google::protobuf::uint8* array_float32::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.array.float32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float array = 1;
  if (this->array_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _array_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->array_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.array.float32)
  return target;
}

size_t array_float32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.array.float32)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float array = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->array_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _array_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void array_float32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.array.float32)
  GOOGLE_DCHECK_NE(&from, this);
  const array_float32* source =
      ::google::protobuf::DynamicCastToGenerated<array_float32>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.array.float32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.array.float32)
    MergeFrom(*source);
  }
}

void array_float32::MergeFrom(const array_float32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.array.float32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  array_.MergeFrom(from.array_);
}

void array_float32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.array.float32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void array_float32::CopyFrom(const array_float32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.array.float32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool array_float32::IsInitialized() const {
  return true;
}

void array_float32::Swap(array_float32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void array_float32::InternalSwap(array_float32* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  array_.InternalSwap(&other->array_);
}

::google::protobuf::Metadata array_float32::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2eproto);
  return ::file_level_metadata_com_2eproto[kIndexInFileMessages];
}


// ===================================================================

void array_float64::InitAsDefaultInstance() {
}
class array_float64::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int array_float64::kArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

array_float64::array_float64()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.array.float64)
}
array_float64::array_float64(const array_float64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      array_(from.array_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.array.float64)
}

void array_float64::SharedCtor() {
}

array_float64::~array_float64() {
  // @@protoc_insertion_point(destructor:com.array.float64)
  SharedDtor();
}

void array_float64::SharedDtor() {
}

void array_float64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const array_float64& array_float64::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_array_float64_com_2eproto.base);
  return *internal_default_instance();
}


void array_float64::Clear() {
// @@protoc_insertion_point(message_clear_start:com.array.float64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  array_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* array_float64::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<array_float64*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated double array = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 10) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedDoubleParser;
          object = msg->mutable_array();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        do {
          msg->add_array(::google::protobuf::io::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 9 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool array_float64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.array.float64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double array = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_array())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_array())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.array.float64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.array.float64)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void array_float64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.array.float64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double array = 1;
  if (this->array_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_array_cached_byte_size_.load(
        std::memory_order_relaxed));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->array().data(), this->array_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.array.float64)
}

::google::protobuf::uint8* array_float64::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.array.float64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double array = 1;
  if (this->array_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _array_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->array_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.array.float64)
  return target;
}

size_t array_float64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.array.float64)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double array = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->array_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _array_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void array_float64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.array.float64)
  GOOGLE_DCHECK_NE(&from, this);
  const array_float64* source =
      ::google::protobuf::DynamicCastToGenerated<array_float64>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.array.float64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.array.float64)
    MergeFrom(*source);
  }
}

void array_float64::MergeFrom(const array_float64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.array.float64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  array_.MergeFrom(from.array_);
}

void array_float64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.array.float64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void array_float64::CopyFrom(const array_float64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.array.float64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool array_float64::IsInitialized() const {
  return true;
}

void array_float64::Swap(array_float64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void array_float64::InternalSwap(array_float64* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  array_.InternalSwap(&other->array_);
}

::google::protobuf::Metadata array_float64::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2eproto);
  return ::file_level_metadata_com_2eproto[kIndexInFileMessages];
}


// ===================================================================

void array::InitAsDefaultInstance() {
}
class array::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

array::array()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.array)
}
array::array(const array& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.array)
}

void array::SharedCtor() {
}

array::~array() {
  // @@protoc_insertion_point(destructor:com.array)
  SharedDtor();
}

void array::SharedDtor() {
}

void array::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const array& array::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_array_com_2eproto.base);
  return *internal_default_instance();
}


void array::Clear() {
// @@protoc_insertion_point(message_clear_start:com.array)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* array::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<array*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool array::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.array)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.array)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.array)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void array::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.array)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.array)
}

::google::protobuf::uint8* array::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.array)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.array)
  return target;
}

size_t array::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.array)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void array::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.array)
  GOOGLE_DCHECK_NE(&from, this);
  const array* source =
      ::google::protobuf::DynamicCastToGenerated<array>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.array)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.array)
    MergeFrom(*source);
  }
}

void array::MergeFrom(const array& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.array)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void array::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void array::CopyFrom(const array& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool array::IsInitialized() const {
  return true;
}

void array::Swap(array* other) {
  if (other == this) return;
  InternalSwap(other);
}
void array::InternalSwap(array* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata array::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2eproto);
  return ::file_level_metadata_com_2eproto[kIndexInFileMessages];
}


// ===================================================================

void type_int32::InitAsDefaultInstance() {
}
class type_int32::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int type_int32::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

type_int32::type_int32()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.type.int32)
}
type_int32::type_int32(const type_int32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:com.type.int32)
}

void type_int32::SharedCtor() {
  value_ = 0;
}

type_int32::~type_int32() {
  // @@protoc_insertion_point(destructor:com.type.int32)
  SharedDtor();
}

void type_int32::SharedDtor() {
}

void type_int32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const type_int32& type_int32::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_type_int32_com_2eproto.base);
  return *internal_default_instance();
}


void type_int32::Clear() {
// @@protoc_insertion_point(message_clear_start:com.type.int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* type_int32::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<type_int32*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_value(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool type_int32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.type.int32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.type.int32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.type.int32)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void type_int32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.type.int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.type.int32)
}

::google::protobuf::uint8* type_int32::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.type.int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.type.int32)
  return target;
}

size_t type_int32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.type.int32)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void type_int32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.type.int32)
  GOOGLE_DCHECK_NE(&from, this);
  const type_int32* source =
      ::google::protobuf::DynamicCastToGenerated<type_int32>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.type.int32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.type.int32)
    MergeFrom(*source);
  }
}

void type_int32::MergeFrom(const type_int32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.type.int32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void type_int32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.type.int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void type_int32::CopyFrom(const type_int32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.type.int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool type_int32::IsInitialized() const {
  return true;
}

void type_int32::Swap(type_int32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void type_int32::InternalSwap(type_int32* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata type_int32::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2eproto);
  return ::file_level_metadata_com_2eproto[kIndexInFileMessages];
}


// ===================================================================

void type_int64::InitAsDefaultInstance() {
}
class type_int64::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int type_int64::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

type_int64::type_int64()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.type.int64)
}
type_int64::type_int64(const type_int64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:com.type.int64)
}

void type_int64::SharedCtor() {
  value_ = PROTOBUF_LONGLONG(0);
}

type_int64::~type_int64() {
  // @@protoc_insertion_point(destructor:com.type.int64)
  SharedDtor();
}

void type_int64::SharedDtor() {
}

void type_int64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const type_int64& type_int64::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_type_int64_com_2eproto.base);
  return *internal_default_instance();
}


void type_int64::Clear() {
// @@protoc_insertion_point(message_clear_start:com.type.int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* type_int64::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<type_int64*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_value(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool type_int64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.type.int64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.type.int64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.type.int64)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void type_int64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.type.int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.type.int64)
}

::google::protobuf::uint8* type_int64::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.type.int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.type.int64)
  return target;
}

size_t type_int64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.type.int64)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void type_int64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.type.int64)
  GOOGLE_DCHECK_NE(&from, this);
  const type_int64* source =
      ::google::protobuf::DynamicCastToGenerated<type_int64>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.type.int64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.type.int64)
    MergeFrom(*source);
  }
}

void type_int64::MergeFrom(const type_int64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.type.int64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void type_int64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.type.int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void type_int64::CopyFrom(const type_int64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.type.int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool type_int64::IsInitialized() const {
  return true;
}

void type_int64::Swap(type_int64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void type_int64::InternalSwap(type_int64* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata type_int64::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2eproto);
  return ::file_level_metadata_com_2eproto[kIndexInFileMessages];
}


// ===================================================================

void type_float32::InitAsDefaultInstance() {
}
class type_float32::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int type_float32::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

type_float32::type_float32()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.type.float32)
}
type_float32::type_float32(const type_float32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:com.type.float32)
}

void type_float32::SharedCtor() {
  value_ = 0;
}

type_float32::~type_float32() {
  // @@protoc_insertion_point(destructor:com.type.float32)
  SharedDtor();
}

void type_float32::SharedDtor() {
}

void type_float32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const type_float32& type_float32::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_type_float32_com_2eproto.base);
  return *internal_default_instance();
}


void type_float32::Clear() {
// @@protoc_insertion_point(message_clear_start:com.type.float32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* type_float32::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<type_float32*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_value(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool type_float32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.type.float32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.type.float32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.type.float32)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void type_float32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.type.float32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.type.float32)
}

::google::protobuf::uint8* type_float32::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.type.float32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.type.float32)
  return target;
}

size_t type_float32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.type.float32)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  if (this->value() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void type_float32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.type.float32)
  GOOGLE_DCHECK_NE(&from, this);
  const type_float32* source =
      ::google::protobuf::DynamicCastToGenerated<type_float32>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.type.float32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.type.float32)
    MergeFrom(*source);
  }
}

void type_float32::MergeFrom(const type_float32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.type.float32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void type_float32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.type.float32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void type_float32::CopyFrom(const type_float32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.type.float32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool type_float32::IsInitialized() const {
  return true;
}

void type_float32::Swap(type_float32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void type_float32::InternalSwap(type_float32* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata type_float32::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2eproto);
  return ::file_level_metadata_com_2eproto[kIndexInFileMessages];
}


// ===================================================================

void type_float64::InitAsDefaultInstance() {
}
class type_float64::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int type_float64::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

type_float64::type_float64()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.type.float64)
}
type_float64::type_float64(const type_float64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:com.type.float64)
}

void type_float64::SharedCtor() {
  value_ = 0;
}

type_float64::~type_float64() {
  // @@protoc_insertion_point(destructor:com.type.float64)
  SharedDtor();
}

void type_float64::SharedDtor() {
}

void type_float64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const type_float64& type_float64::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_type_float64_com_2eproto.base);
  return *internal_default_instance();
}


void type_float64::Clear() {
// @@protoc_insertion_point(message_clear_start:com.type.float64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* type_float64::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<type_float64*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // double value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_value(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool type_float64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.type.float64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.type.float64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.type.float64)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void type_float64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.type.float64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.type.float64)
}

::google::protobuf::uint8* type_float64::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.type.float64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.type.float64)
  return target;
}

size_t type_float64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.type.float64)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double value = 1;
  if (this->value() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void type_float64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.type.float64)
  GOOGLE_DCHECK_NE(&from, this);
  const type_float64* source =
      ::google::protobuf::DynamicCastToGenerated<type_float64>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.type.float64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.type.float64)
    MergeFrom(*source);
  }
}

void type_float64::MergeFrom(const type_float64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.type.float64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void type_float64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.type.float64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void type_float64::CopyFrom(const type_float64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.type.float64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool type_float64::IsInitialized() const {
  return true;
}

void type_float64::Swap(type_float64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void type_float64::InternalSwap(type_float64* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata type_float64::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2eproto);
  return ::file_level_metadata_com_2eproto[kIndexInFileMessages];
}


// ===================================================================

void type_json::InitAsDefaultInstance() {
}
class type_json::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int type_json::kJsonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

type_json::type_json()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.type.json)
}
type_json::type_json(const type_json& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.json().size() > 0) {
    json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_);
  }
  // @@protoc_insertion_point(copy_constructor:com.type.json)
}

void type_json::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_type_json_com_2eproto.base);
  json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

type_json::~type_json() {
  // @@protoc_insertion_point(destructor:com.type.json)
  SharedDtor();
}

void type_json::SharedDtor() {
  json_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void type_json::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const type_json& type_json::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_type_json_com_2eproto.base);
  return *internal_default_instance();
}


void type_json::Clear() {
// @@protoc_insertion_point(message_clear_start:com.type.json)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* type_json::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<type_json*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string json = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.type.json.json");
        object = msg->mutable_json();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool type_json::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.type.json)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string json = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_json()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->json().data(), static_cast<int>(this->json().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.type.json.json"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.type.json)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.type.json)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void type_json::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.type.json)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string json = 1;
  if (this->json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->json().data(), static_cast<int>(this->json().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.type.json.json");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->json(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.type.json)
}

::google::protobuf::uint8* type_json::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.type.json)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string json = 1;
  if (this->json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->json().data(), static_cast<int>(this->json().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.type.json.json");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->json(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.type.json)
  return target;
}

size_t type_json::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.type.json)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string json = 1;
  if (this->json().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->json());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void type_json::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.type.json)
  GOOGLE_DCHECK_NE(&from, this);
  const type_json* source =
      ::google::protobuf::DynamicCastToGenerated<type_json>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.type.json)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.type.json)
    MergeFrom(*source);
  }
}

void type_json::MergeFrom(const type_json& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.type.json)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.json().size() > 0) {

    json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_);
  }
}

void type_json::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.type.json)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void type_json::CopyFrom(const type_json& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.type.json)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool type_json::IsInitialized() const {
  return true;
}

void type_json::Swap(type_json* other) {
  if (other == this) return;
  InternalSwap(other);
}
void type_json::InternalSwap(type_json* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  json_.Swap(&other->json_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata type_json::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2eproto);
  return ::file_level_metadata_com_2eproto[kIndexInFileMessages];
}


// ===================================================================

void type_string::InitAsDefaultInstance() {
}
class type_string::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int type_string::kStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

type_string::type_string()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.type.string)
}
type_string::type_string(const type_string& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.str().size() > 0) {
    str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
  }
  // @@protoc_insertion_point(copy_constructor:com.type.string)
}

void type_string::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_type_string_com_2eproto.base);
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

type_string::~type_string() {
  // @@protoc_insertion_point(destructor:com.type.string)
  SharedDtor();
}

void type_string::SharedDtor() {
  str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void type_string::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const type_string& type_string::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_type_string_com_2eproto.base);
  return *internal_default_instance();
}


void type_string::Clear() {
// @@protoc_insertion_point(message_clear_start:com.type.string)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* type_string::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<type_string*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string str = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.type.string.str");
        object = msg->mutable_str();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool type_string::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.type.string)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string str = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str().data(), static_cast<int>(this->str().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.type.string.str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.type.string)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.type.string)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void type_string::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.type.string)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string str = 1;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.type.string.str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->str(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.type.string)
}

::google::protobuf::uint8* type_string::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.type.string)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string str = 1;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.type.string.str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->str(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.type.string)
  return target;
}

size_t type_string::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.type.string)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string str = 1;
  if (this->str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void type_string::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.type.string)
  GOOGLE_DCHECK_NE(&from, this);
  const type_string* source =
      ::google::protobuf::DynamicCastToGenerated<type_string>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.type.string)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.type.string)
    MergeFrom(*source);
  }
}

void type_string::MergeFrom(const type_string& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.type.string)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.str().size() > 0) {

    str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
  }
}

void type_string::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.type.string)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void type_string::CopyFrom(const type_string& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.type.string)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool type_string::IsInitialized() const {
  return true;
}

void type_string::Swap(type_string* other) {
  if (other == this) return;
  InternalSwap(other);
}
void type_string::InternalSwap(type_string* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  str_.Swap(&other->str_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata type_string::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2eproto);
  return ::file_level_metadata_com_2eproto[kIndexInFileMessages];
}


// ===================================================================

void type::InitAsDefaultInstance() {
}
class type::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

type::type()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.type)
}
type::type(const type& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.type)
}

void type::SharedCtor() {
}

type::~type() {
  // @@protoc_insertion_point(destructor:com.type)
  SharedDtor();
}

void type::SharedDtor() {
}

void type::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const type& type::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_type_com_2eproto.base);
  return *internal_default_instance();
}


void type::Clear() {
// @@protoc_insertion_point(message_clear_start:com.type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* type::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<type*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool type::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.type)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.type)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.type)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void type::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.type)
}

::google::protobuf::uint8* type::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.type)
  return target;
}

size_t type::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.type)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void type::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.type)
  GOOGLE_DCHECK_NE(&from, this);
  const type* source =
      ::google::protobuf::DynamicCastToGenerated<type>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.type)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.type)
    MergeFrom(*source);
  }
}

void type::MergeFrom(const type& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.type)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void type::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void type::CopyFrom(const type& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool type::IsInitialized() const {
  return true;
}

void type::Swap(type* other) {
  if (other == this) return;
  InternalSwap(other);
}
void type::InternalSwap(type* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata type::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2eproto);
  return ::file_level_metadata_com_2eproto[kIndexInFileMessages];
}


// ===================================================================

void rpc_request::InitAsDefaultInstance() {
  ::com::_rpc_request_default_instance_._instance.get_mutable()->data_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
class rpc_request::HasBitSetters {
 public:
  static const ::google::protobuf::Any& data(const rpc_request* msg);
};

const ::google::protobuf::Any&
rpc_request::HasBitSetters::data(const rpc_request* msg) {
  return *msg->data_;
}
void rpc_request::clear_data() {
  if (GetArenaNoVirtual() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rpc_request::kUserIdFieldNumber;
const int rpc_request::kRpcIdFieldNumber;
const int rpc_request::kFuncFieldNumber;
const int rpc_request::kAddressFieldNumber;
const int rpc_request::kJsonFieldNumber;
const int rpc_request::kTypeFieldNumber;
const int rpc_request::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rpc_request::rpc_request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.rpc.request)
}
rpc_request::rpc_request(const rpc_request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  func_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.func().size() > 0) {
    func_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.func_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.json().size() > 0) {
    json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_);
  }
  if (from.has_data()) {
    data_ = new ::google::protobuf::Any(*from.data_);
  } else {
    data_ = nullptr;
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:com.rpc.request)
}

void rpc_request::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_rpc_request_com_2eproto.base);
  func_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&data_)) + sizeof(type_));
}

rpc_request::~rpc_request() {
  // @@protoc_insertion_point(destructor:com.rpc.request)
  SharedDtor();
}

void rpc_request::SharedDtor() {
  func_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  json_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void rpc_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const rpc_request& rpc_request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_rpc_request_com_2eproto.base);
  return *internal_default_instance();
}


void rpc_request::Clear() {
// @@protoc_insertion_point(message_clear_start:com.rpc.request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  func_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* rpc_request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<rpc_request*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_user_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 rpc_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_rpc_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string func = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.rpc.request.func");
        object = msg->mutable_func();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string address = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.rpc.request.address");
        object = msg->mutable_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Any data = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Any::_InternalParse;
        object = msg->mutable_data();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bytes json = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_json();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .com.rpc.msg_type type = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_type(static_cast<::com::rpc_msg_type>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool rpc_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.rpc.request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 rpc_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rpc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string func = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_func()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->func().data(), static_cast<int>(this->func().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.rpc.request.func"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.rpc.request.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes json = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_json()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.rpc.msg_type type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::com::rpc_msg_type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.rpc.request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.rpc.request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void rpc_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.rpc.request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->user_id(), output);
  }

  // int64 rpc_id = 2;
  if (this->rpc_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->rpc_id(), output);
  }

  // string func = 3;
  if (this->func().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->func().data(), static_cast<int>(this->func().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.rpc.request.func");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->func(), output);
  }

  // string address = 4;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.rpc.request.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->address(), output);
  }

  // .google.protobuf.Any data = 5;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::data(this), output);
  }

  // bytes json = 6;
  if (this->json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->json(), output);
  }

  // .com.rpc.msg_type type = 7;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.rpc.request)
}

::google::protobuf::uint8* rpc_request::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.rpc.request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->user_id(), target);
  }

  // int64 rpc_id = 2;
  if (this->rpc_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->rpc_id(), target);
  }

  // string func = 3;
  if (this->func().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->func().data(), static_cast<int>(this->func().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.rpc.request.func");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->func(), target);
  }

  // string address = 4;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.rpc.request.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->address(), target);
  }

  // .google.protobuf.Any data = 5;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::data(this), target);
  }

  // bytes json = 6;
  if (this->json().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->json(), target);
  }

  // .com.rpc.msg_type type = 7;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.rpc.request)
  return target;
}

size_t rpc_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.rpc.request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string func = 3;
  if (this->func().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->func());
  }

  // string address = 4;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // bytes json = 6;
  if (this->json().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->json());
  }

  // .google.protobuf.Any data = 5;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->user_id());
  }

  // int64 rpc_id = 2;
  if (this->rpc_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->rpc_id());
  }

  // .com.rpc.msg_type type = 7;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void rpc_request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.rpc.request)
  GOOGLE_DCHECK_NE(&from, this);
  const rpc_request* source =
      ::google::protobuf::DynamicCastToGenerated<rpc_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.rpc.request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.rpc.request)
    MergeFrom(*source);
  }
}

void rpc_request::MergeFrom(const rpc_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.rpc.request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.func().size() > 0) {

    func_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.func_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.json().size() > 0) {

    json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_);
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.rpc_id() != 0) {
    set_rpc_id(from.rpc_id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void rpc_request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.rpc.request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rpc_request::CopyFrom(const rpc_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.rpc.request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rpc_request::IsInitialized() const {
  return true;
}

void rpc_request::Swap(rpc_request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rpc_request::InternalSwap(rpc_request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  func_.Swap(&other->func_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  json_.Swap(&other->json_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_, other->data_);
  swap(user_id_, other->user_id_);
  swap(rpc_id_, other->rpc_id_);
  swap(type_, other->type_);
}

::google::protobuf::Metadata rpc_request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2eproto);
  return ::file_level_metadata_com_2eproto[kIndexInFileMessages];
}


// ===================================================================

void rpc_response::InitAsDefaultInstance() {
  ::com::_rpc_response_default_instance_._instance.get_mutable()->data_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
class rpc_response::HasBitSetters {
 public:
  static const ::google::protobuf::Any& data(const rpc_response* msg);
};

const ::google::protobuf::Any&
rpc_response::HasBitSetters::data(const rpc_response* msg) {
  return *msg->data_;
}
void rpc_response::clear_data() {
  if (GetArenaNoVirtual() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rpc_response::kCodeFieldNumber;
const int rpc_response::kRpcIdFieldNumber;
const int rpc_response::kErrorStrFieldNumber;
const int rpc_response::kJsonFieldNumber;
const int rpc_response::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rpc_response::rpc_response()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.rpc.response)
}
rpc_response::rpc_response(const rpc_response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_str().size() > 0) {
    error_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_str_);
  }
  json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.json().size() > 0) {
    json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_);
  }
  if (from.has_data()) {
    data_ = new ::google::protobuf::Any(*from.data_);
  } else {
    data_ = nullptr;
  }
  ::memcpy(&rpc_id_, &from.rpc_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&rpc_id_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:com.rpc.response)
}

void rpc_response::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_rpc_response_com_2eproto.base);
  error_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&data_)) + sizeof(code_));
}

rpc_response::~rpc_response() {
  // @@protoc_insertion_point(destructor:com.rpc.response)
  SharedDtor();
}

void rpc_response::SharedDtor() {
  error_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  json_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void rpc_response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const rpc_response& rpc_response::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_rpc_response_com_2eproto.base);
  return *internal_default_instance();
}


void rpc_response::Clear() {
// @@protoc_insertion_point(message_clear_start:com.rpc.response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  ::memset(&rpc_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&rpc_id_)) + sizeof(code_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* rpc_response::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<rpc_response*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_code(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 rpc_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_rpc_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string error_str = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.rpc.response.error_str");
        object = msg->mutable_error_str();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Any data = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Any::_InternalParse;
        object = msg->mutable_data();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bytes json = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_json();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool rpc_response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.rpc.response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 rpc_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rpc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_str = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_str().data(), static_cast<int>(this->error_str().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.rpc.response.error_str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes json = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_json()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.rpc.response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.rpc.response)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void rpc_response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.rpc.response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // int64 rpc_id = 2;
  if (this->rpc_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->rpc_id(), output);
  }

  // string error_str = 3;
  if (this->error_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_str().data(), static_cast<int>(this->error_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.rpc.response.error_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error_str(), output);
  }

  // .google.protobuf.Any data = 5;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::data(this), output);
  }

  // bytes json = 6;
  if (this->json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->json(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.rpc.response)
}

::google::protobuf::uint8* rpc_response::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.rpc.response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // int64 rpc_id = 2;
  if (this->rpc_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->rpc_id(), target);
  }

  // string error_str = 3;
  if (this->error_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_str().data(), static_cast<int>(this->error_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.rpc.response.error_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error_str(), target);
  }

  // .google.protobuf.Any data = 5;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::data(this), target);
  }

  // bytes json = 6;
  if (this->json().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->json(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.rpc.response)
  return target;
}

size_t rpc_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.rpc.response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_str = 3;
  if (this->error_str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_str());
  }

  // bytes json = 6;
  if (this->json().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->json());
  }

  // .google.protobuf.Any data = 5;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // int64 rpc_id = 2;
  if (this->rpc_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->rpc_id());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void rpc_response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.rpc.response)
  GOOGLE_DCHECK_NE(&from, this);
  const rpc_response* source =
      ::google::protobuf::DynamicCastToGenerated<rpc_response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.rpc.response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.rpc.response)
    MergeFrom(*source);
  }
}

void rpc_response::MergeFrom(const rpc_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.rpc.response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_str().size() > 0) {

    error_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_str_);
  }
  if (from.json().size() > 0) {

    json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_);
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
  if (from.rpc_id() != 0) {
    set_rpc_id(from.rpc_id());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void rpc_response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.rpc.response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rpc_response::CopyFrom(const rpc_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.rpc.response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rpc_response::IsInitialized() const {
  return true;
}

void rpc_response::Swap(rpc_response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rpc_response::InternalSwap(rpc_response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  error_str_.Swap(&other->error_str_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  json_.Swap(&other->json_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_, other->data_);
  swap(rpc_id_, other->rpc_id_);
  swap(code_, other->code_);
}

::google::protobuf::Metadata rpc_response::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2eproto);
  return ::file_level_metadata_com_2eproto[kIndexInFileMessages];
}


// ===================================================================

void rpc_auth::InitAsDefaultInstance() {
}
class rpc_auth::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rpc_auth::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rpc_auth::rpc_auth()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.rpc.auth)
}
rpc_auth::rpc_auth(const rpc_auth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:com.rpc.auth)
}

void rpc_auth::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_rpc_auth_com_2eproto.base);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

rpc_auth::~rpc_auth() {
  // @@protoc_insertion_point(destructor:com.rpc.auth)
  SharedDtor();
}

void rpc_auth::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void rpc_auth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const rpc_auth& rpc_auth::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_rpc_auth_com_2eproto.base);
  return *internal_default_instance();
}


void rpc_auth::Clear() {
// @@protoc_insertion_point(message_clear_start:com.rpc.auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* rpc_auth::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<rpc_auth*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.rpc.auth.token");
        object = msg->mutable_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool rpc_auth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.rpc.auth)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.rpc.auth.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.rpc.auth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.rpc.auth)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void rpc_auth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.rpc.auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.rpc.auth.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.rpc.auth)
}

::google::protobuf::uint8* rpc_auth::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.rpc.auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.rpc.auth.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.rpc.auth)
  return target;
}

size_t rpc_auth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.rpc.auth)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void rpc_auth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.rpc.auth)
  GOOGLE_DCHECK_NE(&from, this);
  const rpc_auth* source =
      ::google::protobuf::DynamicCastToGenerated<rpc_auth>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.rpc.auth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.rpc.auth)
    MergeFrom(*source);
  }
}

void rpc_auth::MergeFrom(const rpc_auth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.rpc.auth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void rpc_auth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.rpc.auth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rpc_auth::CopyFrom(const rpc_auth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.rpc.auth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rpc_auth::IsInitialized() const {
  return true;
}

void rpc_auth::Swap(rpc_auth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rpc_auth::InternalSwap(rpc_auth* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata rpc_auth::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2eproto);
  return ::file_level_metadata_com_2eproto[kIndexInFileMessages];
}


// ===================================================================

void rpc::InitAsDefaultInstance() {
}
class rpc::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rpc::rpc()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.rpc)
}
rpc::rpc(const rpc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.rpc)
}

void rpc::SharedCtor() {
}

rpc::~rpc() {
  // @@protoc_insertion_point(destructor:com.rpc)
  SharedDtor();
}

void rpc::SharedDtor() {
}

void rpc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const rpc& rpc::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_rpc_com_2eproto.base);
  return *internal_default_instance();
}


void rpc::Clear() {
// @@protoc_insertion_point(message_clear_start:com.rpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* rpc::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<rpc*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool rpc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.rpc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.rpc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.rpc)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void rpc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.rpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.rpc)
}

::google::protobuf::uint8* rpc::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.rpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.rpc)
  return target;
}

size_t rpc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.rpc)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void rpc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.rpc)
  GOOGLE_DCHECK_NE(&from, this);
  const rpc* source =
      ::google::protobuf::DynamicCastToGenerated<rpc>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.rpc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.rpc)
    MergeFrom(*source);
  }
}

void rpc::MergeFrom(const rpc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.rpc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void rpc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.rpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rpc::CopyFrom(const rpc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.rpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rpc::IsInitialized() const {
  return true;
}

void rpc::Swap(rpc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rpc::InternalSwap(rpc* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata rpc::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2eproto);
  return ::file_level_metadata_com_2eproto[kIndexInFileMessages];
}


// ===================================================================

http_data_HeadEntry_DoNotUse::http_data_HeadEntry_DoNotUse() {}
http_data_HeadEntry_DoNotUse::http_data_HeadEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void http_data_HeadEntry_DoNotUse::MergeFrom(const http_data_HeadEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata http_data_HeadEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2eproto);
  return ::file_level_metadata_com_2eproto[17];
}
void http_data_HeadEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool http_data_HeadEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      http_data_HeadEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "com.http.data.HeadEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "com.http.data.HeadEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void http_data::InitAsDefaultInstance() {
}
class http_data::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int http_data::kPathFieldNumber;
const int http_data::kMethodFieldNumber;
const int http_data::kVersionFieldNumber;
const int http_data::kAddressFieldNumber;
const int http_data::kDataFieldNumber;
const int http_data::kHeadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

http_data::http_data()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.http.data)
}
http_data::http_data(const http_data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  head_.MergeFrom(from.head_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.method().size() > 0) {
    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:com.http.data)
}

void http_data::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_http_data_com_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

http_data::~http_data() {
  // @@protoc_insertion_point(destructor:com.http.data)
  SharedDtor();
}

void http_data::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void http_data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const http_data& http_data::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_http_data_com_2eproto.base);
  return *internal_default_instance();
}


void http_data::Clear() {
// @@protoc_insertion_point(message_clear_start:com.http.data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  head_.Clear();
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* http_data::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<http_data*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.http.data.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string method = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.http.data.method");
        object = msg->mutable_method();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string version = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.http.data.version");
        object = msg->mutable_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string address = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.http.data.address");
        object = msg->mutable_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string data = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.http.data.data");
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // map<string, string> head = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::com::http_data_HeadEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->head_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool http_data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.http.data)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.http.data.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string method = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method().data(), static_cast<int>(this->method().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.http.data.method"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.http.data.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.http.data.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.http.data.data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> head = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          http_data_HeadEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              http_data_HeadEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&head_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.http.data.HeadEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.http.data.HeadEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.http.data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.http.data)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void http_data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.http.data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.http.data.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // string method = 2;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.http.data.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->method(), output);
  }

  // string version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.http.data.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->version(), output);
  }

  // string address = 4;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.http.data.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->address(), output);
  }

  // string data = 5;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.http.data.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->data(), output);
  }

  // map<string, string> head = 6;
  if (!this->head().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "com.http.data.HeadEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "com.http.data.HeadEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->head().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->head().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->head().begin();
          it != this->head().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<http_data_HeadEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(head_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(6, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<http_data_HeadEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->head().begin();
          it != this->head().end(); ++it) {
        entry.reset(head_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(6, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.http.data)
}

::google::protobuf::uint8* http_data::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.http.data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.http.data.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // string method = 2;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.http.data.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->method(), target);
  }

  // string version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.http.data.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->version(), target);
  }

  // string address = 4;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.http.data.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->address(), target);
  }

  // string data = 5;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.http.data.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->data(), target);
  }

  // map<string, string> head = 6;
  if (!this->head().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "com.http.data.HeadEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "com.http.data.HeadEntry.value");
      }
    };

    if (false &&
        this->head().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->head().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->head().begin();
          it != this->head().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<http_data_HeadEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(head_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(6, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<http_data_HeadEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->head().begin();
          it != this->head().end(); ++it) {
        entry.reset(head_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(6, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.http.data)
  return target;
}

size_t http_data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.http.data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> head = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->head_size());
  {
    ::std::unique_ptr<http_data_HeadEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->head().begin();
        it != this->head().end(); ++it) {
      entry.reset(head_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // string method = 2;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  // string version = 3;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string address = 4;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string data = 5;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void http_data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.http.data)
  GOOGLE_DCHECK_NE(&from, this);
  const http_data* source =
      ::google::protobuf::DynamicCastToGenerated<http_data>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.http.data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.http.data)
    MergeFrom(*source);
  }
}

void http_data::MergeFrom(const http_data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.http.data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  head_.MergeFrom(from.head_);
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.method().size() > 0) {

    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void http_data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.http.data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void http_data::CopyFrom(const http_data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.http.data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool http_data::IsInitialized() const {
  return true;
}

void http_data::Swap(http_data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void http_data::InternalSwap(http_data* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  head_.Swap(&other->head_);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  method_.Swap(&other->method_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata http_data::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2eproto);
  return ::file_level_metadata_com_2eproto[kIndexInFileMessages];
}


// ===================================================================

void http::InitAsDefaultInstance() {
}
class http::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

http::http()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.http)
}
http::http(const http& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.http)
}

void http::SharedCtor() {
}

http::~http() {
  // @@protoc_insertion_point(destructor:com.http)
  SharedDtor();
}

void http::SharedDtor() {
}

void http::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const http& http::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_http_com_2eproto.base);
  return *internal_default_instance();
}


void http::Clear() {
// @@protoc_insertion_point(message_clear_start:com.http)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* http::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<http*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool http::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.http)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.http)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.http)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void http::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.http)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.http)
}

::google::protobuf::uint8* http::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.http)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.http)
  return target;
}

size_t http::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.http)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void http::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.http)
  GOOGLE_DCHECK_NE(&from, this);
  const http* source =
      ::google::protobuf::DynamicCastToGenerated<http>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.http)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.http)
    MergeFrom(*source);
  }
}

void http::MergeFrom(const http& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.http)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void http::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.http)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void http::CopyFrom(const http& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.http)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool http::IsInitialized() const {
  return true;
}

void http::Swap(http* other) {
  if (other == this) return;
  InternalSwap(other);
}
void http::InternalSwap(http* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata http::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_com_2eproto);
  return ::file_level_metadata_com_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace com
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::com::array_int32* Arena::CreateMaybeMessage< ::com::array_int32 >(Arena* arena) {
  return Arena::CreateInternal< ::com::array_int32 >(arena);
}
template<> PROTOBUF_NOINLINE ::com::array_int64* Arena::CreateMaybeMessage< ::com::array_int64 >(Arena* arena) {
  return Arena::CreateInternal< ::com::array_int64 >(arena);
}
template<> PROTOBUF_NOINLINE ::com::array_string* Arena::CreateMaybeMessage< ::com::array_string >(Arena* arena) {
  return Arena::CreateInternal< ::com::array_string >(arena);
}
template<> PROTOBUF_NOINLINE ::com::array_float32* Arena::CreateMaybeMessage< ::com::array_float32 >(Arena* arena) {
  return Arena::CreateInternal< ::com::array_float32 >(arena);
}
template<> PROTOBUF_NOINLINE ::com::array_float64* Arena::CreateMaybeMessage< ::com::array_float64 >(Arena* arena) {
  return Arena::CreateInternal< ::com::array_float64 >(arena);
}
template<> PROTOBUF_NOINLINE ::com::array* Arena::CreateMaybeMessage< ::com::array >(Arena* arena) {
  return Arena::CreateInternal< ::com::array >(arena);
}
template<> PROTOBUF_NOINLINE ::com::type_int32* Arena::CreateMaybeMessage< ::com::type_int32 >(Arena* arena) {
  return Arena::CreateInternal< ::com::type_int32 >(arena);
}
template<> PROTOBUF_NOINLINE ::com::type_int64* Arena::CreateMaybeMessage< ::com::type_int64 >(Arena* arena) {
  return Arena::CreateInternal< ::com::type_int64 >(arena);
}
template<> PROTOBUF_NOINLINE ::com::type_float32* Arena::CreateMaybeMessage< ::com::type_float32 >(Arena* arena) {
  return Arena::CreateInternal< ::com::type_float32 >(arena);
}
template<> PROTOBUF_NOINLINE ::com::type_float64* Arena::CreateMaybeMessage< ::com::type_float64 >(Arena* arena) {
  return Arena::CreateInternal< ::com::type_float64 >(arena);
}
template<> PROTOBUF_NOINLINE ::com::type_json* Arena::CreateMaybeMessage< ::com::type_json >(Arena* arena) {
  return Arena::CreateInternal< ::com::type_json >(arena);
}
template<> PROTOBUF_NOINLINE ::com::type_string* Arena::CreateMaybeMessage< ::com::type_string >(Arena* arena) {
  return Arena::CreateInternal< ::com::type_string >(arena);
}
template<> PROTOBUF_NOINLINE ::com::type* Arena::CreateMaybeMessage< ::com::type >(Arena* arena) {
  return Arena::CreateInternal< ::com::type >(arena);
}
template<> PROTOBUF_NOINLINE ::com::rpc_request* Arena::CreateMaybeMessage< ::com::rpc_request >(Arena* arena) {
  return Arena::CreateInternal< ::com::rpc_request >(arena);
}
template<> PROTOBUF_NOINLINE ::com::rpc_response* Arena::CreateMaybeMessage< ::com::rpc_response >(Arena* arena) {
  return Arena::CreateInternal< ::com::rpc_response >(arena);
}
template<> PROTOBUF_NOINLINE ::com::rpc_auth* Arena::CreateMaybeMessage< ::com::rpc_auth >(Arena* arena) {
  return Arena::CreateInternal< ::com::rpc_auth >(arena);
}
template<> PROTOBUF_NOINLINE ::com::rpc* Arena::CreateMaybeMessage< ::com::rpc >(Arena* arena) {
  return Arena::CreateInternal< ::com::rpc >(arena);
}
template<> PROTOBUF_NOINLINE ::com::http_data_HeadEntry_DoNotUse* Arena::CreateMaybeMessage< ::com::http_data_HeadEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::com::http_data_HeadEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::com::http_data* Arena::CreateMaybeMessage< ::com::http_data >(Arena* arena) {
  return Arena::CreateInternal< ::com::http_data >(arena);
}
template<> PROTOBUF_NOINLINE ::com::http* Arena::CreateMaybeMessage< ::com::http >(Arena* arena) {
  return Arena::CreateInternal< ::com::http >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
